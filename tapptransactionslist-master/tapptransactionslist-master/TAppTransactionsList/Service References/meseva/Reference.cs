//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TAppTransactionsList.meseva {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://TG.org/", ConfigurationName="meseva.MeesevaMobileWebserviceSoap")]
    public interface MeesevaMobileWebserviceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSubtribeFather", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateSubtribeFather(string UserId, string Password, string DistrictID, string Caste, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSubtribeFather", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateSubtribeFatherAsync(string UserId, string Password, string DistrictID, string Caste, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSubtribeMother", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateSubtribeMother(string UserId, string Password, string DistrictID, string Caste);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSubtribeMother", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateSubtribeMotherAsync(string UserId, string Password, string DistrictID, string Caste);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateReligionprofessedbyApplicantFatherAndMother", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateReligionprofessedbyApplicantFatherAndMother(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateReligionprofessedbyApplicantFatherAndMother", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateReligionprofessedbyApplicantFatherAndMotherAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCommunityDateofBirthTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCommunityDateofBirthTransactionNo(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string ServiceType, 
                    string ApplicationNumber, 
                    string AADHARCardNo, 
                    string ApplicantName, 
                    string Gender, 
                    string FatherOrHusbandName, 
                    string MotherName, 
                    string DateofBirth, 
                    string Age, 
                    string PresentDoorNo, 
                    string PresentLocality, 
                    string PresentDistrict, 
                    string PresentMandal, 
                    string PresentVillage, 
                    string PresentPinCode, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPinCode, 
                    string ResidenceDoorNo, 
                    string ResidencetLocality, 
                    string ResidenceDistrict, 
                    string ResidenceMandal, 
                    string ResidenceVillage, 
                    string ResidencetPinCode, 
                    string PlaceofBirthDoorNo, 
                    string PlaceofBirthLocality, 
                    string PlaceofBirthState, 
                    string PlaceofBirthDistrict, 
                    string PlaceofBirthMandal, 
                    string PlaceofBirthVillage, 
                    string PlaceofBirthPinCode, 
                    string CommunityCertificatePast_Yes_No, 
                    string CommunityOftheApplicant, 
                    string SubtribeOrSubgroupofApplicant, 
                    string CommunityoftheFather, 
                    string Subtribefather, 
                    string CommunityoftheMother, 
                    string SubtribeMother, 
                    string ReligionprofessedbyApplicant, 
                    string ReligionprofessedbyFather, 
                    string ReligionprofessedbyMother, 
                    string NaturalBornOrAdoptedBaby, 
                    string HouseholdSurveyNo, 
                    string MobileNo, 
                    string Email, 
                    string DeliveryType, 
                    string ServiceCharge, 
                    string PostalCharge, 
                    string UserCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_DOB_Study_Cert_and_SSC_Marks_Memo, 
                    string Doc_Community_Cert, 
                    string Doc_Immovable_Properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCommunityDateofBirthTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCommunityDateofBirthTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string ServiceType, 
                    string ApplicationNumber, 
                    string AADHARCardNo, 
                    string ApplicantName, 
                    string Gender, 
                    string FatherOrHusbandName, 
                    string MotherName, 
                    string DateofBirth, 
                    string Age, 
                    string PresentDoorNo, 
                    string PresentLocality, 
                    string PresentDistrict, 
                    string PresentMandal, 
                    string PresentVillage, 
                    string PresentPinCode, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPinCode, 
                    string ResidenceDoorNo, 
                    string ResidencetLocality, 
                    string ResidenceDistrict, 
                    string ResidenceMandal, 
                    string ResidenceVillage, 
                    string ResidencetPinCode, 
                    string PlaceofBirthDoorNo, 
                    string PlaceofBirthLocality, 
                    string PlaceofBirthState, 
                    string PlaceofBirthDistrict, 
                    string PlaceofBirthMandal, 
                    string PlaceofBirthVillage, 
                    string PlaceofBirthPinCode, 
                    string CommunityCertificatePast_Yes_No, 
                    string CommunityOftheApplicant, 
                    string SubtribeOrSubgroupofApplicant, 
                    string CommunityoftheFather, 
                    string Subtribefather, 
                    string CommunityoftheMother, 
                    string SubtribeMother, 
                    string ReligionprofessedbyApplicant, 
                    string ReligionprofessedbyFather, 
                    string ReligionprofessedbyMother, 
                    string NaturalBornOrAdoptedBaby, 
                    string HouseholdSurveyNo, 
                    string MobileNo, 
                    string Email, 
                    string DeliveryType, 
                    string ServiceCharge, 
                    string PostalCharge, 
                    string UserCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_DOB_Study_Cert_and_SSC_Marks_Memo, 
                    string Doc_Community_Cert, 
                    string Doc_Immovable_Properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCommunityDateofBirthCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCommunityDateofBirthCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCommunityDateofBirthCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCommunityDateofBirthCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateDivision", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateDivision(string UserId, string Password, string DistrictID, string MandalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateDivision", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateDivisionAsync(string UserId, string Password, string DistrictID, string MandalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMutationType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateMutationType(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMutationType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateMutationTypeAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMutationCaste", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateMutationCaste(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMutationCaste", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateMutationCasteAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateKathaDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateKathaDetails(string userid, string password, string VillageId, string SurveyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateKathaDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateKathaDetailsAsync(string userid, string password, string VillageId, string SurveyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSubRegistar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateSubRegistar(string UserId, string Password, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSubRegistar", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateSubRegistarAsync(string UserId, string Password, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetMutationApplicationTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetMutationApplicationTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string ApplicationNumber, 
                    string AADHARCardNo, 
                    string BuyerName, 
                    string FatherOrHusbandName, 
                    string Gender, 
                    string DateOfBirth, 
                    string BuyerKathaNo, 
                    string Permanent_State, 
                    string Permanent_DoorNo, 
                    string Permanent_Locality, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string Permanent_PinCode, 
                    string Postal_State, 
                    string Postal_DoorNo, 
                    string Postal_Locality, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_PinCode, 
                    string MobileNo, 
                    string Phone, 
                    string Email, 
                    string Remarks, 
                    string RationCardNo, 
                    string Delivery_Type, 
                    string docdistrict, 
                    string docmandal, 
                    string docvillage, 
                    string Division, 
                    string Caste, 
                    string MutationType, 
                    string GridMutationDetails, 
                    string User_Charge, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string Challan_Amount, 
                    string Total_Amount, 
                    string Doc_Registered_Document_Copies, 
                    string Doc_Old_Pattadar_Passbook, 
                    string Doc_Passport_Size_photo, 
                    string Doc_Signature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetMutationApplicationTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetMutationApplicationTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string ApplicationNumber, 
                    string AADHARCardNo, 
                    string BuyerName, 
                    string FatherOrHusbandName, 
                    string Gender, 
                    string DateOfBirth, 
                    string BuyerKathaNo, 
                    string Permanent_State, 
                    string Permanent_DoorNo, 
                    string Permanent_Locality, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string Permanent_PinCode, 
                    string Postal_State, 
                    string Postal_DoorNo, 
                    string Postal_Locality, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_PinCode, 
                    string MobileNo, 
                    string Phone, 
                    string Email, 
                    string Remarks, 
                    string RationCardNo, 
                    string Delivery_Type, 
                    string docdistrict, 
                    string docmandal, 
                    string docvillage, 
                    string Division, 
                    string Caste, 
                    string MutationType, 
                    string GridMutationDetails, 
                    string User_Charge, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string Challan_Amount, 
                    string Total_Amount, 
                    string Doc_Registered_Document_Copies, 
                    string Doc_Old_Pattadar_Passbook, 
                    string Doc_Passport_Size_photo, 
                    string Doc_Signature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIssueOfNoForStoringOfPetroleumProductsTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIssueOfNoForStoringOfPetroleumProductsTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string ApplicationNumber, 
                    string ApplicantName, 
                    string ApplicantCalling, 
                    string FatherOrHusbandName, 
                    string AadhaarNo, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentLocality, 
                    string PermanentDoorNo, 
                    string PermanentPincode, 
                    string DocDistrict, 
                    string DocMandal, 
                    string DocVillage, 
                    string DOCPincode, 
                    string NearestPoliceStation, 
                    string NearestRailwayStation, 
                    string SurveyNumber, 
                    string LicenceNumber, 
                    string LicenceType, 
                    string NumberOfLicence, 
                    string ImpAIB_Quantity_In_litres, 
                    string ImpANIB, 
                    string ImpATotal, 
                    string ImpBIB, 
                    string ImpBNIB, 
                    string ImpBTotal, 
                    string ImpCIB, 
                    string ImpCNIB, 
                    string ImpCTotal, 
                    string ImpTotal, 
                    string StoredAIB_Quantity_In_litres, 
                    string StoredANIB, 
                    string StoredATotal, 
                    string StoredBIB, 
                    string StoredBNIB, 
                    string StoredBTotal, 
                    string StoredCIB, 
                    string StoredCNIB, 
                    string StoredCTotal, 
                    string StoredTotal, 
                    string InfName, 
                    string InfRelation, 
                    string InfEmail, 
                    string InfMobileNo, 
                    string DeliveryType, 
                    string StateID, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalMobile, 
                    string PostalLocality, 
                    string PostalDoorNo, 
                    string PostalPinCode, 
                    string Phone, 
                    string User_Charge, 
                    string Postal_Charge, 
                    string Service_Charge, 
                    string Total_Amount, 
                    string Doc_Site_Plan, 
                    string Doc_Copyof_PassbookOrtitle_deedOrsale_deed, 
                    string Doc_Lease_Agreement, 
                    string Doc_Letterof_oilcompany, 
                    string Doc_Extract_Pahani);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIssueOfNoForStoringOfPetroleumProductsTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIssueOfNoForStoringOfPetroleumProductsTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string ApplicationNumber, 
                    string ApplicantName, 
                    string ApplicantCalling, 
                    string FatherOrHusbandName, 
                    string AadhaarNo, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentLocality, 
                    string PermanentDoorNo, 
                    string PermanentPincode, 
                    string DocDistrict, 
                    string DocMandal, 
                    string DocVillage, 
                    string DOCPincode, 
                    string NearestPoliceStation, 
                    string NearestRailwayStation, 
                    string SurveyNumber, 
                    string LicenceNumber, 
                    string LicenceType, 
                    string NumberOfLicence, 
                    string ImpAIB_Quantity_In_litres, 
                    string ImpANIB, 
                    string ImpATotal, 
                    string ImpBIB, 
                    string ImpBNIB, 
                    string ImpBTotal, 
                    string ImpCIB, 
                    string ImpCNIB, 
                    string ImpCTotal, 
                    string ImpTotal, 
                    string StoredAIB_Quantity_In_litres, 
                    string StoredANIB, 
                    string StoredATotal, 
                    string StoredBIB, 
                    string StoredBNIB, 
                    string StoredBTotal, 
                    string StoredCIB, 
                    string StoredCNIB, 
                    string StoredCTotal, 
                    string StoredTotal, 
                    string InfName, 
                    string InfRelation, 
                    string InfEmail, 
                    string InfMobileNo, 
                    string DeliveryType, 
                    string StateID, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalMobile, 
                    string PostalLocality, 
                    string PostalDoorNo, 
                    string PostalPinCode, 
                    string Phone, 
                    string User_Charge, 
                    string Postal_Charge, 
                    string Service_Charge, 
                    string Total_Amount, 
                    string Doc_Site_Plan, 
                    string Doc_Copyof_PassbookOrtitle_deedOrsale_deed, 
                    string Doc_Lease_Agreement, 
                    string Doc_Letterof_oilcompany, 
                    string Doc_Extract_Pahani);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateLicenceType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateLicenceType(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateLicenceType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateLicenceTypeAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPetroleumProductsCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPetroleumProductsCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPetroleumProductsCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPetroleumProductsCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIssueOfOccupancyRightScertForINAMLANDSTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIssueOfOccupancyRightScertForINAMLANDSTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string ApplicationNumber, 
                    string AadharNumber, 
                    string ApplicantName, 
                    string FatherName, 
                    string State, 
                    string ApplicantDistrict, 
                    string ApplicantMandal, 
                    string ApplicantVillage, 
                    string ApplicantDoorNo, 
                    string ApplicantLocality, 
                    string ApplicantPincode, 
                    string ApplicantInamdar_Yes_No, 
                    string RelationShipInamdar, 
                    string NatureOfInterests, 
                    string RevenueAmountPaid, 
                    string LandDistrict, 
                    string LandMandal, 
                    string GridINAMLANDSDetails, 
                    string InformantName, 
                    string RelationshipApp, 
                    string InformantEmail, 
                    string InformantMobileNo, 
                    string DeliveryType, 
                    string ServiceCharge, 
                    string ChallanAmount, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_kasara_pahani, 
                    string Doc_FamilyTree_RelationshipwithInamdhar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIssueOfOccupancyRightScertForINAMLANDSTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIssueOfOccupancyRightScertForINAMLANDSTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string ApplicationNumber, 
                    string AadharNumber, 
                    string ApplicantName, 
                    string FatherName, 
                    string State, 
                    string ApplicantDistrict, 
                    string ApplicantMandal, 
                    string ApplicantVillage, 
                    string ApplicantDoorNo, 
                    string ApplicantLocality, 
                    string ApplicantPincode, 
                    string ApplicantInamdar_Yes_No, 
                    string RelationShipInamdar, 
                    string NatureOfInterests, 
                    string RevenueAmountPaid, 
                    string LandDistrict, 
                    string LandMandal, 
                    string GridINAMLANDSDetails, 
                    string InformantName, 
                    string RelationshipApp, 
                    string InformantEmail, 
                    string InformantMobileNo, 
                    string DeliveryType, 
                    string ServiceCharge, 
                    string ChallanAmount, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_kasara_pahani, 
                    string Doc_FamilyTree_RelationshipwithInamdhar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetINAMLANDSCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetINAMLANDSCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetINAMLANDSCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetINAMLANDSCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCCDocDistrict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCCDocDistrict(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCCDocDistrict", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCCDocDistrictAsync(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCCGetDocSRO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCCGetDocSRO(string UserID, string Password, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCCGetDocSRO", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCCGetDocSROAsync(string UserID, string Password, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCCGetDocYear", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCCGetDocYear(string UserID, string Password, string SROCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCCGetDocYear", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCCGetDocYearAsync(string UserID, string Password, string SROCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCCGetDocList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCCGetDocList(string UserID, string Password, string SROCode, string SROYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCCGetDocList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCCGetDocListAsync(string UserID, string Password, string SROCode, string SROYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCertifiedCopyOfRegistrationDocumentTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCertifiedCopyOfRegistrationDocumentTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string Doc_District, 
                    string SRO_Code, 
                    string Year_of_Registration, 
                    string Document_id, 
                    string ApplicationNumber, 
                    string ApplicantName, 
                    string DoorNo, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string PinCode, 
                    string MobileNo, 
                    string Email, 
                    string Chalan_Amount, 
                    string User_Charge, 
                    string Courier_Charge, 
                    string Final_Amount, 
                    string FileFlag, 
                    string NoOfPages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCertifiedCopyOfRegistrationDocumentTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCertifiedCopyOfRegistrationDocumentTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string Doc_District, 
                    string SRO_Code, 
                    string Year_of_Registration, 
                    string Document_id, 
                    string ApplicationNumber, 
                    string ApplicantName, 
                    string DoorNo, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string PinCode, 
                    string MobileNo, 
                    string Email, 
                    string Chalan_Amount, 
                    string User_Charge, 
                    string Courier_Charge, 
                    string Final_Amount, 
                    string FileFlag, 
                    string NoOfPages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCertifiedCopyDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCertifiedCopyDetails(string UserId, string Password, string DistrictID, string SROCode, string DocYear, string DocumentNumber, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCertifiedCopyDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCertifiedCopyDetailsAsync(string UserId, string Password, string DistrictID, string SROCode, string DocYear, string DocumentNumber, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCertifiedCopyDetails_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCertifiedCopyDetails_New(string UserId, string Password, string DistrictID, string SROCode, string DocYear, string DocumentNumber, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCertifiedCopyDetails_New", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCertifiedCopyDetails_NewAsync(string UserId, string Password, string DistrictID, string SROCode, string DocYear, string DocumentNumber, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPreviewCC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPreviewCC(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPreviewCC", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPreviewCCAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCertifiedCopyOfRegistrationCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCertifiedCopyOfRegistrationCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCertifiedCopyOfRegistrationCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCertifiedCopyOfRegistrationCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceCharges_GHMC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServiceCharges_GHMC(string Userid, string Password, string ServiceId, string ServiceType, string deliveryType, string NoofCopies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceCharges_GHMC", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetServiceCharges_GHMCAsync(string Userid, string Password, string ServiceId, string ServiceType, string deliveryType, string NoofCopies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCBirthDeathDataByAckNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GHMCBirthDeathDataByAckNo(string UserID, string Password, string Service_Id, string ServiceType, string AckNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCBirthDeathDataByAckNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GHMCBirthDeathDataByAckNoAsync(string UserID, string Password, string Service_Id, string ServiceType, string AckNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCorrectionAndChidlNameInclusionDataByAckNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GHMCorrectionAndChidlNameInclusionDataByAckNo(string UserID, string Password, string Service_Id, string ServiceType, string AckNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCorrectionAndChidlNameInclusionDataByAckNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GHMCorrectionAndChidlNameInclusionDataByAckNoAsync(string UserID, string Password, string Service_Id, string ServiceType, string AckNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCBirthOrDeathSearchRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GHMCBirthOrDeathSearchRecord(string UserID, string Password, string Service_Id, string ServiceType, string DateOfBirthorDeath, string RegistrationNo, string CircleNo, string Gender, string MotherName, string FatherHusbandName, string DeceasedName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCBirthOrDeathSearchRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GHMCBirthOrDeathSearchRecordAsync(string UserID, string Password, string Service_Id, string ServiceType, string DateOfBirthorDeath, string RegistrationNo, string CircleNo, string Gender, string MotherName, string FatherHusbandName, string DeceasedName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCBirthDeathTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetGHMCBirthDeathTransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AcknowledgementNo, 
                    string RegistrationNumber, 
                    string EventName, 
                    string EventDate, 
                    string Gender, 
                    string Circle, 
                    string Ward, 
                    string Locality, 
                    string ForHusName, 
                    string MotherName, 
                    string ResidenceAddress, 
                    string PermanentAddress, 
                    string RegDate, 
                    string DeathCause, 
                    string PlaceOfEvent, 
                    string Remarks, 
                    string informantName, 
                    string informantRelation, 
                    string informantAddress, 
                    string informantPhoneNo, 
                    string AadharCardNo, 
                    string RationCardNo, 
                    string informantEmailId, 
                    string informantRemarks, 
                    string informantPinCode, 
                    string Delivery_Type, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string postalDoorNo, 
                    string postalDistrict, 
                    string postalMandalId, 
                    string postalVillageId, 
                    string postalPinCode, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCBirthDeathTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetGHMCBirthDeathTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AcknowledgementNo, 
                    string RegistrationNumber, 
                    string EventName, 
                    string EventDate, 
                    string Gender, 
                    string Circle, 
                    string Ward, 
                    string Locality, 
                    string ForHusName, 
                    string MotherName, 
                    string ResidenceAddress, 
                    string PermanentAddress, 
                    string RegDate, 
                    string DeathCause, 
                    string PlaceOfEvent, 
                    string Remarks, 
                    string informantName, 
                    string informantRelation, 
                    string informantAddress, 
                    string informantPhoneNo, 
                    string AadharCardNo, 
                    string RationCardNo, 
                    string informantEmailId, 
                    string informantRemarks, 
                    string informantPinCode, 
                    string Delivery_Type, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string postalDoorNo, 
                    string postalDistrict, 
                    string postalMandalId, 
                    string postalVillageId, 
                    string postalPinCode, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCBirthDeathCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetGHMCBirthDeathCertificatePDF(string UserId, string Password, string Service_id, string ServiceType, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCBirthDeathCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetGHMCBirthDeathCertificatePDFAsync(string UserId, string Password, string Service_id, string ServiceType, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCNonAailabilityBirthDeathTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetGHMCNonAailabilityBirthDeathTransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AadharCardNo, 
                    string ApplicantName, 
                    string ApplicantFatherName, 
                    string Age, 
                    string Address, 
                    string MobileNumber, 
                    string EventRelation, 
                    string RationCardNumber, 
                    string EmailID, 
                    string EventName, 
                    string DateofEvent, 
                    string PlaceofEvent, 
                    string DeathCause, 
                    string ResidenceAddress, 
                    string EventGender, 
                    string MotherName, 
                    string FatherName, 
                    string Circle, 
                    string Ward, 
                    string Delivery_Type, 
                    string Postal_DoorNo, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Affidavit, 
                    string SchoolBonafied, 
                    string RationOtherResidenceProof, 
                    string OtherDoc, 
                    string SSCMark, 
                    string Deathnotarized, 
                    string Otherevidence, 
                    string Medicallegal, 
                    string BurialGroundReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCNonAailabilityBirthDeathTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetGHMCNonAailabilityBirthDeathTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AadharCardNo, 
                    string ApplicantName, 
                    string ApplicantFatherName, 
                    string Age, 
                    string Address, 
                    string MobileNumber, 
                    string EventRelation, 
                    string RationCardNumber, 
                    string EmailID, 
                    string EventName, 
                    string DateofEvent, 
                    string PlaceofEvent, 
                    string DeathCause, 
                    string ResidenceAddress, 
                    string EventGender, 
                    string MotherName, 
                    string FatherName, 
                    string Circle, 
                    string Ward, 
                    string Delivery_Type, 
                    string Postal_DoorNo, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Affidavit, 
                    string SchoolBonafied, 
                    string RationOtherResidenceProof, 
                    string OtherDoc, 
                    string SSCMark, 
                    string Deathnotarized, 
                    string Otherevidence, 
                    string Medicallegal, 
                    string BurialGroundReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCNonAailabilityBirthDeathCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetGHMCNonAailabilityBirthDeathCertificatePDF(string UserId, string Password, string Service_id, string ServiceType, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCNonAailabilityBirthDeathCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetGHMCNonAailabilityBirthDeathCertificatePDFAsync(string UserId, string Password, string Service_id, string ServiceType, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCCorrectionBirthDeathTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetGHMCCorrectionBirthDeathTransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string AcknowledgementNo, 
                    string ApplicationNumber, 
                    string RegistrationNumber, 
                    string Gender, 
                    string ChangedGender, 
                    string EventName, 
                    string ChangedEventName, 
                    string FatherName, 
                    string ChangedFatherName, 
                    string MotherName, 
                    string ChangedMotherName, 
                    string DateOfEvent, 
                    string ChangedDateOfEvent, 
                    string PlaceOfEvent, 
                    string ChangedPlaceOfEvent, 
                    string Circle, 
                    string Changedcircle, 
                    string WardNo, 
                    string Locality, 
                    string ResidenceAddress, 
                    string ChangedResidenceAddress, 
                    string ReasonForDeath, 
                    string ChangedReasonForDeath, 
                    string PermanentAddress, 
                    string Remarks, 
                    string ApplicantName, 
                    string Relation, 
                    string RationCardNo, 
                    string AadhaarCardNo, 
                    string ApplicantAddress, 
                    string PinCode, 
                    string PhoneNo, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string PostalDistrict, 
                    string PostalMandalId, 
                    string PostalVillageId, 
                    string PostalPinCode, 
                    string PostalMobileNo, 
                    string PostalEmailId, 
                    string Delivery_Type, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Certificate, 
                    string ParentsDeclaration, 
                    string NotaryAffidavit, 
                    string EducationalorProofDocument, 
                    string HospitalLetter, 
                    string MedicoLegalCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCCorrectionBirthDeathTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetGHMCCorrectionBirthDeathTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string AcknowledgementNo, 
                    string ApplicationNumber, 
                    string RegistrationNumber, 
                    string Gender, 
                    string ChangedGender, 
                    string EventName, 
                    string ChangedEventName, 
                    string FatherName, 
                    string ChangedFatherName, 
                    string MotherName, 
                    string ChangedMotherName, 
                    string DateOfEvent, 
                    string ChangedDateOfEvent, 
                    string PlaceOfEvent, 
                    string ChangedPlaceOfEvent, 
                    string Circle, 
                    string Changedcircle, 
                    string WardNo, 
                    string Locality, 
                    string ResidenceAddress, 
                    string ChangedResidenceAddress, 
                    string ReasonForDeath, 
                    string ChangedReasonForDeath, 
                    string PermanentAddress, 
                    string Remarks, 
                    string ApplicantName, 
                    string Relation, 
                    string RationCardNo, 
                    string AadhaarCardNo, 
                    string ApplicantAddress, 
                    string PinCode, 
                    string PhoneNo, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string PostalDistrict, 
                    string PostalMandalId, 
                    string PostalVillageId, 
                    string PostalPinCode, 
                    string PostalMobileNo, 
                    string PostalEmailId, 
                    string Delivery_Type, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Certificate, 
                    string ParentsDeclaration, 
                    string NotaryAffidavit, 
                    string EducationalorProofDocument, 
                    string HospitalLetter, 
                    string MedicoLegalCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCircle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCircle(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCircle", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCircleAsync(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCSearchBirthRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GHMCSearchBirthRecord(string UserID, string Password, string Service_Id, string ServiceType, string DateOfBirth, string RegistrationNo, string CircleNo, string Gender, string MotherName, string FatherName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCSearchBirthRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GHMCSearchBirthRecordAsync(string UserID, string Password, string Service_Id, string ServiceType, string DateOfBirth, string RegistrationNo, string CircleNo, string Gender, string MotherName, string FatherName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCSearchDeathRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GHMCSearchDeathRecord(string UserID, string Password, string Service_Id, string ServiceType, string DateOfDeath, string RegistrationNo, string CircleNo, string Gender, string DeceasedName, string FatherName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GHMCSearchDeathRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GHMCSearchDeathRecordAsync(string UserID, string Password, string Service_Id, string ServiceType, string DateOfDeath, string RegistrationNo, string CircleNo, string Gender, string DeceasedName, string FatherName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCChilNameInclusionTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetGHMCChilNameInclusionTransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AcknowledgementNo, 
                    string RegistrationNumber, 
                    string ActualchildName, 
                    string ChangedchildName, 
                    string FatherName, 
                    string MotherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string Circle, 
                    string WardNo, 
                    string Locality, 
                    string PlaceOfEvent, 
                    string AddressAtTimeOfBirth, 
                    string PermanentAddress, 
                    string Remarks, 
                    string InformantName, 
                    string InformantRelation, 
                    string RationCardNo, 
                    string AADHARNo, 
                    string InformantAddress, 
                    string InformantPinCode, 
                    string InformantPhoneNo, 
                    string Delivery_Type, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string PostalDistrict, 
                    string PostalMandalId, 
                    string PostalVillageId, 
                    string PostalPinCode, 
                    string PostalMobileNo, 
                    string PostalEmailId, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string NotaryAffidavit, 
                    string OriginalBirthCertificate, 
                    string ProofofResidence, 
                    string SchoolBonafidecertificate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetGHMCChilNameInclusionTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetGHMCChilNameInclusionTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AcknowledgementNo, 
                    string RegistrationNumber, 
                    string ActualchildName, 
                    string ChangedchildName, 
                    string FatherName, 
                    string MotherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string Circle, 
                    string WardNo, 
                    string Locality, 
                    string PlaceOfEvent, 
                    string AddressAtTimeOfBirth, 
                    string PermanentAddress, 
                    string Remarks, 
                    string InformantName, 
                    string InformantRelation, 
                    string RationCardNo, 
                    string AADHARNo, 
                    string InformantAddress, 
                    string InformantPinCode, 
                    string InformantPhoneNo, 
                    string Delivery_Type, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string PostalDistrict, 
                    string PostalMandalId, 
                    string PostalVillageId, 
                    string PostalPinCode, 
                    string PostalMobileNo, 
                    string PostalEmailId, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string NotaryAffidavit, 
                    string OriginalBirthCertificate, 
                    string ProofofResidence, 
                    string SchoolBonafidecertificate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/SearchRecordsinMultipleRUIDs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearchRecordsinMultipleRUIDs(string Userid, string Password, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/SearchRecordsinMultipleRUIDs", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SearchRecordsinMultipleRUIDsAsync(string Userid, string Password, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCDMABirthDeathDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCDMABirthDeathDetails(string ApplicationNo, string Userid, string Password, string SerTypeID, string RegUintID, string RegYear, string RegNo, string TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCDMABirthDeathDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCDMABirthDeathDetailsAsync(string ApplicationNo, string Userid, string Password, string SerTypeID, string RegUintID, string RegYear, string RegNo, string TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/SearchCDMABirthDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearchCDMABirthDetails(string Userid, string Password, string ServiceType, string RUID, string RegYear, string RegNumber, string Gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/SearchCDMABirthDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SearchCDMABirthDetailsAsync(string Userid, string Password, string ServiceType, string RUID, string RegYear, string RegNumber, string Gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/SearchCDMADeathDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearchCDMADeathDetails(string Userid, string Password, string ServiceType, string RUID, string RegYear, string RegNumber, string Gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/SearchCDMADeathDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SearchCDMADeathDetailsAsync(string Userid, string Password, string ServiceType, string RUID, string RegYear, string RegNumber, string Gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRUIDDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRUIDDetails(string userid, string password, string LocationType, string DistID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRUIDDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRUIDDetailsAsync(string userid, string password, string LocationType, string DistID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCDMADeathDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCDMADeathDetails(string Userid, string Password, string SerTypeID, string RegUintID, string RegYear, string RegNo, string TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCDMADeathDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCDMADeathDetailsAsync(string Userid, string Password, string SerTypeID, string RegUintID, string RegYear, string RegNo, string TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCDMABirthDeathCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCDMABirthDeathCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCDMABirthDeathCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCDMABirthDeathCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCDMABirthDeathPreviewCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCDMABirthDeathPreviewCertificatePDF(string UserId, string Password, string ServiceType, string Appno, string RUID, string RegYear, string RegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCDMABirthDeathPreviewCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCDMABirthDeathPreviewCertificatePDFAsync(string UserId, string Password, string ServiceType, string Appno, string RUID, string RegYear, string RegNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceCharges_CDMA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServiceCharges_CDMA(string Userid, string Password, string ServiceId, string ServiceType, string deliveryType, string rlbType, string NoofCopies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceCharges_CDMA", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetServiceCharges_CDMAAsync(string Userid, string Password, string ServiceId, string ServiceType, string deliveryType, string rlbType, string NoofCopies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCDMATransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCDMATransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string RUID, 
                    string RegNo, 
                    string RegYear, 
                    string ApplicationNumber, 
                    string RegDate, 
                    string EventName, 
                    string EventSurName, 
                    string DateofBirthorDeath, 
                    string Gender, 
                    string FatherorHusbandName, 
                    string FatherorHusbandSurName, 
                    string MotherName, 
                    string MotherSurName, 
                    string BirthorDeathPlace, 
                    string LocationName, 
                    string HospitalName, 
                    string MobileNo, 
                    string HospitalAddress1, 
                    string HospitalAddress2, 
                    string HospitalAddress3, 
                    string StateName, 
                    string DistrictName, 
                    string PinCode, 
                    string informantName, 
                    string informantRelation, 
                    string informantAddress1, 
                    string informantAddress2, 
                    string informantAddress3, 
                    string informantPhoneNo, 
                    string AadharCardNo, 
                    string RationCardNo, 
                    string informantEmailId, 
                    string informantRemarks, 
                    string informantPinCode, 
                    string Delivery_Type, 
                    string NoOfCopies, 
                    string Purpose, 
                    string postalDoorNo, 
                    string postalLocality, 
                    string postalState, 
                    string postalDistrict, 
                    string postalMandalId, 
                    string postalVillageId, 
                    string postalPinCode, 
                    string RLB_Type, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Stationary_Charges, 
                    string Total_Amount, 
                    string Doc_Applicationform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCDMATransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCDMATransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string RUID, 
                    string RegNo, 
                    string RegYear, 
                    string ApplicationNumber, 
                    string RegDate, 
                    string EventName, 
                    string EventSurName, 
                    string DateofBirthorDeath, 
                    string Gender, 
                    string FatherorHusbandName, 
                    string FatherorHusbandSurName, 
                    string MotherName, 
                    string MotherSurName, 
                    string BirthorDeathPlace, 
                    string LocationName, 
                    string HospitalName, 
                    string MobileNo, 
                    string HospitalAddress1, 
                    string HospitalAddress2, 
                    string HospitalAddress3, 
                    string StateName, 
                    string DistrictName, 
                    string PinCode, 
                    string informantName, 
                    string informantRelation, 
                    string informantAddress1, 
                    string informantAddress2, 
                    string informantAddress3, 
                    string informantPhoneNo, 
                    string AadharCardNo, 
                    string RationCardNo, 
                    string informantEmailId, 
                    string informantRemarks, 
                    string informantPinCode, 
                    string Delivery_Type, 
                    string NoOfCopies, 
                    string Purpose, 
                    string postalDoorNo, 
                    string postalLocality, 
                    string postalState, 
                    string postalDistrict, 
                    string postalMandalId, 
                    string postalVillageId, 
                    string postalPinCode, 
                    string RLB_Type, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Stationary_Charges, 
                    string Total_Amount, 
                    string Doc_Applicationform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCDMABDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCDMABDetails(string ApplicationNo, string SerTypeID, string RegUintID, string RegYear, string RegNo, string userid, string password, string TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCDMABDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCDMABDetailsAsync(string ApplicationNo, string SerTypeID, string RegUintID, string RegYear, string RegNo, string userid, string password, string TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCDMADDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCDMADDetails(string SerTypeID, string RegUintID, string RegYear, string RegNo, string userid, string password, string TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCDMADDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCDMADDetailsAsync(string SerTypeID, string RegUintID, string RegYear, string RegNo, string userid, string password, string TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/SearchCDMABirthDetails_NEW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearchCDMABirthDetails_NEW(string ServiceType, string RUID, string RegYear, string RegNumber, string BirthYear, string Cname, string Fname, string Mname, string HosCode, string Gender, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/SearchCDMABirthDetails_NEW", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SearchCDMABirthDetails_NEWAsync(string ServiceType, string RUID, string RegYear, string RegNumber, string BirthYear, string Cname, string Fname, string Mname, string HosCode, string Gender, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetROR1BTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetROR1BTransactionNo(
                    string userId, 
                    string password, 
                    string LoginID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string Doc_District_Id, 
                    string Doc_Mandal_Id, 
                    string Doc_Village_Id, 
                    string Doc_KhataNo, 
                    string Application_Number, 
                    string Applicant_Name, 
                    string Applicant_Father_Name, 
                    string Applicant_Door_No, 
                    string Gender, 
                    string Application_Street_name, 
                    string Applicant_State, 
                    string Applicant_District, 
                    string Applicant_Mandal, 
                    string Applicant_Village, 
                    string Pin_Code, 
                    string Mobile_Number, 
                    string Delivery_Type, 
                    string Service_charge, 
                    string Postal_Charges, 
                    string User_Charges, 
                    string Total_Amount, 
                    string Postal_State, 
                    string Postal_Distrct, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string Postal_Location, 
                    string Postal_DoorNo, 
                    string Ration_card_No, 
                    string Aadhar_No, 
                    string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetROR1BTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetROR1BTransactionNoAsync(
                    string userId, 
                    string password, 
                    string LoginID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string Doc_District_Id, 
                    string Doc_Mandal_Id, 
                    string Doc_Village_Id, 
                    string Doc_KhataNo, 
                    string Application_Number, 
                    string Applicant_Name, 
                    string Applicant_Father_Name, 
                    string Applicant_Door_No, 
                    string Gender, 
                    string Application_Street_name, 
                    string Applicant_State, 
                    string Applicant_District, 
                    string Applicant_Mandal, 
                    string Applicant_Village, 
                    string Pin_Code, 
                    string Mobile_Number, 
                    string Delivery_Type, 
                    string Service_charge, 
                    string Postal_Charges, 
                    string User_Charges, 
                    string Total_Amount, 
                    string Postal_State, 
                    string Postal_Distrct, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string Postal_Location, 
                    string Postal_DoorNo, 
                    string Ration_card_No, 
                    string Aadhar_No, 
                    string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetROR1BCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetROR1BCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetROR1BCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetROR1BCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRORDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRORDetails(string Userid, string Password, string ApplicationNumber, string DistrictID, string MandalID, string VillageID, string kathano);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRORDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRORDetailsAsync(string Userid, string Password, string ApplicationNumber, string DistrictID, string MandalID, string VillageID, string kathano);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateECDistrict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateECDistrict(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateECDistrict", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateECDistrictAsync(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateECVillage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateECVillage(string UserID, string Password, string districtid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateECVillage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateECVillageAsync(string UserID, string Password, string districtid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSRO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateSRO(string UserID, string Password, string DistrictId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSRO", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateSROAsync(string UserID, string Password, string DistrictId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetECDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetECDocuments(string UserID, string Password, string District, string SRO1, string RegYear, string DocNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetECDocuments", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetECDocumentsAsync(string UserID, string Password, string District, string SRO1, string RegYear, string DocNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetECtransactionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetECtransactionID(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string ServiceID, 
                    string ApplicationNo, 
                    string DocDistrict, 
                    string SROId, 
                    string DocNo, 
                    string DocYear, 
                    string FromDate, 
                    string ToDate, 
                    string BLDG_Flat_No, 
                    string BLDG_OldHouseNo, 
                    string BLDG_Aprtment, 
                    string BLDG_Ward, 
                    string BLDG_Block, 
                    string BLDG_Village_ID, 
                    string BLDG_Alias_Village, 
                    string AGRL_PlotNo, 
                    string AGRL_SurveyNo, 
                    string AGRL_Village_ID, 
                    string AGRL_Alias_Village, 
                    string BNDR_EAST, 
                    string BNDR_WEST, 
                    string BNDR_NORTH, 
                    string BNDR_SOUTH, 
                    string BNDR_Extent, 
                    string BNDR_BUILTUP, 
                    string EC_Slno, 
                    string SroJdn, 
                    string AadharNo, 
                    string ApplicantName, 
                    string OwnerName, 
                    string PerDoorNo, 
                    string PerDistrict, 
                    string PerMandal, 
                    string PerVillage, 
                    string PerPincode, 
                    string AddressFlag, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string Postal_State, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string MobileNo, 
                    string Email, 
                    string DeliveryType, 
                    string Chalan_Amount, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetECtransactionID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetECtransactionIDAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string ServiceID, 
                    string ApplicationNo, 
                    string DocDistrict, 
                    string SROId, 
                    string DocNo, 
                    string DocYear, 
                    string FromDate, 
                    string ToDate, 
                    string BLDG_Flat_No, 
                    string BLDG_OldHouseNo, 
                    string BLDG_Aprtment, 
                    string BLDG_Ward, 
                    string BLDG_Block, 
                    string BLDG_Village_ID, 
                    string BLDG_Alias_Village, 
                    string AGRL_PlotNo, 
                    string AGRL_SurveyNo, 
                    string AGRL_Village_ID, 
                    string AGRL_Alias_Village, 
                    string BNDR_EAST, 
                    string BNDR_WEST, 
                    string BNDR_NORTH, 
                    string BNDR_SOUTH, 
                    string BNDR_Extent, 
                    string BNDR_BUILTUP, 
                    string EC_Slno, 
                    string SroJdn, 
                    string AadharNo, 
                    string ApplicantName, 
                    string OwnerName, 
                    string PerDoorNo, 
                    string PerDistrict, 
                    string PerMandal, 
                    string PerVillage, 
                    string PerPincode, 
                    string AddressFlag, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string Postal_State, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string MobileNo, 
                    string Email, 
                    string DeliveryType, 
                    string Chalan_Amount, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetECCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetECCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetECCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetECCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateDistrict_Postal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateDistrict_Postal(string StateID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateDistrict_Postal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateDistrict_PostalAsync(string StateID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMandal_Postal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateMandal_Postal(string StateID, string DistrictID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMandal_Postal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateMandal_PostalAsync(string StateID, string DistrictID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateVillage_Postal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateVillage_Postal(string StateID, string DistrictID, string MandalID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateVillage_Postal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateVillage_PostalAsync(string StateID, string DistrictID, string MandalID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceWiseReconciliation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServiceWiseReconciliation(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceWiseReconciliation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetServiceWiseReconciliationAsync(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/MutationWebMethod", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MutationWebMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/MutationWebMethod", ReplyAction="*")]
        System.Threading.Tasks.Task<string> MutationWebMethodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/ValidateMobileUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateMobileUser(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/ValidateMobileUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ValidateMobileUserAsync(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/TappTransactionCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TappTransactionCount(string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/TappTransactionCount", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TappTransactionCountAsync(string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/TappTransactionList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TappTransactionList(string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/TappTransactionList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TappTransactionListAsync(string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/TappApplicationStatusCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TappApplicationStatusCheck(string applicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/TappApplicationStatusCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TappApplicationStatusCheckAsync(string applicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateReportingtime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateReportingtime(string UserId, string Password, string TempleID, string RoomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateReportingtime", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateReportingtimeAsync(string UserId, string Password, string TempleID, string RoomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIncomeTransactionNoUpload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIncomeTransactionNoUpload(string ApplicationNo, string Doc_Applicationform, string Doc_Aadhaar, string Doc_IDProof, string Doc_IncomeProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIncomeTransactionNoUpload", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIncomeTransactionNoUploadAsync(string ApplicationNo, string Doc_Applicationform, string Doc_Aadhaar, string Doc_IDProof, string Doc_IncomeProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/getuploaddocs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getuploaddocs(string applno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/getuploaddocs", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getuploaddocsAsync(string applno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCommunityDateofBirthTransactionUpload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCommunityDateofBirthTransactionUpload(string ApplicationNo, string Doc_Applicationform, string Doc_Aadhaar, string Doc_IDProof, string Doc_DOB_Study_Cert_and_SSC_Marks_Memo, string Doc_Community_Cert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetCommunityDateofBirthTransactionUpload", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCommunityDateofBirthTransactionUploadAsync(string ApplicationNo, string Doc_Applicationform, string Doc_Aadhaar, string Doc_IDProof, string Doc_DOB_Study_Cert_and_SSC_Marks_Memo, string Doc_Community_Cert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/NewUserRegistration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NewUserRegistration(
                    string userid, 
                    string password, 
                    string CustomerFirstname, 
                    string CustomerLatsname, 
                    string Gender, 
                    string DOB, 
                    int State, 
                    string City, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string Pincode, 
                    string Emailid, 
                    string LoginId, 
                    string Loginpassword, 
                    string SystemIP, 
                    string Adharno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/NewUserRegistration", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NewUserRegistrationAsync(
                    string userid, 
                    string password, 
                    string CustomerFirstname, 
                    string CustomerLatsname, 
                    string Gender, 
                    string DOB, 
                    int State, 
                    string City, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string Pincode, 
                    string Emailid, 
                    string LoginId, 
                    string Loginpassword, 
                    string SystemIP, 
                    string Adharno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetUserProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUserProfile(string UserId, string Password, string LoginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetUserProfile", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserProfileAsync(string UserId, string Password, string LoginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/RESETMPIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RESETMPIN(string UserId, string Password, string LoginId, string NewMpin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/RESETMPIN", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> RESETMPINAsync(string UserId, string Password, string LoginId, string NewMpin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAadharDocumentRefDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAadharDocumentRefDetails(string UserId, string Password, string LogindID, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAadharDocumentRefDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAadharDocumentRefDetailsAsync(string UserId, string Password, string LogindID, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetDetailsByAadharNoDocumentpath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDetailsByAadharNoDocumentpath(string UserId, string Password, string LogindID, string ServiceID, string AadhaarNo, string DocumentReferenceNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetDetailsByAadharNoDocumentpath", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDetailsByAadharNoDocumentpathAsync(string UserId, string Password, string LogindID, string ServiceID, string AadhaarNo, string DocumentReferenceNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GenerateApplicationNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerateApplicationNo(string UserId, string Password, string LogindID, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GenerateApplicationNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerateApplicationNoAsync(string UserId, string Password, string LogindID, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetShowpaymentCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetShowpaymentCharges(string UserId, string Password, string LogindID, string ServiceID, string ApplicationNo, string DeliveryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetShowpaymentCharges", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetShowpaymentChargesAsync(string UserId, string Password, string LogindID, string ServiceID, string ApplicationNo, string DeliveryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/UpdateUserProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateUserProfile(string UserId, string Password, string LoginId, string LoginPassword, string UpdatedPassword, string emailid, string mobileno, string address1, string address2, string city, string state, string RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/UpdateUserProfile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateUserProfileAsync(string UserId, string Password, string LoginId, string LoginPassword, string UpdatedPassword, string emailid, string mobileno, string address1, string address2, string city, string state, string RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIntegratedTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIntegratedTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string DeliveryType, 
                    string Relation, 
                    string RelationName, 
                    string Remarks, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string EducationCertificateContainsCaste, 
                    string PurposeofCasteCertificate, 
                    string Religion, 
                    string StateId, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIntegratedTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIntegratedTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string DeliveryType, 
                    string Relation, 
                    string RelationName, 
                    string Remarks, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string EducationCertificateContainsCaste, 
                    string PurposeofCasteCertificate, 
                    string Religion, 
                    string StateId, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCasteCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PopulateCasteCategory(string UserId, string Password, string ServiceID, string CasteClaimed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCasteCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PopulateCasteCategoryAsync(string UserId, string Password, string ServiceID, string CasteClaimed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/CCVerifySign", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CCVerifySign(string docId, string year, string sroCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/CCVerifySign", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CCVerifySignAsync(string docId, string year, string sroCode);
        
        // CODEGEN: Parameter 'CCGetDocFileResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/CCGetDocFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TAppTransactionsList.meseva.CCGetDocFileResponse CCGetDocFile(TAppTransactionsList.meseva.CCGetDocFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/CCGetDocFile", ReplyAction="*")]
        System.Threading.Tasks.Task<TAppTransactionsList.meseva.CCGetDocFileResponse> CCGetDocFileAsync(TAppTransactionsList.meseva.CCGetDocFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetUserLoginResponse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserLoginResponse(string UserId, string Password, string LoginId, string LoginPassword, string RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetUserLoginResponse", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUserLoginResponseAsync(string UserId, string Password, string LoginId, string LoginPassword, string RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAdangalTransactionNo_old", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAdangalTransactionNo_old(TAppTransactionsList.meseva.AdangalTrans obj, string userId, string password, string LogindID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAdangalTransactionNo_old", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAdangalTransactionNo_oldAsync(TAppTransactionsList.meseva.AdangalTrans obj, string userId, string password, string LogindID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAdangalTransactionNo_TEST", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAdangalTransactionNo_TEST(string userId, string password, string LogindID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAdangalTransactionNo_TEST", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAdangalTransactionNo_TESTAsync(string userId, string password, string LogindID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/AadharUpdationforApplicationNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AadharUpdationforApplicationNo(string appno, string aadharNo, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/AadharUpdationforApplicationNo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AadharUpdationforApplicationNoAsync(string appno, string aadharNo, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetApplicationDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetApplicationDetails(string applicationNo, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetApplicationDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetApplicationDetailsAsync(string applicationNo, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateDistrict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateDistrict(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateDistrict", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateDistrictAsync(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMandal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateMandal(string DistrictID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMandal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateMandalAsync(string DistrictID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateVillage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateVillage(string DistrictID, string MandalID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateVillage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateVillageAsync(string DistrictID, string MandalID, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServiceCharges(string UserId, string Password, string ServiceId, string DeliveryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceCharges", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetServiceChargesAsync(string UserId, string Password, string ServiceId, string DeliveryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAppStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAppStatus(string AppNo, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAppStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAppStatusAsync(string AppNo, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceWiseApplicationStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServiceWiseApplicationStatus(string UserId, string Password, string FromDate, string ToDate, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceWiseApplicationStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetServiceWiseApplicationStatusAsync(string UserId, string Password, string FromDate, string ToDate, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetReceiptBasedOnTransNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReceiptBasedOnTransNo(string UserId, string Password, string ServiceId, string TransactionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetReceiptBasedOnTransNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetReceiptBasedOnTransNoAsync(string UserId, string Password, string ServiceId, string TransactionNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPrintCertificateStatusDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPrintCertificateStatusDetails(string UserId, string Password, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPrintCertificateStatusDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPrintCertificateStatusDetailsAsync(string UserId, string Password, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCaste", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCaste(string UserId, string Password, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCaste", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCasteAsync(string UserId, string Password, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateReligion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateReligion(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateReligion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateReligionAsync(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRelation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRelation(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRelation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRelationAsync(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRelationShip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRelationShip(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRelationShip", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRelationShipAsync(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMemberOccupation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateMemberOccupation(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateMemberOccupation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateMemberOccupationAsync(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAadhaarNoDocumentRefNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAadhaarNoDocumentRefNo(string ServiceID, string LogindID, string DocumentRefNumbers, string Application_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAadhaarNoDocumentRefNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAadhaarNoDocumentRefNoAsync(string ServiceID, string LogindID, string DocumentRefNumbers, string Application_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIncomeTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIncomeTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantName, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string LandIncome, 
                    string BusinessIncome, 
                    string BuildingIncome, 
                    string LabourIncome, 
                    string EmpSal, 
                    string OtherIncome, 
                    string TotalIncome, 
                    string Purpose, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_IncomeProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIncomeTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIncomeTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantName, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string LandIncome, 
                    string BusinessIncome, 
                    string BuildingIncome, 
                    string LabourIncome, 
                    string EmpSal, 
                    string OtherIncome, 
                    string TotalIncome, 
                    string Purpose, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_IncomeProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIncomeCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIncomeCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetIncomeCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIncomeCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetResidanceTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetResidanceTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string ResidingSinceinYears, 
                    string Purpose, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_HouseProof, 
                    string Doc_Photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetResidanceTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetResidanceTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string ResidingSinceinYears, 
                    string Purpose, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_HouseProof, 
                    string Doc_Photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetResidenceCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetResidenceCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetResidenceCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetResidenceCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetEBCTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEBCTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string Religion, 
                    string PurposeofCasteCertificate, 
                    string FamilyIncome, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_Aadhaar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetEBCTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEBCTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string Religion, 
                    string PurposeofCasteCertificate, 
                    string FamilyIncome, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_Aadhaar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetEBCCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEBCCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetEBCCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEBCCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetOBCTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOBCTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string EducationCertificateContainsCaste, 
                    string PurposeofCasteCertificate, 
                    string Religion, 
                    string FamilyIncome, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_Property, 
                    string Doc_ITReturns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetOBCTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetOBCTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string EducationCertificateContainsCaste, 
                    string PurposeofCasteCertificate, 
                    string Religion, 
                    string FamilyIncome, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_Property, 
                    string Doc_ITReturns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetOBCCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOBCCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetOBCCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetOBCCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAgricultureIncomeTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAgricultureIncomeTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string Purpose, 
                    string GridDetailsLand, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAgricultureIncomeTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAgricultureIncomeTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string Purpose, 
                    string GridDetailsLand, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAgricultureCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAgricultureCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAgricultureCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAgricultureCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateTemples", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateTemples(string UserID, string Password, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateTemples", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateTemplesAsync(string UserID, string Password, string ServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetSevaMaxTicketCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSevaMaxTicketCount(string UserID, string Password, string ServiceID, string TempleID, string Sevaid, string SevabookingDate, string BatchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetSevaMaxTicketCount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSevaMaxTicketCountAsync(string UserID, string Password, string ServiceID, string TempleID, string Sevaid, string SevabookingDate, string BatchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSevas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateSevas(string UserID, string Password, string ServiceID, string TempleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSevas", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateSevasAsync(string UserID, string Password, string ServiceID, string TempleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateProofDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateProofDocuments(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateProofDocuments", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateProofDocumentsAsync(string UserID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateBatches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateBatches(string UserID, string Password, string ServiceID, string TempleID, string SevaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateBatches", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateBatchesAsync(string UserID, string Password, string ServiceID, string TempleID, string SevaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetSevaDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSevaDetails(string UserID, string Password, string ServiceID, string TempleID, string SevaID, string BatchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetSevaDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSevaDetailsAsync(string UserID, string Password, string ServiceID, string TempleID, string SevaID, string BatchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetBlockedDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime[] GetBlockedDates(string UserID, string Password, string ServiceID, string TempleID, string SevaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetBlockedDates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.DateTime[]> GetBlockedDatesAsync(string UserID, string Password, string ServiceID, string TempleID, string SevaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/BatchAvailableDays", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BatchAvailableDays(string UserID, string Password, string TempleID, string SevaID, string BatchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/BatchAvailableDays", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BatchAvailableDaysAsync(string UserID, string Password, string TempleID, string SevaID, string BatchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetSevaBookingTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSevaBookingTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string Sevaid, 
                    string BatchID, 
                    string SevabookingDate, 
                    string ApplicationNo, 
                    string AadharCardNo, 
                    string DevoteeName, 
                    string Nakshatram, 
                    string Gothram, 
                    string Gender, 
                    string Age, 
                    string HouseNo, 
                    string Location, 
                    string MobileNumber, 
                    string EmailId, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string DeliveryType, 
                    string SevaAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string ApplicantName, 
                    string RelationId, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_Photo, 
                    string TotalLadduQuantity, 
                    string TotalLadduAmount, 
                    string TotalPulihoraQuantity, 
                    string TotalPulihoraAmount, 
                    string TotalBellamLadduQuantity, 
                    string TotalBellamLadduAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetSevaBookingTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSevaBookingTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string Sevaid, 
                    string BatchID, 
                    string SevabookingDate, 
                    string ApplicationNo, 
                    string AadharCardNo, 
                    string DevoteeName, 
                    string Nakshatram, 
                    string Gothram, 
                    string Gender, 
                    string Age, 
                    string HouseNo, 
                    string Location, 
                    string MobileNumber, 
                    string EmailId, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string DeliveryType, 
                    string SevaAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string ApplicantName, 
                    string RelationId, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_Photo, 
                    string TotalLadduQuantity, 
                    string TotalLadduAmount, 
                    string TotalPulihoraQuantity, 
                    string TotalPulihoraAmount, 
                    string TotalBellamLadduQuantity, 
                    string TotalBellamLadduAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetSriLaxmiNarasimhaSwamiwariDevastanamSevaBookingTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSriLaxmiNarasimhaSwamiwariDevastanamSevaBookingTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string Sevaid, 
                    string BatchID, 
                    string SevabookingDate, 
                    string ApplicationNo, 
                    string AadharCardNo, 
                    string DevoteeName, 
                    string Nakshatram, 
                    string Gothram, 
                    string Gender, 
                    string Age, 
                    string HouseNo, 
                    string Location, 
                    string MobileNumber, 
                    string EmailId, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string DeliveryType, 
                    string SevaAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string ApplicantName, 
                    string RelationId, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string TotalLadduQuantity, 
                    string TotalLadduAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetSriLaxmiNarasimhaSwamiwariDevastanamSevaBookingTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSriLaxmiNarasimhaSwamiwariDevastanamSevaBookingTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string Sevaid, 
                    string BatchID, 
                    string SevabookingDate, 
                    string ApplicationNo, 
                    string AadharCardNo, 
                    string DevoteeName, 
                    string Nakshatram, 
                    string Gothram, 
                    string Gender, 
                    string Age, 
                    string HouseNo, 
                    string Location, 
                    string MobileNumber, 
                    string EmailId, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string DeliveryType, 
                    string SevaAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string ApplicantName, 
                    string RelationId, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string TotalLadduQuantity, 
                    string TotalLadduAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetNoEarningMemberTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNoEarningMemberTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantStatus, 
                    string ApplicantName, 
                    string RelationId, 
                    string RelationStatus, 
                    string RelationName, 
                    string Gender, 
                    string DateOfBirth, 
                    string RelationshipWithDeceased, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string DeceasedStatus, 
                    string DeceasedName, 
                    string DeceasedFatherName, 
                    string DeceasedDoorNo, 
                    string DateOfDeath, 
                    string Occupation, 
                    string ReasonForCertificate, 
                    string DeathHappenedDistrict, 
                    string DeathHappenedMandal, 
                    string DeathHappenedVillage, 
                    string NativeVillage, 
                    string ReasonForDeath, 
                    string DeathHappenedPlace, 
                    string GridNoEarningMemberDetails, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_DeathCert, 
                    string Doc_CopyofFMC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetNoEarningMemberTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetNoEarningMemberTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantStatus, 
                    string ApplicantName, 
                    string RelationId, 
                    string RelationStatus, 
                    string RelationName, 
                    string Gender, 
                    string DateOfBirth, 
                    string RelationshipWithDeceased, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string DeceasedStatus, 
                    string DeceasedName, 
                    string DeceasedFatherName, 
                    string DeceasedDoorNo, 
                    string DateOfDeath, 
                    string Occupation, 
                    string ReasonForCertificate, 
                    string DeathHappenedDistrict, 
                    string DeathHappenedMandal, 
                    string DeathHappenedVillage, 
                    string NativeVillage, 
                    string ReasonForDeath, 
                    string DeathHappenedPlace, 
                    string GridNoEarningMemberDetails, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_DeathCert, 
                    string Doc_CopyofFMC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetNoEarningMemberCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNoEarningMemberCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetNoEarningMemberCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetNoEarningMemberCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetNoPropertyTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNoPropertyTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantName, 
                    string RelationName, 
                    string RelationshipWithDeathPerson, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string MobileNo, 
                    string EmailID, 
                    string DeathPersonName, 
                    string DeceasedFatherName, 
                    string DeceasedDoorNo, 
                    string DeceasedLocation, 
                    string DeceasedDistrict, 
                    string DeceasedMandal, 
                    string DeceasedVillage, 
                    string DeceasedPinCode, 
                    string DateOfDeath, 
                    string PlaceOfDeath, 
                    string Occupation, 
                    string OtherOccupation, 
                    string CauseOfDeath, 
                    string Purpose, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string StateId, 
                    string DeathHappenedDistrict, 
                    string DeathHappenedMandal, 
                    string DeathHappenedVillage, 
                    string GridNoEarningMemberDetails, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_DeathCert, 
                    string Doc_CopyofFMC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetNoPropertyTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetNoPropertyTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantName, 
                    string RelationName, 
                    string RelationshipWithDeathPerson, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string MobileNo, 
                    string EmailID, 
                    string DeathPersonName, 
                    string DeceasedFatherName, 
                    string DeceasedDoorNo, 
                    string DeceasedLocation, 
                    string DeceasedDistrict, 
                    string DeceasedMandal, 
                    string DeceasedVillage, 
                    string DeceasedPinCode, 
                    string DateOfDeath, 
                    string PlaceOfDeath, 
                    string Occupation, 
                    string OtherOccupation, 
                    string CauseOfDeath, 
                    string Purpose, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string StateId, 
                    string DeathHappenedDistrict, 
                    string DeathHappenedMandal, 
                    string DeathHappenedVillage, 
                    string GridNoEarningMemberDetails, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_DeathCert, 
                    string Doc_CopyofFMC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetNoPropertyCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNoPropertyCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetNoPropertyCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetNoPropertyCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRooms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRooms(string UserId, string Password, string RoomTypeId, string TempleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRooms", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRoomsAsync(string UserId, string Password, string RoomTypeId, string TempleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRoomType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRoomType(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRoomType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRoomTypeAsync(string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetEndowmentRoomAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEndowmentRoomAmount(string UserId, string Password, string TempleID, string RoomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetEndowmentRoomAmount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEndowmentRoomAmountAsync(string UserId, string Password, string TempleID, string RoomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetLastSevaDetailsBlock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetLastSevaDetailsBlock(string templeid, string sevaId, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetLastSevaDetailsBlock", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetLastSevaDetailsBlockAsync(string templeid, string sevaId, string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAvailableRoomsDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAvailableRoomsDate(string UserId, string Password, string TempleID, string RoomID, string CheckinDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAvailableRoomsDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAvailableRoomsDateAsync(string UserId, string Password, string TempleID, string RoomID, string CheckinDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetRoomBookingTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetRoomBookingTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string RoomType, 
                    string RoomID, 
                    string RoombookingDate, 
                    string ApplicationNo, 
                    string AadhaarCardNo, 
                    string DevoteeName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string Gothram, 
                    string Nakshatram, 
                    string Gender, 
                    string Age, 
                    string MobileNumber, 
                    string EmailId, 
                    string HouseNo, 
                    string Location, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ApplicantName, 
                    string ApplicantRelation, 
                    string RoomAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetRoomBookingTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetRoomBookingTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string RoomType, 
                    string RoomID, 
                    string RoombookingDate, 
                    string ApplicationNo, 
                    string AadhaarCardNo, 
                    string DevoteeName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string Gothram, 
                    string Nakshatram, 
                    string Gender, 
                    string Age, 
                    string MobileNumber, 
                    string EmailId, 
                    string HouseNo, 
                    string Location, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ApplicantName, 
                    string ApplicantRelation, 
                    string RoomAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRevenueDistrict", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRevenueDistrict(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRevenueDistrict", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRevenueDistrictAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRevenueMandal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRevenueMandal(string userid, string password, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRevenueMandal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRevenueMandalAsync(string userid, string password, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRevenueVillage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRevenueVillage(string UserId, string Password, string DistrictID, string MandalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRevenueVillage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRevenueVillageAsync(string UserId, string Password, string DistrictID, string MandalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRevenueDocYear", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateRevenueDocYear(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateRevenueDocYear", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateRevenueDocYearAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceChargesBasedOnServiceTpye", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetServiceChargesBasedOnServiceTpye(string ServiceId, string ServiceType, string DeliveryType, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetServiceChargesBasedOnServiceTpye", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetServiceChargesBasedOnServiceTpyeAsync(string ServiceId, string ServiceType, string DeliveryType, string UserId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateFamilyMembershipServiceTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateFamilyMembershipServiceTypes(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateFamilyMembershipServiceTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateFamilyMembershipServiceTypesAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateOccupation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateOccupation(string UserId, string Password, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateOccupation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateOccupationAsync(string UserId, string Password, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateDeathReason", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateDeathReason(string UserId, string Password, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateDeathReason", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateDeathReasonAsync(string UserId, string Password, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateReasonforCertificate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateReasonforCertificate(string UserId, string Password, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateReasonforCertificate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateReasonforCertificateAsync(string UserId, string Password, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFamilyMembershipTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFamilyMembershipTransactionNo(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string ServiceType, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string Applicant_Name, 
                    string Gender, 
                    string Relation, 
                    string RelationName, 
                    string DOB, 
                    string Per_District, 
                    string Per_Mandal, 
                    string Per_Village, 
                    string Per_Door_No, 
                    string Per_Locality, 
                    string Per_Pincode, 
                    string StateId, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Mobile1, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string Postal_Pincode, 
                    string DeliveryType, 
                    string RationCardNo, 
                    string DeceasedName, 
                    string DeceasedFName, 
                    string DateofDeath, 
                    string ReasonforDeath, 
                    string Occupation, 
                    string ReasonforCertificate, 
                    string DeathPlace, 
                    string GridFamilyMemberDetails, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_DeathProof, 
                    string Work_Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFamilyMembershipTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFamilyMembershipTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string ServiceType, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string Applicant_Name, 
                    string Gender, 
                    string Relation, 
                    string RelationName, 
                    string DOB, 
                    string Per_District, 
                    string Per_Mandal, 
                    string Per_Village, 
                    string Per_Door_No, 
                    string Per_Locality, 
                    string Per_Pincode, 
                    string StateId, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Mobile1, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string Postal_Pincode, 
                    string DeliveryType, 
                    string RationCardNo, 
                    string DeceasedName, 
                    string DeceasedFName, 
                    string DateofDeath, 
                    string ReasonforDeath, 
                    string Occupation, 
                    string ReasonforCertificate, 
                    string DeathPlace, 
                    string GridFamilyMemberDetails, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_DeathProof, 
                    string Work_Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFamilyMembershipCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFamilyMembershipCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFamilyMembershipCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFamilyMembershipCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPossessionTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPossessionTransactionNo(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string HouseOwnerName, 
                    string FatherHusbandName, 
                    string Perdist, 
                    string PerMandal, 
                    string PerVillage, 
                    string PerDoorNo, 
                    string PerLocality, 
                    string Income, 
                    string Age, 
                    string SurveyNo, 
                    string Extent, 
                    string ExtentinAcres, 
                    string Purpose, 
                    string DeliveryType, 
                    string InformantName, 
                    string RelationName, 
                    string RelationID, 
                    string PerPinCode, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string StateId, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Pincode, 
                    string Mobile1, 
                    string PhoneNo, 
                    string Email, 
                    string AAdharNo, 
                    string HouseBoundaries_East, 
                    string HouseBoundaries_West, 
                    string HouseBoundaries_North, 
                    string HouseBoundaries_South, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPossessionTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPossessionTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string HouseOwnerName, 
                    string FatherHusbandName, 
                    string Perdist, 
                    string PerMandal, 
                    string PerVillage, 
                    string PerDoorNo, 
                    string PerLocality, 
                    string Income, 
                    string Age, 
                    string SurveyNo, 
                    string Extent, 
                    string ExtentinAcres, 
                    string Purpose, 
                    string DeliveryType, 
                    string InformantName, 
                    string RelationName, 
                    string RelationID, 
                    string PerPinCode, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string StateId, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Pincode, 
                    string Mobile1, 
                    string PhoneNo, 
                    string Email, 
                    string AAdharNo, 
                    string HouseBoundaries_East, 
                    string HouseBoundaries_West, 
                    string HouseBoundaries_North, 
                    string HouseBoundaries_South, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPossessionCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPossessionCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetPossessionCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPossessionCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSurveyNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateSurveyNumber(string UserId, string Password, string DistrictID, string MandalID, string VillageID, string DocYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSurveyNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateSurveyNumberAsync(string UserId, string Password, string DistrictID, string MandalID, string VillageID, string DocYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateAdangaldetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateAdangaldetails(string UserId, string Password, string ApplicationNo, string DistrictID, string MandalID, string VillageID, string DocYear, string SurveyNo, string IsCropDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateAdangaldetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateAdangaldetailsAsync(string UserId, string Password, string ApplicationNo, string DistrictID, string MandalID, string VillageID, string DocYear, string SurveyNo, string IsCropDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAdangalTransactionNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAdangalTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ApplicationNo, 
                    string AddressFlag, 
                    string Doc_District_Id, 
                    string Doc_Mandal_Id, 
                    string Doc_Village_Id, 
                    string DocYear, 
                    string Doc_SurveyNo, 
                    string CropFlag, 
                    string Applicant_Name, 
                    string Gender, 
                    string FatherName, 
                    string Perstate, 
                    string Applicant_District, 
                    string Applicant_Mandal, 
                    string Applicant_Village, 
                    string Mobile_Number, 
                    string AADHARNo, 
                    string Delivery_Type, 
                    string Email, 
                    string Permanent_Door_No, 
                    string Permanent_Locality, 
                    string Permanent_Pincode, 
                    string PhoneNo, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Locality, 
                    string Postal_Door_No, 
                    string Postal_Pincode, 
                    string PostalState, 
                    string RationCardNo, 
                    string DateOfBirth, 
                    string Challan_Amount, 
                    string User_Charges, 
                    string Courier_Charges, 
                    string Total_Amount, 
                    string Doc_Applicationform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAdangalTransactionNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAdangalTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ApplicationNo, 
                    string AddressFlag, 
                    string Doc_District_Id, 
                    string Doc_Mandal_Id, 
                    string Doc_Village_Id, 
                    string DocYear, 
                    string Doc_SurveyNo, 
                    string CropFlag, 
                    string Applicant_Name, 
                    string Gender, 
                    string FatherName, 
                    string Perstate, 
                    string Applicant_District, 
                    string Applicant_Mandal, 
                    string Applicant_Village, 
                    string Mobile_Number, 
                    string AADHARNo, 
                    string Delivery_Type, 
                    string Email, 
                    string Permanent_Door_No, 
                    string Permanent_Locality, 
                    string Permanent_Pincode, 
                    string PhoneNo, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Locality, 
                    string Postal_Door_No, 
                    string Postal_Pincode, 
                    string PostalState, 
                    string RationCardNo, 
                    string DateOfBirth, 
                    string Challan_Amount, 
                    string User_Charges, 
                    string Courier_Charges, 
                    string Total_Amount, 
                    string Doc_Applicationform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAdangalCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAdangalCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetAdangalCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAdangalCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFMBCopySurveyNumbers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFMBCopySurveyNumbers(string UserId, string Password, string DistrictID, string MandalID, string VillageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFMBCopySurveyNumbers", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFMBCopySurveyNumbersAsync(string UserId, string Password, string DistrictID, string MandalID, string VillageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFMBCopyDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFMBCopyDetails(string UserID, string Password, string District, string Mandal, string Village, string Surveyno, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFMBCopyDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFMBCopyDetailsAsync(string UserID, string Password, string District, string Mandal, string Village, string Surveyno, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/FMBCopyGetTransactionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FMBCopyGetTransactionID(
                    string UserID, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string FMB_District, 
                    string FMB_Mandal, 
                    string FMB_Village, 
                    string FMB_SurveyNo, 
                    string ApplicationNumber, 
                    string Applicant_Name, 
                    string FatherName, 
                    string AAdharNo, 
                    string Delivery_Type, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string Permanent_Door_No, 
                    string Permanent_Pincode, 
                    string MobileNo, 
                    string Email, 
                    string Service_charge, 
                    string User_Charge, 
                    string Postal_Charge, 
                    string challan_amount, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string FMBSign, 
                    string FMBHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/FMBCopyGetTransactionID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> FMBCopyGetTransactionIDAsync(
                    string UserID, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string FMB_District, 
                    string FMB_Mandal, 
                    string FMB_Village, 
                    string FMB_SurveyNo, 
                    string ApplicationNumber, 
                    string Applicant_Name, 
                    string FatherName, 
                    string AAdharNo, 
                    string Delivery_Type, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string Permanent_Door_No, 
                    string Permanent_Pincode, 
                    string MobileNo, 
                    string Email, 
                    string Service_charge, 
                    string User_Charge, 
                    string Postal_Charge, 
                    string challan_amount, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string FMBSign, 
                    string FMBHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFMBCopyCertificatePDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFMBCopyCertificatePDF(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/GetFMBCopyCertificatePDF", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFMBCopyCertificatePDFAsync(string UserId, string Password, string Appno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCommunityDOBServiceTypeList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCommunityDOBServiceTypeList(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCommunityDOBServiceTypeList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCommunityDOBServiceTypeListAsync(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCommunityOftheApplicantCaste", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCommunityOftheApplicantCaste(string UserId, string Password, string ServiceType, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCommunityOftheApplicantCaste", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCommunityOftheApplicantCasteAsync(string UserId, string Password, string ServiceType, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCommunityOftheFatherCaste", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCommunityOftheFatherCaste(string UserId, string Password, string ServiceType, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCommunityOftheFatherCaste", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCommunityOftheFatherCasteAsync(string UserId, string Password, string ServiceType, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCommunityOftheMotherCaste", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateCommunityOftheMotherCaste(string UserId, string Password, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateCommunityOftheMotherCaste", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateCommunityOftheMotherCasteAsync(string UserId, string Password, string DistrictID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSubtribeApplicant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PopulateSubtribeApplicant(string UserId, string Password, string DistrictID, string Caste, string ServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://TG.org/PopulateSubtribeApplicant", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PopulateSubtribeApplicantAsync(string UserId, string Password, string DistrictID, string Caste, string ServiceType);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CCGetDocFile", WrapperNamespace="http://TG.org/", IsWrapped=true)]
    public partial class CCGetDocFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TG.org/", Order=0)]
        public string docId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TG.org/", Order=1)]
        public string year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TG.org/", Order=2)]
        public string sro;
        
        public CCGetDocFileRequest() {
        }
        
        public CCGetDocFileRequest(string docId, string year, string sro) {
            this.docId = docId;
            this.year = year;
            this.sro = sro;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CCGetDocFileResponse", WrapperNamespace="http://TG.org/", IsWrapped=true)]
    public partial class CCGetDocFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://TG.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CCGetDocFileResult;
        
        public CCGetDocFileResponse() {
        }
        
        public CCGetDocFileResponse(byte[] CCGetDocFileResult) {
            this.CCGetDocFileResult = CCGetDocFileResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://TG.org/")]
    public partial class AdangalTrans : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string serviceTypeField;
        
        private string applicationNumberField;
        
        private string applicantNameField;
        
        private string applicantName_TeluguField;
        
        private string fatherNameField;
        
        private string fatherName_TeluguField;
        
        private string applicant_SSIDField;
        
        private string father_SSIDField;
        
        private string genderField;
        
        private string dateOfBirthField;
        
        private string permanent_Door_NoField;
        
        private string permanent_LocalityField;
        
        private string permanent_MandalField;
        
        private string permanent_VillageField;
        
        private string permanent_PincodeField;
        
        private string permanent_DistrictField;
        
        private string permanent_Locality_TeluguField;
        
        private string postal_Door_NoField;
        
        private string postal_LocalityField;
        
        private string postal_Locality_TeluguField;
        
        private string postal_MandalField;
        
        private string postal_VillageField;
        
        private string postal_PincodeField;
        
        private string postal_DistrictField;
        
        private string mobileNoField;
        
        private string phoneNoField;
        
        private string emailField;
        
        private string rationCardNoField;
        
        private string aADHARNoField;
        
        private string delivery_TypeField;
        
        private string total_AmountField;
        
        private string service_ChargeField;
        
        private string postal_ChargeField;
        
        private string challan_AmountField;
        
        private string challan_DateField;
        
        private string file_NumberField;
        
        private string statusField;
        
        private string sLAField;
        
        private string docDistrictField;
        
        private string docMandalField;
        
        private string docVillageField;
        
        private string docYearField;
        
        private string docSurveyNoField;
        
        private string dataFlagField;
        
        private string cropFlagField;
        
        private string perstateField;
        
        private string postalStateField;
        
        private string createdbyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
                this.RaisePropertyChanged("ServiceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ApplicationNumber {
            get {
                return this.applicationNumberField;
            }
            set {
                this.applicationNumberField = value;
                this.RaisePropertyChanged("ApplicationNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ApplicantName {
            get {
                return this.applicantNameField;
            }
            set {
                this.applicantNameField = value;
                this.RaisePropertyChanged("ApplicantName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ApplicantName_Telugu {
            get {
                return this.applicantName_TeluguField;
            }
            set {
                this.applicantName_TeluguField = value;
                this.RaisePropertyChanged("ApplicantName_Telugu");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FatherName {
            get {
                return this.fatherNameField;
            }
            set {
                this.fatherNameField = value;
                this.RaisePropertyChanged("FatherName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string FatherName_Telugu {
            get {
                return this.fatherName_TeluguField;
            }
            set {
                this.fatherName_TeluguField = value;
                this.RaisePropertyChanged("FatherName_Telugu");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Applicant_SSID {
            get {
                return this.applicant_SSIDField;
            }
            set {
                this.applicant_SSIDField = value;
                this.RaisePropertyChanged("Applicant_SSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Father_SSID {
            get {
                return this.father_SSIDField;
            }
            set {
                this.father_SSIDField = value;
                this.RaisePropertyChanged("Father_SSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
                this.RaisePropertyChanged("Gender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
                this.RaisePropertyChanged("DateOfBirth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Permanent_Door_No {
            get {
                return this.permanent_Door_NoField;
            }
            set {
                this.permanent_Door_NoField = value;
                this.RaisePropertyChanged("Permanent_Door_No");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Permanent_Locality {
            get {
                return this.permanent_LocalityField;
            }
            set {
                this.permanent_LocalityField = value;
                this.RaisePropertyChanged("Permanent_Locality");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Permanent_Mandal {
            get {
                return this.permanent_MandalField;
            }
            set {
                this.permanent_MandalField = value;
                this.RaisePropertyChanged("Permanent_Mandal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Permanent_Village {
            get {
                return this.permanent_VillageField;
            }
            set {
                this.permanent_VillageField = value;
                this.RaisePropertyChanged("Permanent_Village");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string Permanent_Pincode {
            get {
                return this.permanent_PincodeField;
            }
            set {
                this.permanent_PincodeField = value;
                this.RaisePropertyChanged("Permanent_Pincode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Permanent_District {
            get {
                return this.permanent_DistrictField;
            }
            set {
                this.permanent_DistrictField = value;
                this.RaisePropertyChanged("Permanent_District");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Permanent_Locality_Telugu {
            get {
                return this.permanent_Locality_TeluguField;
            }
            set {
                this.permanent_Locality_TeluguField = value;
                this.RaisePropertyChanged("Permanent_Locality_Telugu");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Postal_Door_No {
            get {
                return this.postal_Door_NoField;
            }
            set {
                this.postal_Door_NoField = value;
                this.RaisePropertyChanged("Postal_Door_No");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string Postal_Locality {
            get {
                return this.postal_LocalityField;
            }
            set {
                this.postal_LocalityField = value;
                this.RaisePropertyChanged("Postal_Locality");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string Postal_Locality_Telugu {
            get {
                return this.postal_Locality_TeluguField;
            }
            set {
                this.postal_Locality_TeluguField = value;
                this.RaisePropertyChanged("Postal_Locality_Telugu");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string Postal_Mandal {
            get {
                return this.postal_MandalField;
            }
            set {
                this.postal_MandalField = value;
                this.RaisePropertyChanged("Postal_Mandal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string Postal_Village {
            get {
                return this.postal_VillageField;
            }
            set {
                this.postal_VillageField = value;
                this.RaisePropertyChanged("Postal_Village");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string Postal_Pincode {
            get {
                return this.postal_PincodeField;
            }
            set {
                this.postal_PincodeField = value;
                this.RaisePropertyChanged("Postal_Pincode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string Postal_District {
            get {
                return this.postal_DistrictField;
            }
            set {
                this.postal_DistrictField = value;
                this.RaisePropertyChanged("Postal_District");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string MobileNo {
            get {
                return this.mobileNoField;
            }
            set {
                this.mobileNoField = value;
                this.RaisePropertyChanged("MobileNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string PhoneNo {
            get {
                return this.phoneNoField;
            }
            set {
                this.phoneNoField = value;
                this.RaisePropertyChanged("PhoneNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string RationCardNo {
            get {
                return this.rationCardNoField;
            }
            set {
                this.rationCardNoField = value;
                this.RaisePropertyChanged("RationCardNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string AADHARNo {
            get {
                return this.aADHARNoField;
            }
            set {
                this.aADHARNoField = value;
                this.RaisePropertyChanged("AADHARNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string Delivery_Type {
            get {
                return this.delivery_TypeField;
            }
            set {
                this.delivery_TypeField = value;
                this.RaisePropertyChanged("Delivery_Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string Total_Amount {
            get {
                return this.total_AmountField;
            }
            set {
                this.total_AmountField = value;
                this.RaisePropertyChanged("Total_Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string Service_Charge {
            get {
                return this.service_ChargeField;
            }
            set {
                this.service_ChargeField = value;
                this.RaisePropertyChanged("Service_Charge");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string Postal_Charge {
            get {
                return this.postal_ChargeField;
            }
            set {
                this.postal_ChargeField = value;
                this.RaisePropertyChanged("Postal_Charge");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public string Challan_Amount {
            get {
                return this.challan_AmountField;
            }
            set {
                this.challan_AmountField = value;
                this.RaisePropertyChanged("Challan_Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        public string Challan_Date {
            get {
                return this.challan_DateField;
            }
            set {
                this.challan_DateField = value;
                this.RaisePropertyChanged("Challan_Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        public string File_Number {
            get {
                return this.file_NumberField;
            }
            set {
                this.file_NumberField = value;
                this.RaisePropertyChanged("File_Number");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=36)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=37)]
        public string SLA {
            get {
                return this.sLAField;
            }
            set {
                this.sLAField = value;
                this.RaisePropertyChanged("SLA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=38)]
        public string DocDistrict {
            get {
                return this.docDistrictField;
            }
            set {
                this.docDistrictField = value;
                this.RaisePropertyChanged("DocDistrict");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=39)]
        public string DocMandal {
            get {
                return this.docMandalField;
            }
            set {
                this.docMandalField = value;
                this.RaisePropertyChanged("DocMandal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=40)]
        public string DocVillage {
            get {
                return this.docVillageField;
            }
            set {
                this.docVillageField = value;
                this.RaisePropertyChanged("DocVillage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=41)]
        public string DocYear {
            get {
                return this.docYearField;
            }
            set {
                this.docYearField = value;
                this.RaisePropertyChanged("DocYear");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=42)]
        public string DocSurveyNo {
            get {
                return this.docSurveyNoField;
            }
            set {
                this.docSurveyNoField = value;
                this.RaisePropertyChanged("DocSurveyNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=43)]
        public string DataFlag {
            get {
                return this.dataFlagField;
            }
            set {
                this.dataFlagField = value;
                this.RaisePropertyChanged("DataFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=44)]
        public string CropFlag {
            get {
                return this.cropFlagField;
            }
            set {
                this.cropFlagField = value;
                this.RaisePropertyChanged("CropFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=45)]
        public string Perstate {
            get {
                return this.perstateField;
            }
            set {
                this.perstateField = value;
                this.RaisePropertyChanged("Perstate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=46)]
        public string PostalState {
            get {
                return this.postalStateField;
            }
            set {
                this.postalStateField = value;
                this.RaisePropertyChanged("PostalState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=47)]
        public string Createdby {
            get {
                return this.createdbyField;
            }
            set {
                this.createdbyField = value;
                this.RaisePropertyChanged("Createdby");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MeesevaMobileWebserviceSoapChannel : TAppTransactionsList.meseva.MeesevaMobileWebserviceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MeesevaMobileWebserviceSoapClient : System.ServiceModel.ClientBase<TAppTransactionsList.meseva.MeesevaMobileWebserviceSoap>, TAppTransactionsList.meseva.MeesevaMobileWebserviceSoap {
        
        public MeesevaMobileWebserviceSoapClient() {
        }
        
        public MeesevaMobileWebserviceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MeesevaMobileWebserviceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeesevaMobileWebserviceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeesevaMobileWebserviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string PopulateSubtribeFather(string UserId, string Password, string DistrictID, string Caste, string ServiceType) {
            return base.Channel.PopulateSubtribeFather(UserId, Password, DistrictID, Caste, ServiceType);
        }
        
        public System.Threading.Tasks.Task<string> PopulateSubtribeFatherAsync(string UserId, string Password, string DistrictID, string Caste, string ServiceType) {
            return base.Channel.PopulateSubtribeFatherAsync(UserId, Password, DistrictID, Caste, ServiceType);
        }
        
        public string PopulateSubtribeMother(string UserId, string Password, string DistrictID, string Caste) {
            return base.Channel.PopulateSubtribeMother(UserId, Password, DistrictID, Caste);
        }
        
        public System.Threading.Tasks.Task<string> PopulateSubtribeMotherAsync(string UserId, string Password, string DistrictID, string Caste) {
            return base.Channel.PopulateSubtribeMotherAsync(UserId, Password, DistrictID, Caste);
        }
        
        public string PopulateReligionprofessedbyApplicantFatherAndMother(string userid, string password) {
            return base.Channel.PopulateReligionprofessedbyApplicantFatherAndMother(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateReligionprofessedbyApplicantFatherAndMotherAsync(string userid, string password) {
            return base.Channel.PopulateReligionprofessedbyApplicantFatherAndMotherAsync(userid, password);
        }
        
        public string GetCommunityDateofBirthTransactionNo(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string ServiceType, 
                    string ApplicationNumber, 
                    string AADHARCardNo, 
                    string ApplicantName, 
                    string Gender, 
                    string FatherOrHusbandName, 
                    string MotherName, 
                    string DateofBirth, 
                    string Age, 
                    string PresentDoorNo, 
                    string PresentLocality, 
                    string PresentDistrict, 
                    string PresentMandal, 
                    string PresentVillage, 
                    string PresentPinCode, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPinCode, 
                    string ResidenceDoorNo, 
                    string ResidencetLocality, 
                    string ResidenceDistrict, 
                    string ResidenceMandal, 
                    string ResidenceVillage, 
                    string ResidencetPinCode, 
                    string PlaceofBirthDoorNo, 
                    string PlaceofBirthLocality, 
                    string PlaceofBirthState, 
                    string PlaceofBirthDistrict, 
                    string PlaceofBirthMandal, 
                    string PlaceofBirthVillage, 
                    string PlaceofBirthPinCode, 
                    string CommunityCertificatePast_Yes_No, 
                    string CommunityOftheApplicant, 
                    string SubtribeOrSubgroupofApplicant, 
                    string CommunityoftheFather, 
                    string Subtribefather, 
                    string CommunityoftheMother, 
                    string SubtribeMother, 
                    string ReligionprofessedbyApplicant, 
                    string ReligionprofessedbyFather, 
                    string ReligionprofessedbyMother, 
                    string NaturalBornOrAdoptedBaby, 
                    string HouseholdSurveyNo, 
                    string MobileNo, 
                    string Email, 
                    string DeliveryType, 
                    string ServiceCharge, 
                    string PostalCharge, 
                    string UserCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_DOB_Study_Cert_and_SSC_Marks_Memo, 
                    string Doc_Community_Cert, 
                    string Doc_Immovable_Properties) {
            return base.Channel.GetCommunityDateofBirthTransactionNo(UserId, Password, ServiceID, LogindID, ServiceType, ApplicationNumber, AADHARCardNo, ApplicantName, Gender, FatherOrHusbandName, MotherName, DateofBirth, Age, PresentDoorNo, PresentLocality, PresentDistrict, PresentMandal, PresentVillage, PresentPinCode, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPinCode, ResidenceDoorNo, ResidencetLocality, ResidenceDistrict, ResidenceMandal, ResidenceVillage, ResidencetPinCode, PlaceofBirthDoorNo, PlaceofBirthLocality, PlaceofBirthState, PlaceofBirthDistrict, PlaceofBirthMandal, PlaceofBirthVillage, PlaceofBirthPinCode, CommunityCertificatePast_Yes_No, CommunityOftheApplicant, SubtribeOrSubgroupofApplicant, CommunityoftheFather, Subtribefather, CommunityoftheMother, SubtribeMother, ReligionprofessedbyApplicant, ReligionprofessedbyFather, ReligionprofessedbyMother, NaturalBornOrAdoptedBaby, HouseholdSurveyNo, MobileNo, Email, DeliveryType, ServiceCharge, PostalCharge, UserCharge, TotalAmount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_DOB_Study_Cert_and_SSC_Marks_Memo, Doc_Community_Cert, Doc_Immovable_Properties);
        }
        
        public System.Threading.Tasks.Task<string> GetCommunityDateofBirthTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string ServiceType, 
                    string ApplicationNumber, 
                    string AADHARCardNo, 
                    string ApplicantName, 
                    string Gender, 
                    string FatherOrHusbandName, 
                    string MotherName, 
                    string DateofBirth, 
                    string Age, 
                    string PresentDoorNo, 
                    string PresentLocality, 
                    string PresentDistrict, 
                    string PresentMandal, 
                    string PresentVillage, 
                    string PresentPinCode, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPinCode, 
                    string ResidenceDoorNo, 
                    string ResidencetLocality, 
                    string ResidenceDistrict, 
                    string ResidenceMandal, 
                    string ResidenceVillage, 
                    string ResidencetPinCode, 
                    string PlaceofBirthDoorNo, 
                    string PlaceofBirthLocality, 
                    string PlaceofBirthState, 
                    string PlaceofBirthDistrict, 
                    string PlaceofBirthMandal, 
                    string PlaceofBirthVillage, 
                    string PlaceofBirthPinCode, 
                    string CommunityCertificatePast_Yes_No, 
                    string CommunityOftheApplicant, 
                    string SubtribeOrSubgroupofApplicant, 
                    string CommunityoftheFather, 
                    string Subtribefather, 
                    string CommunityoftheMother, 
                    string SubtribeMother, 
                    string ReligionprofessedbyApplicant, 
                    string ReligionprofessedbyFather, 
                    string ReligionprofessedbyMother, 
                    string NaturalBornOrAdoptedBaby, 
                    string HouseholdSurveyNo, 
                    string MobileNo, 
                    string Email, 
                    string DeliveryType, 
                    string ServiceCharge, 
                    string PostalCharge, 
                    string UserCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_DOB_Study_Cert_and_SSC_Marks_Memo, 
                    string Doc_Community_Cert, 
                    string Doc_Immovable_Properties) {
            return base.Channel.GetCommunityDateofBirthTransactionNoAsync(UserId, Password, ServiceID, LogindID, ServiceType, ApplicationNumber, AADHARCardNo, ApplicantName, Gender, FatherOrHusbandName, MotherName, DateofBirth, Age, PresentDoorNo, PresentLocality, PresentDistrict, PresentMandal, PresentVillage, PresentPinCode, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPinCode, ResidenceDoorNo, ResidencetLocality, ResidenceDistrict, ResidenceMandal, ResidenceVillage, ResidencetPinCode, PlaceofBirthDoorNo, PlaceofBirthLocality, PlaceofBirthState, PlaceofBirthDistrict, PlaceofBirthMandal, PlaceofBirthVillage, PlaceofBirthPinCode, CommunityCertificatePast_Yes_No, CommunityOftheApplicant, SubtribeOrSubgroupofApplicant, CommunityoftheFather, Subtribefather, CommunityoftheMother, SubtribeMother, ReligionprofessedbyApplicant, ReligionprofessedbyFather, ReligionprofessedbyMother, NaturalBornOrAdoptedBaby, HouseholdSurveyNo, MobileNo, Email, DeliveryType, ServiceCharge, PostalCharge, UserCharge, TotalAmount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_DOB_Study_Cert_and_SSC_Marks_Memo, Doc_Community_Cert, Doc_Immovable_Properties);
        }
        
        public string GetCommunityDateofBirthCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetCommunityDateofBirthCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetCommunityDateofBirthCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetCommunityDateofBirthCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string PopulateDivision(string UserId, string Password, string DistrictID, string MandalID) {
            return base.Channel.PopulateDivision(UserId, Password, DistrictID, MandalID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateDivisionAsync(string UserId, string Password, string DistrictID, string MandalID) {
            return base.Channel.PopulateDivisionAsync(UserId, Password, DistrictID, MandalID);
        }
        
        public string PopulateMutationType(string userid, string password) {
            return base.Channel.PopulateMutationType(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateMutationTypeAsync(string userid, string password) {
            return base.Channel.PopulateMutationTypeAsync(userid, password);
        }
        
        public string PopulateMutationCaste(string userid, string password) {
            return base.Channel.PopulateMutationCaste(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateMutationCasteAsync(string userid, string password) {
            return base.Channel.PopulateMutationCasteAsync(userid, password);
        }
        
        public string PopulateKathaDetails(string userid, string password, string VillageId, string SurveyNo) {
            return base.Channel.PopulateKathaDetails(userid, password, VillageId, SurveyNo);
        }
        
        public System.Threading.Tasks.Task<string> PopulateKathaDetailsAsync(string userid, string password, string VillageId, string SurveyNo) {
            return base.Channel.PopulateKathaDetailsAsync(userid, password, VillageId, SurveyNo);
        }
        
        public string PopulateSubRegistar(string UserId, string Password, string DistrictID) {
            return base.Channel.PopulateSubRegistar(UserId, Password, DistrictID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateSubRegistarAsync(string UserId, string Password, string DistrictID) {
            return base.Channel.PopulateSubRegistarAsync(UserId, Password, DistrictID);
        }
        
        public string GetMutationApplicationTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string ApplicationNumber, 
                    string AADHARCardNo, 
                    string BuyerName, 
                    string FatherOrHusbandName, 
                    string Gender, 
                    string DateOfBirth, 
                    string BuyerKathaNo, 
                    string Permanent_State, 
                    string Permanent_DoorNo, 
                    string Permanent_Locality, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string Permanent_PinCode, 
                    string Postal_State, 
                    string Postal_DoorNo, 
                    string Postal_Locality, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_PinCode, 
                    string MobileNo, 
                    string Phone, 
                    string Email, 
                    string Remarks, 
                    string RationCardNo, 
                    string Delivery_Type, 
                    string docdistrict, 
                    string docmandal, 
                    string docvillage, 
                    string Division, 
                    string Caste, 
                    string MutationType, 
                    string GridMutationDetails, 
                    string User_Charge, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string Challan_Amount, 
                    string Total_Amount, 
                    string Doc_Registered_Document_Copies, 
                    string Doc_Old_Pattadar_Passbook, 
                    string Doc_Passport_Size_photo, 
                    string Doc_Signature) {
            return base.Channel.GetMutationApplicationTransactionNo(UserId, Password, LogindID, ServiceID, AddressFlag, ApplicationNumber, AADHARCardNo, BuyerName, FatherOrHusbandName, Gender, DateOfBirth, BuyerKathaNo, Permanent_State, Permanent_DoorNo, Permanent_Locality, Permanent_District, Permanent_Mandal, Permanent_Village, Permanent_PinCode, Postal_State, Postal_DoorNo, Postal_Locality, Postal_District, Postal_Mandal, Postal_Village, Postal_PinCode, MobileNo, Phone, Email, Remarks, RationCardNo, Delivery_Type, docdistrict, docmandal, docvillage, Division, Caste, MutationType, GridMutationDetails, User_Charge, Service_Charge, Postal_Charge, Challan_Amount, Total_Amount, Doc_Registered_Document_Copies, Doc_Old_Pattadar_Passbook, Doc_Passport_Size_photo, Doc_Signature);
        }
        
        public System.Threading.Tasks.Task<string> GetMutationApplicationTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string ApplicationNumber, 
                    string AADHARCardNo, 
                    string BuyerName, 
                    string FatherOrHusbandName, 
                    string Gender, 
                    string DateOfBirth, 
                    string BuyerKathaNo, 
                    string Permanent_State, 
                    string Permanent_DoorNo, 
                    string Permanent_Locality, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string Permanent_PinCode, 
                    string Postal_State, 
                    string Postal_DoorNo, 
                    string Postal_Locality, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_PinCode, 
                    string MobileNo, 
                    string Phone, 
                    string Email, 
                    string Remarks, 
                    string RationCardNo, 
                    string Delivery_Type, 
                    string docdistrict, 
                    string docmandal, 
                    string docvillage, 
                    string Division, 
                    string Caste, 
                    string MutationType, 
                    string GridMutationDetails, 
                    string User_Charge, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string Challan_Amount, 
                    string Total_Amount, 
                    string Doc_Registered_Document_Copies, 
                    string Doc_Old_Pattadar_Passbook, 
                    string Doc_Passport_Size_photo, 
                    string Doc_Signature) {
            return base.Channel.GetMutationApplicationTransactionNoAsync(UserId, Password, LogindID, ServiceID, AddressFlag, ApplicationNumber, AADHARCardNo, BuyerName, FatherOrHusbandName, Gender, DateOfBirth, BuyerKathaNo, Permanent_State, Permanent_DoorNo, Permanent_Locality, Permanent_District, Permanent_Mandal, Permanent_Village, Permanent_PinCode, Postal_State, Postal_DoorNo, Postal_Locality, Postal_District, Postal_Mandal, Postal_Village, Postal_PinCode, MobileNo, Phone, Email, Remarks, RationCardNo, Delivery_Type, docdistrict, docmandal, docvillage, Division, Caste, MutationType, GridMutationDetails, User_Charge, Service_Charge, Postal_Charge, Challan_Amount, Total_Amount, Doc_Registered_Document_Copies, Doc_Old_Pattadar_Passbook, Doc_Passport_Size_photo, Doc_Signature);
        }
        
        public string GetIssueOfNoForStoringOfPetroleumProductsTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string ApplicationNumber, 
                    string ApplicantName, 
                    string ApplicantCalling, 
                    string FatherOrHusbandName, 
                    string AadhaarNo, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentLocality, 
                    string PermanentDoorNo, 
                    string PermanentPincode, 
                    string DocDistrict, 
                    string DocMandal, 
                    string DocVillage, 
                    string DOCPincode, 
                    string NearestPoliceStation, 
                    string NearestRailwayStation, 
                    string SurveyNumber, 
                    string LicenceNumber, 
                    string LicenceType, 
                    string NumberOfLicence, 
                    string ImpAIB_Quantity_In_litres, 
                    string ImpANIB, 
                    string ImpATotal, 
                    string ImpBIB, 
                    string ImpBNIB, 
                    string ImpBTotal, 
                    string ImpCIB, 
                    string ImpCNIB, 
                    string ImpCTotal, 
                    string ImpTotal, 
                    string StoredAIB_Quantity_In_litres, 
                    string StoredANIB, 
                    string StoredATotal, 
                    string StoredBIB, 
                    string StoredBNIB, 
                    string StoredBTotal, 
                    string StoredCIB, 
                    string StoredCNIB, 
                    string StoredCTotal, 
                    string StoredTotal, 
                    string InfName, 
                    string InfRelation, 
                    string InfEmail, 
                    string InfMobileNo, 
                    string DeliveryType, 
                    string StateID, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalMobile, 
                    string PostalLocality, 
                    string PostalDoorNo, 
                    string PostalPinCode, 
                    string Phone, 
                    string User_Charge, 
                    string Postal_Charge, 
                    string Service_Charge, 
                    string Total_Amount, 
                    string Doc_Site_Plan, 
                    string Doc_Copyof_PassbookOrtitle_deedOrsale_deed, 
                    string Doc_Lease_Agreement, 
                    string Doc_Letterof_oilcompany, 
                    string Doc_Extract_Pahani) {
            return base.Channel.GetIssueOfNoForStoringOfPetroleumProductsTransactionNo(UserId, Password, LogindID, ServiceID, AddressFlag, ApplicationNumber, ApplicantName, ApplicantCalling, FatherOrHusbandName, AadhaarNo, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentLocality, PermanentDoorNo, PermanentPincode, DocDistrict, DocMandal, DocVillage, DOCPincode, NearestPoliceStation, NearestRailwayStation, SurveyNumber, LicenceNumber, LicenceType, NumberOfLicence, ImpAIB_Quantity_In_litres, ImpANIB, ImpATotal, ImpBIB, ImpBNIB, ImpBTotal, ImpCIB, ImpCNIB, ImpCTotal, ImpTotal, StoredAIB_Quantity_In_litres, StoredANIB, StoredATotal, StoredBIB, StoredBNIB, StoredBTotal, StoredCIB, StoredCNIB, StoredCTotal, StoredTotal, InfName, InfRelation, InfEmail, InfMobileNo, DeliveryType, StateID, PostalDistrict, PostalMandal, PostalVillage, PostalMobile, PostalLocality, PostalDoorNo, PostalPinCode, Phone, User_Charge, Postal_Charge, Service_Charge, Total_Amount, Doc_Site_Plan, Doc_Copyof_PassbookOrtitle_deedOrsale_deed, Doc_Lease_Agreement, Doc_Letterof_oilcompany, Doc_Extract_Pahani);
        }
        
        public System.Threading.Tasks.Task<string> GetIssueOfNoForStoringOfPetroleumProductsTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string ApplicationNumber, 
                    string ApplicantName, 
                    string ApplicantCalling, 
                    string FatherOrHusbandName, 
                    string AadhaarNo, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentLocality, 
                    string PermanentDoorNo, 
                    string PermanentPincode, 
                    string DocDistrict, 
                    string DocMandal, 
                    string DocVillage, 
                    string DOCPincode, 
                    string NearestPoliceStation, 
                    string NearestRailwayStation, 
                    string SurveyNumber, 
                    string LicenceNumber, 
                    string LicenceType, 
                    string NumberOfLicence, 
                    string ImpAIB_Quantity_In_litres, 
                    string ImpANIB, 
                    string ImpATotal, 
                    string ImpBIB, 
                    string ImpBNIB, 
                    string ImpBTotal, 
                    string ImpCIB, 
                    string ImpCNIB, 
                    string ImpCTotal, 
                    string ImpTotal, 
                    string StoredAIB_Quantity_In_litres, 
                    string StoredANIB, 
                    string StoredATotal, 
                    string StoredBIB, 
                    string StoredBNIB, 
                    string StoredBTotal, 
                    string StoredCIB, 
                    string StoredCNIB, 
                    string StoredCTotal, 
                    string StoredTotal, 
                    string InfName, 
                    string InfRelation, 
                    string InfEmail, 
                    string InfMobileNo, 
                    string DeliveryType, 
                    string StateID, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalMobile, 
                    string PostalLocality, 
                    string PostalDoorNo, 
                    string PostalPinCode, 
                    string Phone, 
                    string User_Charge, 
                    string Postal_Charge, 
                    string Service_Charge, 
                    string Total_Amount, 
                    string Doc_Site_Plan, 
                    string Doc_Copyof_PassbookOrtitle_deedOrsale_deed, 
                    string Doc_Lease_Agreement, 
                    string Doc_Letterof_oilcompany, 
                    string Doc_Extract_Pahani) {
            return base.Channel.GetIssueOfNoForStoringOfPetroleumProductsTransactionNoAsync(UserId, Password, LogindID, ServiceID, AddressFlag, ApplicationNumber, ApplicantName, ApplicantCalling, FatherOrHusbandName, AadhaarNo, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentLocality, PermanentDoorNo, PermanentPincode, DocDistrict, DocMandal, DocVillage, DOCPincode, NearestPoliceStation, NearestRailwayStation, SurveyNumber, LicenceNumber, LicenceType, NumberOfLicence, ImpAIB_Quantity_In_litres, ImpANIB, ImpATotal, ImpBIB, ImpBNIB, ImpBTotal, ImpCIB, ImpCNIB, ImpCTotal, ImpTotal, StoredAIB_Quantity_In_litres, StoredANIB, StoredATotal, StoredBIB, StoredBNIB, StoredBTotal, StoredCIB, StoredCNIB, StoredCTotal, StoredTotal, InfName, InfRelation, InfEmail, InfMobileNo, DeliveryType, StateID, PostalDistrict, PostalMandal, PostalVillage, PostalMobile, PostalLocality, PostalDoorNo, PostalPinCode, Phone, User_Charge, Postal_Charge, Service_Charge, Total_Amount, Doc_Site_Plan, Doc_Copyof_PassbookOrtitle_deedOrsale_deed, Doc_Lease_Agreement, Doc_Letterof_oilcompany, Doc_Extract_Pahani);
        }
        
        public string PopulateLicenceType(string userid, string password) {
            return base.Channel.PopulateLicenceType(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateLicenceTypeAsync(string userid, string password) {
            return base.Channel.PopulateLicenceTypeAsync(userid, password);
        }
        
        public string GetPetroleumProductsCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetPetroleumProductsCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetPetroleumProductsCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetPetroleumProductsCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetIssueOfOccupancyRightScertForINAMLANDSTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string ApplicationNumber, 
                    string AadharNumber, 
                    string ApplicantName, 
                    string FatherName, 
                    string State, 
                    string ApplicantDistrict, 
                    string ApplicantMandal, 
                    string ApplicantVillage, 
                    string ApplicantDoorNo, 
                    string ApplicantLocality, 
                    string ApplicantPincode, 
                    string ApplicantInamdar_Yes_No, 
                    string RelationShipInamdar, 
                    string NatureOfInterests, 
                    string RevenueAmountPaid, 
                    string LandDistrict, 
                    string LandMandal, 
                    string GridINAMLANDSDetails, 
                    string InformantName, 
                    string RelationshipApp, 
                    string InformantEmail, 
                    string InformantMobileNo, 
                    string DeliveryType, 
                    string ServiceCharge, 
                    string ChallanAmount, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_kasara_pahani, 
                    string Doc_FamilyTree_RelationshipwithInamdhar) {
            return base.Channel.GetIssueOfOccupancyRightScertForINAMLANDSTransactionNo(UserId, Password, LogindID, ServiceID, ApplicationNumber, AadharNumber, ApplicantName, FatherName, State, ApplicantDistrict, ApplicantMandal, ApplicantVillage, ApplicantDoorNo, ApplicantLocality, ApplicantPincode, ApplicantInamdar_Yes_No, RelationShipInamdar, NatureOfInterests, RevenueAmountPaid, LandDistrict, LandMandal, GridINAMLANDSDetails, InformantName, RelationshipApp, InformantEmail, InformantMobileNo, DeliveryType, ServiceCharge, ChallanAmount, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_kasara_pahani, Doc_FamilyTree_RelationshipwithInamdhar);
        }
        
        public System.Threading.Tasks.Task<string> GetIssueOfOccupancyRightScertForINAMLANDSTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string ApplicationNumber, 
                    string AadharNumber, 
                    string ApplicantName, 
                    string FatherName, 
                    string State, 
                    string ApplicantDistrict, 
                    string ApplicantMandal, 
                    string ApplicantVillage, 
                    string ApplicantDoorNo, 
                    string ApplicantLocality, 
                    string ApplicantPincode, 
                    string ApplicantInamdar_Yes_No, 
                    string RelationShipInamdar, 
                    string NatureOfInterests, 
                    string RevenueAmountPaid, 
                    string LandDistrict, 
                    string LandMandal, 
                    string GridINAMLANDSDetails, 
                    string InformantName, 
                    string RelationshipApp, 
                    string InformantEmail, 
                    string InformantMobileNo, 
                    string DeliveryType, 
                    string ServiceCharge, 
                    string ChallanAmount, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_kasara_pahani, 
                    string Doc_FamilyTree_RelationshipwithInamdhar) {
            return base.Channel.GetIssueOfOccupancyRightScertForINAMLANDSTransactionNoAsync(UserId, Password, LogindID, ServiceID, ApplicationNumber, AadharNumber, ApplicantName, FatherName, State, ApplicantDistrict, ApplicantMandal, ApplicantVillage, ApplicantDoorNo, ApplicantLocality, ApplicantPincode, ApplicantInamdar_Yes_No, RelationShipInamdar, NatureOfInterests, RevenueAmountPaid, LandDistrict, LandMandal, GridINAMLANDSDetails, InformantName, RelationshipApp, InformantEmail, InformantMobileNo, DeliveryType, ServiceCharge, ChallanAmount, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_kasara_pahani, Doc_FamilyTree_RelationshipwithInamdhar);
        }
        
        public string GetINAMLANDSCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetINAMLANDSCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetINAMLANDSCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetINAMLANDSCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetCCDocDistrict(string UserID, string Password) {
            return base.Channel.GetCCDocDistrict(UserID, Password);
        }
        
        public System.Threading.Tasks.Task<string> GetCCDocDistrictAsync(string UserID, string Password) {
            return base.Channel.GetCCDocDistrictAsync(UserID, Password);
        }
        
        public string GetCCGetDocSRO(string UserID, string Password, string DistrictID) {
            return base.Channel.GetCCGetDocSRO(UserID, Password, DistrictID);
        }
        
        public System.Threading.Tasks.Task<string> GetCCGetDocSROAsync(string UserID, string Password, string DistrictID) {
            return base.Channel.GetCCGetDocSROAsync(UserID, Password, DistrictID);
        }
        
        public string GetCCGetDocYear(string UserID, string Password, string SROCode) {
            return base.Channel.GetCCGetDocYear(UserID, Password, SROCode);
        }
        
        public System.Threading.Tasks.Task<string> GetCCGetDocYearAsync(string UserID, string Password, string SROCode) {
            return base.Channel.GetCCGetDocYearAsync(UserID, Password, SROCode);
        }
        
        public string GetCCGetDocList(string UserID, string Password, string SROCode, string SROYear) {
            return base.Channel.GetCCGetDocList(UserID, Password, SROCode, SROYear);
        }
        
        public System.Threading.Tasks.Task<string> GetCCGetDocListAsync(string UserID, string Password, string SROCode, string SROYear) {
            return base.Channel.GetCCGetDocListAsync(UserID, Password, SROCode, SROYear);
        }
        
        public string GetCertifiedCopyOfRegistrationDocumentTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string Doc_District, 
                    string SRO_Code, 
                    string Year_of_Registration, 
                    string Document_id, 
                    string ApplicationNumber, 
                    string ApplicantName, 
                    string DoorNo, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string PinCode, 
                    string MobileNo, 
                    string Email, 
                    string Chalan_Amount, 
                    string User_Charge, 
                    string Courier_Charge, 
                    string Final_Amount, 
                    string FileFlag, 
                    string NoOfPages) {
            return base.Channel.GetCertifiedCopyOfRegistrationDocumentTransactionNo(UserId, Password, LogindID, ServiceID, Doc_District, SRO_Code, Year_of_Registration, Document_id, ApplicationNumber, ApplicantName, DoorNo, Permanent_District, Permanent_Mandal, Permanent_Village, PinCode, MobileNo, Email, Chalan_Amount, User_Charge, Courier_Charge, Final_Amount, FileFlag, NoOfPages);
        }
        
        public System.Threading.Tasks.Task<string> GetCertifiedCopyOfRegistrationDocumentTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string Doc_District, 
                    string SRO_Code, 
                    string Year_of_Registration, 
                    string Document_id, 
                    string ApplicationNumber, 
                    string ApplicantName, 
                    string DoorNo, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string PinCode, 
                    string MobileNo, 
                    string Email, 
                    string Chalan_Amount, 
                    string User_Charge, 
                    string Courier_Charge, 
                    string Final_Amount, 
                    string FileFlag, 
                    string NoOfPages) {
            return base.Channel.GetCertifiedCopyOfRegistrationDocumentTransactionNoAsync(UserId, Password, LogindID, ServiceID, Doc_District, SRO_Code, Year_of_Registration, Document_id, ApplicationNumber, ApplicantName, DoorNo, Permanent_District, Permanent_Mandal, Permanent_Village, PinCode, MobileNo, Email, Chalan_Amount, User_Charge, Courier_Charge, Final_Amount, FileFlag, NoOfPages);
        }
        
        public string GetCertifiedCopyDetails(string UserId, string Password, string DistrictID, string SROCode, string DocYear, string DocumentNumber, string ApplicationNo) {
            return base.Channel.GetCertifiedCopyDetails(UserId, Password, DistrictID, SROCode, DocYear, DocumentNumber, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<string> GetCertifiedCopyDetailsAsync(string UserId, string Password, string DistrictID, string SROCode, string DocYear, string DocumentNumber, string ApplicationNo) {
            return base.Channel.GetCertifiedCopyDetailsAsync(UserId, Password, DistrictID, SROCode, DocYear, DocumentNumber, ApplicationNo);
        }
        
        public string GetCertifiedCopyDetails_New(string UserId, string Password, string DistrictID, string SROCode, string DocYear, string DocumentNumber, string ApplicationNo) {
            return base.Channel.GetCertifiedCopyDetails_New(UserId, Password, DistrictID, SROCode, DocYear, DocumentNumber, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<string> GetCertifiedCopyDetails_NewAsync(string UserId, string Password, string DistrictID, string SROCode, string DocYear, string DocumentNumber, string ApplicationNo) {
            return base.Channel.GetCertifiedCopyDetails_NewAsync(UserId, Password, DistrictID, SROCode, DocYear, DocumentNumber, ApplicationNo);
        }
        
        public string GetPreviewCC(string UserId, string Password, string Appno) {
            return base.Channel.GetPreviewCC(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetPreviewCCAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetPreviewCCAsync(UserId, Password, Appno);
        }
        
        public string GetCertifiedCopyOfRegistrationCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetCertifiedCopyOfRegistrationCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetCertifiedCopyOfRegistrationCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetCertifiedCopyOfRegistrationCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetServiceCharges_GHMC(string Userid, string Password, string ServiceId, string ServiceType, string deliveryType, string NoofCopies) {
            return base.Channel.GetServiceCharges_GHMC(Userid, Password, ServiceId, ServiceType, deliveryType, NoofCopies);
        }
        
        public System.Threading.Tasks.Task<string> GetServiceCharges_GHMCAsync(string Userid, string Password, string ServiceId, string ServiceType, string deliveryType, string NoofCopies) {
            return base.Channel.GetServiceCharges_GHMCAsync(Userid, Password, ServiceId, ServiceType, deliveryType, NoofCopies);
        }
        
        public string GHMCBirthDeathDataByAckNo(string UserID, string Password, string Service_Id, string ServiceType, string AckNo) {
            return base.Channel.GHMCBirthDeathDataByAckNo(UserID, Password, Service_Id, ServiceType, AckNo);
        }
        
        public System.Threading.Tasks.Task<string> GHMCBirthDeathDataByAckNoAsync(string UserID, string Password, string Service_Id, string ServiceType, string AckNo) {
            return base.Channel.GHMCBirthDeathDataByAckNoAsync(UserID, Password, Service_Id, ServiceType, AckNo);
        }
        
        public string GHMCorrectionAndChidlNameInclusionDataByAckNo(string UserID, string Password, string Service_Id, string ServiceType, string AckNo) {
            return base.Channel.GHMCorrectionAndChidlNameInclusionDataByAckNo(UserID, Password, Service_Id, ServiceType, AckNo);
        }
        
        public System.Threading.Tasks.Task<string> GHMCorrectionAndChidlNameInclusionDataByAckNoAsync(string UserID, string Password, string Service_Id, string ServiceType, string AckNo) {
            return base.Channel.GHMCorrectionAndChidlNameInclusionDataByAckNoAsync(UserID, Password, Service_Id, ServiceType, AckNo);
        }
        
        public string GHMCBirthOrDeathSearchRecord(string UserID, string Password, string Service_Id, string ServiceType, string DateOfBirthorDeath, string RegistrationNo, string CircleNo, string Gender, string MotherName, string FatherHusbandName, string DeceasedName) {
            return base.Channel.GHMCBirthOrDeathSearchRecord(UserID, Password, Service_Id, ServiceType, DateOfBirthorDeath, RegistrationNo, CircleNo, Gender, MotherName, FatherHusbandName, DeceasedName);
        }
        
        public System.Threading.Tasks.Task<string> GHMCBirthOrDeathSearchRecordAsync(string UserID, string Password, string Service_Id, string ServiceType, string DateOfBirthorDeath, string RegistrationNo, string CircleNo, string Gender, string MotherName, string FatherHusbandName, string DeceasedName) {
            return base.Channel.GHMCBirthOrDeathSearchRecordAsync(UserID, Password, Service_Id, ServiceType, DateOfBirthorDeath, RegistrationNo, CircleNo, Gender, MotherName, FatherHusbandName, DeceasedName);
        }
        
        public string GetGHMCBirthDeathTransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AcknowledgementNo, 
                    string RegistrationNumber, 
                    string EventName, 
                    string EventDate, 
                    string Gender, 
                    string Circle, 
                    string Ward, 
                    string Locality, 
                    string ForHusName, 
                    string MotherName, 
                    string ResidenceAddress, 
                    string PermanentAddress, 
                    string RegDate, 
                    string DeathCause, 
                    string PlaceOfEvent, 
                    string Remarks, 
                    string informantName, 
                    string informantRelation, 
                    string informantAddress, 
                    string informantPhoneNo, 
                    string AadharCardNo, 
                    string RationCardNo, 
                    string informantEmailId, 
                    string informantRemarks, 
                    string informantPinCode, 
                    string Delivery_Type, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string postalDoorNo, 
                    string postalDistrict, 
                    string postalMandalId, 
                    string postalVillageId, 
                    string postalPinCode, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform) {
            return base.Channel.GetGHMCBirthDeathTransactionNo(UserId, Password, LoginID, Service_Id, Service_Type, ApplicationNumber, AcknowledgementNo, RegistrationNumber, EventName, EventDate, Gender, Circle, Ward, Locality, ForHusName, MotherName, ResidenceAddress, PermanentAddress, RegDate, DeathCause, PlaceOfEvent, Remarks, informantName, informantRelation, informantAddress, informantPhoneNo, AadharCardNo, RationCardNo, informantEmailId, informantRemarks, informantPinCode, Delivery_Type, NumberOfCopies, Purpose, postalDoorNo, postalDistrict, postalMandalId, postalVillageId, postalPinCode, Service_Charge, Postal_Charge, User_Charge, Total_Amount, Doc_Applicationform);
        }
        
        public System.Threading.Tasks.Task<string> GetGHMCBirthDeathTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AcknowledgementNo, 
                    string RegistrationNumber, 
                    string EventName, 
                    string EventDate, 
                    string Gender, 
                    string Circle, 
                    string Ward, 
                    string Locality, 
                    string ForHusName, 
                    string MotherName, 
                    string ResidenceAddress, 
                    string PermanentAddress, 
                    string RegDate, 
                    string DeathCause, 
                    string PlaceOfEvent, 
                    string Remarks, 
                    string informantName, 
                    string informantRelation, 
                    string informantAddress, 
                    string informantPhoneNo, 
                    string AadharCardNo, 
                    string RationCardNo, 
                    string informantEmailId, 
                    string informantRemarks, 
                    string informantPinCode, 
                    string Delivery_Type, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string postalDoorNo, 
                    string postalDistrict, 
                    string postalMandalId, 
                    string postalVillageId, 
                    string postalPinCode, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform) {
            return base.Channel.GetGHMCBirthDeathTransactionNoAsync(UserId, Password, LoginID, Service_Id, Service_Type, ApplicationNumber, AcknowledgementNo, RegistrationNumber, EventName, EventDate, Gender, Circle, Ward, Locality, ForHusName, MotherName, ResidenceAddress, PermanentAddress, RegDate, DeathCause, PlaceOfEvent, Remarks, informantName, informantRelation, informantAddress, informantPhoneNo, AadharCardNo, RationCardNo, informantEmailId, informantRemarks, informantPinCode, Delivery_Type, NumberOfCopies, Purpose, postalDoorNo, postalDistrict, postalMandalId, postalVillageId, postalPinCode, Service_Charge, Postal_Charge, User_Charge, Total_Amount, Doc_Applicationform);
        }
        
        public string GetGHMCBirthDeathCertificatePDF(string UserId, string Password, string Service_id, string ServiceType, string Appno) {
            return base.Channel.GetGHMCBirthDeathCertificatePDF(UserId, Password, Service_id, ServiceType, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetGHMCBirthDeathCertificatePDFAsync(string UserId, string Password, string Service_id, string ServiceType, string Appno) {
            return base.Channel.GetGHMCBirthDeathCertificatePDFAsync(UserId, Password, Service_id, ServiceType, Appno);
        }
        
        public string GetGHMCNonAailabilityBirthDeathTransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AadharCardNo, 
                    string ApplicantName, 
                    string ApplicantFatherName, 
                    string Age, 
                    string Address, 
                    string MobileNumber, 
                    string EventRelation, 
                    string RationCardNumber, 
                    string EmailID, 
                    string EventName, 
                    string DateofEvent, 
                    string PlaceofEvent, 
                    string DeathCause, 
                    string ResidenceAddress, 
                    string EventGender, 
                    string MotherName, 
                    string FatherName, 
                    string Circle, 
                    string Ward, 
                    string Delivery_Type, 
                    string Postal_DoorNo, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Affidavit, 
                    string SchoolBonafied, 
                    string RationOtherResidenceProof, 
                    string OtherDoc, 
                    string SSCMark, 
                    string Deathnotarized, 
                    string Otherevidence, 
                    string Medicallegal, 
                    string BurialGroundReceipt) {
            return base.Channel.GetGHMCNonAailabilityBirthDeathTransactionNo(UserId, Password, LoginID, Service_Id, Service_Type, ApplicationNumber, AadharCardNo, ApplicantName, ApplicantFatherName, Age, Address, MobileNumber, EventRelation, RationCardNumber, EmailID, EventName, DateofEvent, PlaceofEvent, DeathCause, ResidenceAddress, EventGender, MotherName, FatherName, Circle, Ward, Delivery_Type, Postal_DoorNo, Postal_District, Postal_Mandal, Postal_Village, Postal_Pincode, NumberOfCopies, Purpose, Service_Charge, Postal_Charge, User_Charge, Total_Amount, Affidavit, SchoolBonafied, RationOtherResidenceProof, OtherDoc, SSCMark, Deathnotarized, Otherevidence, Medicallegal, BurialGroundReceipt);
        }
        
        public System.Threading.Tasks.Task<string> GetGHMCNonAailabilityBirthDeathTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AadharCardNo, 
                    string ApplicantName, 
                    string ApplicantFatherName, 
                    string Age, 
                    string Address, 
                    string MobileNumber, 
                    string EventRelation, 
                    string RationCardNumber, 
                    string EmailID, 
                    string EventName, 
                    string DateofEvent, 
                    string PlaceofEvent, 
                    string DeathCause, 
                    string ResidenceAddress, 
                    string EventGender, 
                    string MotherName, 
                    string FatherName, 
                    string Circle, 
                    string Ward, 
                    string Delivery_Type, 
                    string Postal_DoorNo, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Affidavit, 
                    string SchoolBonafied, 
                    string RationOtherResidenceProof, 
                    string OtherDoc, 
                    string SSCMark, 
                    string Deathnotarized, 
                    string Otherevidence, 
                    string Medicallegal, 
                    string BurialGroundReceipt) {
            return base.Channel.GetGHMCNonAailabilityBirthDeathTransactionNoAsync(UserId, Password, LoginID, Service_Id, Service_Type, ApplicationNumber, AadharCardNo, ApplicantName, ApplicantFatherName, Age, Address, MobileNumber, EventRelation, RationCardNumber, EmailID, EventName, DateofEvent, PlaceofEvent, DeathCause, ResidenceAddress, EventGender, MotherName, FatherName, Circle, Ward, Delivery_Type, Postal_DoorNo, Postal_District, Postal_Mandal, Postal_Village, Postal_Pincode, NumberOfCopies, Purpose, Service_Charge, Postal_Charge, User_Charge, Total_Amount, Affidavit, SchoolBonafied, RationOtherResidenceProof, OtherDoc, SSCMark, Deathnotarized, Otherevidence, Medicallegal, BurialGroundReceipt);
        }
        
        public string GetGHMCNonAailabilityBirthDeathCertificatePDF(string UserId, string Password, string Service_id, string ServiceType, string Appno) {
            return base.Channel.GetGHMCNonAailabilityBirthDeathCertificatePDF(UserId, Password, Service_id, ServiceType, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetGHMCNonAailabilityBirthDeathCertificatePDFAsync(string UserId, string Password, string Service_id, string ServiceType, string Appno) {
            return base.Channel.GetGHMCNonAailabilityBirthDeathCertificatePDFAsync(UserId, Password, Service_id, ServiceType, Appno);
        }
        
        public string GetGHMCCorrectionBirthDeathTransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string AcknowledgementNo, 
                    string ApplicationNumber, 
                    string RegistrationNumber, 
                    string Gender, 
                    string ChangedGender, 
                    string EventName, 
                    string ChangedEventName, 
                    string FatherName, 
                    string ChangedFatherName, 
                    string MotherName, 
                    string ChangedMotherName, 
                    string DateOfEvent, 
                    string ChangedDateOfEvent, 
                    string PlaceOfEvent, 
                    string ChangedPlaceOfEvent, 
                    string Circle, 
                    string Changedcircle, 
                    string WardNo, 
                    string Locality, 
                    string ResidenceAddress, 
                    string ChangedResidenceAddress, 
                    string ReasonForDeath, 
                    string ChangedReasonForDeath, 
                    string PermanentAddress, 
                    string Remarks, 
                    string ApplicantName, 
                    string Relation, 
                    string RationCardNo, 
                    string AadhaarCardNo, 
                    string ApplicantAddress, 
                    string PinCode, 
                    string PhoneNo, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string PostalDistrict, 
                    string PostalMandalId, 
                    string PostalVillageId, 
                    string PostalPinCode, 
                    string PostalMobileNo, 
                    string PostalEmailId, 
                    string Delivery_Type, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Certificate, 
                    string ParentsDeclaration, 
                    string NotaryAffidavit, 
                    string EducationalorProofDocument, 
                    string HospitalLetter, 
                    string MedicoLegalCase) {
            return base.Channel.GetGHMCCorrectionBirthDeathTransactionNo(UserId, Password, LoginID, Service_Id, Service_Type, AcknowledgementNo, ApplicationNumber, RegistrationNumber, Gender, ChangedGender, EventName, ChangedEventName, FatherName, ChangedFatherName, MotherName, ChangedMotherName, DateOfEvent, ChangedDateOfEvent, PlaceOfEvent, ChangedPlaceOfEvent, Circle, Changedcircle, WardNo, Locality, ResidenceAddress, ChangedResidenceAddress, ReasonForDeath, ChangedReasonForDeath, PermanentAddress, Remarks, ApplicantName, Relation, RationCardNo, AadhaarCardNo, ApplicantAddress, PinCode, PhoneNo, PostalDoorNo, PostalLocality, PostalDistrict, PostalMandalId, PostalVillageId, PostalPinCode, PostalMobileNo, PostalEmailId, Delivery_Type, NumberOfCopies, Purpose, Service_Charge, Postal_Charge, User_Charge, Total_Amount, Certificate, ParentsDeclaration, NotaryAffidavit, EducationalorProofDocument, HospitalLetter, MedicoLegalCase);
        }
        
        public System.Threading.Tasks.Task<string> GetGHMCCorrectionBirthDeathTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string AcknowledgementNo, 
                    string ApplicationNumber, 
                    string RegistrationNumber, 
                    string Gender, 
                    string ChangedGender, 
                    string EventName, 
                    string ChangedEventName, 
                    string FatherName, 
                    string ChangedFatherName, 
                    string MotherName, 
                    string ChangedMotherName, 
                    string DateOfEvent, 
                    string ChangedDateOfEvent, 
                    string PlaceOfEvent, 
                    string ChangedPlaceOfEvent, 
                    string Circle, 
                    string Changedcircle, 
                    string WardNo, 
                    string Locality, 
                    string ResidenceAddress, 
                    string ChangedResidenceAddress, 
                    string ReasonForDeath, 
                    string ChangedReasonForDeath, 
                    string PermanentAddress, 
                    string Remarks, 
                    string ApplicantName, 
                    string Relation, 
                    string RationCardNo, 
                    string AadhaarCardNo, 
                    string ApplicantAddress, 
                    string PinCode, 
                    string PhoneNo, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string PostalDistrict, 
                    string PostalMandalId, 
                    string PostalVillageId, 
                    string PostalPinCode, 
                    string PostalMobileNo, 
                    string PostalEmailId, 
                    string Delivery_Type, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string Certificate, 
                    string ParentsDeclaration, 
                    string NotaryAffidavit, 
                    string EducationalorProofDocument, 
                    string HospitalLetter, 
                    string MedicoLegalCase) {
            return base.Channel.GetGHMCCorrectionBirthDeathTransactionNoAsync(UserId, Password, LoginID, Service_Id, Service_Type, AcknowledgementNo, ApplicationNumber, RegistrationNumber, Gender, ChangedGender, EventName, ChangedEventName, FatherName, ChangedFatherName, MotherName, ChangedMotherName, DateOfEvent, ChangedDateOfEvent, PlaceOfEvent, ChangedPlaceOfEvent, Circle, Changedcircle, WardNo, Locality, ResidenceAddress, ChangedResidenceAddress, ReasonForDeath, ChangedReasonForDeath, PermanentAddress, Remarks, ApplicantName, Relation, RationCardNo, AadhaarCardNo, ApplicantAddress, PinCode, PhoneNo, PostalDoorNo, PostalLocality, PostalDistrict, PostalMandalId, PostalVillageId, PostalPinCode, PostalMobileNo, PostalEmailId, Delivery_Type, NumberOfCopies, Purpose, Service_Charge, Postal_Charge, User_Charge, Total_Amount, Certificate, ParentsDeclaration, NotaryAffidavit, EducationalorProofDocument, HospitalLetter, MedicoLegalCase);
        }
        
        public string PopulateCircle(string UserID, string Password) {
            return base.Channel.PopulateCircle(UserID, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCircleAsync(string UserID, string Password) {
            return base.Channel.PopulateCircleAsync(UserID, Password);
        }
        
        public string GHMCSearchBirthRecord(string UserID, string Password, string Service_Id, string ServiceType, string DateOfBirth, string RegistrationNo, string CircleNo, string Gender, string MotherName, string FatherName) {
            return base.Channel.GHMCSearchBirthRecord(UserID, Password, Service_Id, ServiceType, DateOfBirth, RegistrationNo, CircleNo, Gender, MotherName, FatherName);
        }
        
        public System.Threading.Tasks.Task<string> GHMCSearchBirthRecordAsync(string UserID, string Password, string Service_Id, string ServiceType, string DateOfBirth, string RegistrationNo, string CircleNo, string Gender, string MotherName, string FatherName) {
            return base.Channel.GHMCSearchBirthRecordAsync(UserID, Password, Service_Id, ServiceType, DateOfBirth, RegistrationNo, CircleNo, Gender, MotherName, FatherName);
        }
        
        public string GHMCSearchDeathRecord(string UserID, string Password, string Service_Id, string ServiceType, string DateOfDeath, string RegistrationNo, string CircleNo, string Gender, string DeceasedName, string FatherName) {
            return base.Channel.GHMCSearchDeathRecord(UserID, Password, Service_Id, ServiceType, DateOfDeath, RegistrationNo, CircleNo, Gender, DeceasedName, FatherName);
        }
        
        public System.Threading.Tasks.Task<string> GHMCSearchDeathRecordAsync(string UserID, string Password, string Service_Id, string ServiceType, string DateOfDeath, string RegistrationNo, string CircleNo, string Gender, string DeceasedName, string FatherName) {
            return base.Channel.GHMCSearchDeathRecordAsync(UserID, Password, Service_Id, ServiceType, DateOfDeath, RegistrationNo, CircleNo, Gender, DeceasedName, FatherName);
        }
        
        public string GetGHMCChilNameInclusionTransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AcknowledgementNo, 
                    string RegistrationNumber, 
                    string ActualchildName, 
                    string ChangedchildName, 
                    string FatherName, 
                    string MotherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string Circle, 
                    string WardNo, 
                    string Locality, 
                    string PlaceOfEvent, 
                    string AddressAtTimeOfBirth, 
                    string PermanentAddress, 
                    string Remarks, 
                    string InformantName, 
                    string InformantRelation, 
                    string RationCardNo, 
                    string AADHARNo, 
                    string InformantAddress, 
                    string InformantPinCode, 
                    string InformantPhoneNo, 
                    string Delivery_Type, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string PostalDistrict, 
                    string PostalMandalId, 
                    string PostalVillageId, 
                    string PostalPinCode, 
                    string PostalMobileNo, 
                    string PostalEmailId, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string NotaryAffidavit, 
                    string OriginalBirthCertificate, 
                    string ProofofResidence, 
                    string SchoolBonafidecertificate) {
            return base.Channel.GetGHMCChilNameInclusionTransactionNo(UserId, Password, LoginID, Service_Id, Service_Type, ApplicationNumber, AcknowledgementNo, RegistrationNumber, ActualchildName, ChangedchildName, FatherName, MotherName, Gender, DateOfBirth, Circle, WardNo, Locality, PlaceOfEvent, AddressAtTimeOfBirth, PermanentAddress, Remarks, InformantName, InformantRelation, RationCardNo, AADHARNo, InformantAddress, InformantPinCode, InformantPhoneNo, Delivery_Type, PostalDoorNo, PostalLocality, PostalDistrict, PostalMandalId, PostalVillageId, PostalPinCode, PostalMobileNo, PostalEmailId, NumberOfCopies, Purpose, Service_Charge, Postal_Charge, User_Charge, Total_Amount, NotaryAffidavit, OriginalBirthCertificate, ProofofResidence, SchoolBonafidecertificate);
        }
        
        public System.Threading.Tasks.Task<string> GetGHMCChilNameInclusionTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string ApplicationNumber, 
                    string AcknowledgementNo, 
                    string RegistrationNumber, 
                    string ActualchildName, 
                    string ChangedchildName, 
                    string FatherName, 
                    string MotherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string Circle, 
                    string WardNo, 
                    string Locality, 
                    string PlaceOfEvent, 
                    string AddressAtTimeOfBirth, 
                    string PermanentAddress, 
                    string Remarks, 
                    string InformantName, 
                    string InformantRelation, 
                    string RationCardNo, 
                    string AADHARNo, 
                    string InformantAddress, 
                    string InformantPinCode, 
                    string InformantPhoneNo, 
                    string Delivery_Type, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string PostalDistrict, 
                    string PostalMandalId, 
                    string PostalVillageId, 
                    string PostalPinCode, 
                    string PostalMobileNo, 
                    string PostalEmailId, 
                    string NumberOfCopies, 
                    string Purpose, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount, 
                    string NotaryAffidavit, 
                    string OriginalBirthCertificate, 
                    string ProofofResidence, 
                    string SchoolBonafidecertificate) {
            return base.Channel.GetGHMCChilNameInclusionTransactionNoAsync(UserId, Password, LoginID, Service_Id, Service_Type, ApplicationNumber, AcknowledgementNo, RegistrationNumber, ActualchildName, ChangedchildName, FatherName, MotherName, Gender, DateOfBirth, Circle, WardNo, Locality, PlaceOfEvent, AddressAtTimeOfBirth, PermanentAddress, Remarks, InformantName, InformantRelation, RationCardNo, AADHARNo, InformantAddress, InformantPinCode, InformantPhoneNo, Delivery_Type, PostalDoorNo, PostalLocality, PostalDistrict, PostalMandalId, PostalVillageId, PostalPinCode, PostalMobileNo, PostalEmailId, NumberOfCopies, Purpose, Service_Charge, Postal_Charge, User_Charge, Total_Amount, NotaryAffidavit, OriginalBirthCertificate, ProofofResidence, SchoolBonafidecertificate);
        }
        
        public string SearchRecordsinMultipleRUIDs(string Userid, string Password, string ServiceType) {
            return base.Channel.SearchRecordsinMultipleRUIDs(Userid, Password, ServiceType);
        }
        
        public System.Threading.Tasks.Task<string> SearchRecordsinMultipleRUIDsAsync(string Userid, string Password, string ServiceType) {
            return base.Channel.SearchRecordsinMultipleRUIDsAsync(Userid, Password, ServiceType);
        }
        
        public string PopulateCDMABirthDeathDetails(string ApplicationNo, string Userid, string Password, string SerTypeID, string RegUintID, string RegYear, string RegNo, string TestID) {
            return base.Channel.PopulateCDMABirthDeathDetails(ApplicationNo, Userid, Password, SerTypeID, RegUintID, RegYear, RegNo, TestID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCDMABirthDeathDetailsAsync(string ApplicationNo, string Userid, string Password, string SerTypeID, string RegUintID, string RegYear, string RegNo, string TestID) {
            return base.Channel.PopulateCDMABirthDeathDetailsAsync(ApplicationNo, Userid, Password, SerTypeID, RegUintID, RegYear, RegNo, TestID);
        }
        
        public string SearchCDMABirthDetails(string Userid, string Password, string ServiceType, string RUID, string RegYear, string RegNumber, string Gender) {
            return base.Channel.SearchCDMABirthDetails(Userid, Password, ServiceType, RUID, RegYear, RegNumber, Gender);
        }
        
        public System.Threading.Tasks.Task<string> SearchCDMABirthDetailsAsync(string Userid, string Password, string ServiceType, string RUID, string RegYear, string RegNumber, string Gender) {
            return base.Channel.SearchCDMABirthDetailsAsync(Userid, Password, ServiceType, RUID, RegYear, RegNumber, Gender);
        }
        
        public string SearchCDMADeathDetails(string Userid, string Password, string ServiceType, string RUID, string RegYear, string RegNumber, string Gender) {
            return base.Channel.SearchCDMADeathDetails(Userid, Password, ServiceType, RUID, RegYear, RegNumber, Gender);
        }
        
        public System.Threading.Tasks.Task<string> SearchCDMADeathDetailsAsync(string Userid, string Password, string ServiceType, string RUID, string RegYear, string RegNumber, string Gender) {
            return base.Channel.SearchCDMADeathDetailsAsync(Userid, Password, ServiceType, RUID, RegYear, RegNumber, Gender);
        }
        
        public string PopulateRUIDDetails(string userid, string password, string LocationType, string DistID) {
            return base.Channel.PopulateRUIDDetails(userid, password, LocationType, DistID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRUIDDetailsAsync(string userid, string password, string LocationType, string DistID) {
            return base.Channel.PopulateRUIDDetailsAsync(userid, password, LocationType, DistID);
        }
        
        public string PopulateCDMADeathDetails(string Userid, string Password, string SerTypeID, string RegUintID, string RegYear, string RegNo, string TestID) {
            return base.Channel.PopulateCDMADeathDetails(Userid, Password, SerTypeID, RegUintID, RegYear, RegNo, TestID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCDMADeathDetailsAsync(string Userid, string Password, string SerTypeID, string RegUintID, string RegYear, string RegNo, string TestID) {
            return base.Channel.PopulateCDMADeathDetailsAsync(Userid, Password, SerTypeID, RegUintID, RegYear, RegNo, TestID);
        }
        
        public string GetCDMABirthDeathCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetCDMABirthDeathCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetCDMABirthDeathCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetCDMABirthDeathCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetCDMABirthDeathPreviewCertificatePDF(string UserId, string Password, string ServiceType, string Appno, string RUID, string RegYear, string RegNo) {
            return base.Channel.GetCDMABirthDeathPreviewCertificatePDF(UserId, Password, ServiceType, Appno, RUID, RegYear, RegNo);
        }
        
        public System.Threading.Tasks.Task<string> GetCDMABirthDeathPreviewCertificatePDFAsync(string UserId, string Password, string ServiceType, string Appno, string RUID, string RegYear, string RegNo) {
            return base.Channel.GetCDMABirthDeathPreviewCertificatePDFAsync(UserId, Password, ServiceType, Appno, RUID, RegYear, RegNo);
        }
        
        public string GetServiceCharges_CDMA(string Userid, string Password, string ServiceId, string ServiceType, string deliveryType, string rlbType, string NoofCopies) {
            return base.Channel.GetServiceCharges_CDMA(Userid, Password, ServiceId, ServiceType, deliveryType, rlbType, NoofCopies);
        }
        
        public System.Threading.Tasks.Task<string> GetServiceCharges_CDMAAsync(string Userid, string Password, string ServiceId, string ServiceType, string deliveryType, string rlbType, string NoofCopies) {
            return base.Channel.GetServiceCharges_CDMAAsync(Userid, Password, ServiceId, ServiceType, deliveryType, rlbType, NoofCopies);
        }
        
        public string GetCDMATransactionNo(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string RUID, 
                    string RegNo, 
                    string RegYear, 
                    string ApplicationNumber, 
                    string RegDate, 
                    string EventName, 
                    string EventSurName, 
                    string DateofBirthorDeath, 
                    string Gender, 
                    string FatherorHusbandName, 
                    string FatherorHusbandSurName, 
                    string MotherName, 
                    string MotherSurName, 
                    string BirthorDeathPlace, 
                    string LocationName, 
                    string HospitalName, 
                    string MobileNo, 
                    string HospitalAddress1, 
                    string HospitalAddress2, 
                    string HospitalAddress3, 
                    string StateName, 
                    string DistrictName, 
                    string PinCode, 
                    string informantName, 
                    string informantRelation, 
                    string informantAddress1, 
                    string informantAddress2, 
                    string informantAddress3, 
                    string informantPhoneNo, 
                    string AadharCardNo, 
                    string RationCardNo, 
                    string informantEmailId, 
                    string informantRemarks, 
                    string informantPinCode, 
                    string Delivery_Type, 
                    string NoOfCopies, 
                    string Purpose, 
                    string postalDoorNo, 
                    string postalLocality, 
                    string postalState, 
                    string postalDistrict, 
                    string postalMandalId, 
                    string postalVillageId, 
                    string postalPinCode, 
                    string RLB_Type, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Stationary_Charges, 
                    string Total_Amount, 
                    string Doc_Applicationform) {
            return base.Channel.GetCDMATransactionNo(UserId, Password, LoginID, Service_Id, Service_Type, RUID, RegNo, RegYear, ApplicationNumber, RegDate, EventName, EventSurName, DateofBirthorDeath, Gender, FatherorHusbandName, FatherorHusbandSurName, MotherName, MotherSurName, BirthorDeathPlace, LocationName, HospitalName, MobileNo, HospitalAddress1, HospitalAddress2, HospitalAddress3, StateName, DistrictName, PinCode, informantName, informantRelation, informantAddress1, informantAddress2, informantAddress3, informantPhoneNo, AadharCardNo, RationCardNo, informantEmailId, informantRemarks, informantPinCode, Delivery_Type, NoOfCopies, Purpose, postalDoorNo, postalLocality, postalState, postalDistrict, postalMandalId, postalVillageId, postalPinCode, RLB_Type, Service_Charge, Postal_Charge, User_Charge, Stationary_Charges, Total_Amount, Doc_Applicationform);
        }
        
        public System.Threading.Tasks.Task<string> GetCDMATransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string Service_Id, 
                    string Service_Type, 
                    string RUID, 
                    string RegNo, 
                    string RegYear, 
                    string ApplicationNumber, 
                    string RegDate, 
                    string EventName, 
                    string EventSurName, 
                    string DateofBirthorDeath, 
                    string Gender, 
                    string FatherorHusbandName, 
                    string FatherorHusbandSurName, 
                    string MotherName, 
                    string MotherSurName, 
                    string BirthorDeathPlace, 
                    string LocationName, 
                    string HospitalName, 
                    string MobileNo, 
                    string HospitalAddress1, 
                    string HospitalAddress2, 
                    string HospitalAddress3, 
                    string StateName, 
                    string DistrictName, 
                    string PinCode, 
                    string informantName, 
                    string informantRelation, 
                    string informantAddress1, 
                    string informantAddress2, 
                    string informantAddress3, 
                    string informantPhoneNo, 
                    string AadharCardNo, 
                    string RationCardNo, 
                    string informantEmailId, 
                    string informantRemarks, 
                    string informantPinCode, 
                    string Delivery_Type, 
                    string NoOfCopies, 
                    string Purpose, 
                    string postalDoorNo, 
                    string postalLocality, 
                    string postalState, 
                    string postalDistrict, 
                    string postalMandalId, 
                    string postalVillageId, 
                    string postalPinCode, 
                    string RLB_Type, 
                    string Service_Charge, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Stationary_Charges, 
                    string Total_Amount, 
                    string Doc_Applicationform) {
            return base.Channel.GetCDMATransactionNoAsync(UserId, Password, LoginID, Service_Id, Service_Type, RUID, RegNo, RegYear, ApplicationNumber, RegDate, EventName, EventSurName, DateofBirthorDeath, Gender, FatherorHusbandName, FatherorHusbandSurName, MotherName, MotherSurName, BirthorDeathPlace, LocationName, HospitalName, MobileNo, HospitalAddress1, HospitalAddress2, HospitalAddress3, StateName, DistrictName, PinCode, informantName, informantRelation, informantAddress1, informantAddress2, informantAddress3, informantPhoneNo, AadharCardNo, RationCardNo, informantEmailId, informantRemarks, informantPinCode, Delivery_Type, NoOfCopies, Purpose, postalDoorNo, postalLocality, postalState, postalDistrict, postalMandalId, postalVillageId, postalPinCode, RLB_Type, Service_Charge, Postal_Charge, User_Charge, Stationary_Charges, Total_Amount, Doc_Applicationform);
        }
        
        public string PopulateCDMABDetails(string ApplicationNo, string SerTypeID, string RegUintID, string RegYear, string RegNo, string userid, string password, string TestID) {
            return base.Channel.PopulateCDMABDetails(ApplicationNo, SerTypeID, RegUintID, RegYear, RegNo, userid, password, TestID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCDMABDetailsAsync(string ApplicationNo, string SerTypeID, string RegUintID, string RegYear, string RegNo, string userid, string password, string TestID) {
            return base.Channel.PopulateCDMABDetailsAsync(ApplicationNo, SerTypeID, RegUintID, RegYear, RegNo, userid, password, TestID);
        }
        
        public string PopulateCDMADDetails(string SerTypeID, string RegUintID, string RegYear, string RegNo, string userid, string password, string TestID) {
            return base.Channel.PopulateCDMADDetails(SerTypeID, RegUintID, RegYear, RegNo, userid, password, TestID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCDMADDetailsAsync(string SerTypeID, string RegUintID, string RegYear, string RegNo, string userid, string password, string TestID) {
            return base.Channel.PopulateCDMADDetailsAsync(SerTypeID, RegUintID, RegYear, RegNo, userid, password, TestID);
        }
        
        public string SearchCDMABirthDetails_NEW(string ServiceType, string RUID, string RegYear, string RegNumber, string BirthYear, string Cname, string Fname, string Mname, string HosCode, string Gender, string userid, string password) {
            return base.Channel.SearchCDMABirthDetails_NEW(ServiceType, RUID, RegYear, RegNumber, BirthYear, Cname, Fname, Mname, HosCode, Gender, userid, password);
        }
        
        public System.Threading.Tasks.Task<string> SearchCDMABirthDetails_NEWAsync(string ServiceType, string RUID, string RegYear, string RegNumber, string BirthYear, string Cname, string Fname, string Mname, string HosCode, string Gender, string userid, string password) {
            return base.Channel.SearchCDMABirthDetails_NEWAsync(ServiceType, RUID, RegYear, RegNumber, BirthYear, Cname, Fname, Mname, HosCode, Gender, userid, password);
        }
        
        public string GetROR1BTransactionNo(
                    string userId, 
                    string password, 
                    string LoginID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string Doc_District_Id, 
                    string Doc_Mandal_Id, 
                    string Doc_Village_Id, 
                    string Doc_KhataNo, 
                    string Application_Number, 
                    string Applicant_Name, 
                    string Applicant_Father_Name, 
                    string Applicant_Door_No, 
                    string Gender, 
                    string Application_Street_name, 
                    string Applicant_State, 
                    string Applicant_District, 
                    string Applicant_Mandal, 
                    string Applicant_Village, 
                    string Pin_Code, 
                    string Mobile_Number, 
                    string Delivery_Type, 
                    string Service_charge, 
                    string Postal_Charges, 
                    string User_Charges, 
                    string Total_Amount, 
                    string Postal_State, 
                    string Postal_Distrct, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string Postal_Location, 
                    string Postal_DoorNo, 
                    string Ration_card_No, 
                    string Aadhar_No, 
                    string Email) {
            return base.Channel.GetROR1BTransactionNo(userId, password, LoginID, ServiceID, AddressFlag, Doc_District_Id, Doc_Mandal_Id, Doc_Village_Id, Doc_KhataNo, Application_Number, Applicant_Name, Applicant_Father_Name, Applicant_Door_No, Gender, Application_Street_name, Applicant_State, Applicant_District, Applicant_Mandal, Applicant_Village, Pin_Code, Mobile_Number, Delivery_Type, Service_charge, Postal_Charges, User_Charges, Total_Amount, Postal_State, Postal_Distrct, Postal_Mandal, Postal_Village, Postal_Pincode, Postal_Location, Postal_DoorNo, Ration_card_No, Aadhar_No, Email);
        }
        
        public System.Threading.Tasks.Task<string> GetROR1BTransactionNoAsync(
                    string userId, 
                    string password, 
                    string LoginID, 
                    string ServiceID, 
                    string AddressFlag, 
                    string Doc_District_Id, 
                    string Doc_Mandal_Id, 
                    string Doc_Village_Id, 
                    string Doc_KhataNo, 
                    string Application_Number, 
                    string Applicant_Name, 
                    string Applicant_Father_Name, 
                    string Applicant_Door_No, 
                    string Gender, 
                    string Application_Street_name, 
                    string Applicant_State, 
                    string Applicant_District, 
                    string Applicant_Mandal, 
                    string Applicant_Village, 
                    string Pin_Code, 
                    string Mobile_Number, 
                    string Delivery_Type, 
                    string Service_charge, 
                    string Postal_Charges, 
                    string User_Charges, 
                    string Total_Amount, 
                    string Postal_State, 
                    string Postal_Distrct, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string Postal_Location, 
                    string Postal_DoorNo, 
                    string Ration_card_No, 
                    string Aadhar_No, 
                    string Email) {
            return base.Channel.GetROR1BTransactionNoAsync(userId, password, LoginID, ServiceID, AddressFlag, Doc_District_Id, Doc_Mandal_Id, Doc_Village_Id, Doc_KhataNo, Application_Number, Applicant_Name, Applicant_Father_Name, Applicant_Door_No, Gender, Application_Street_name, Applicant_State, Applicant_District, Applicant_Mandal, Applicant_Village, Pin_Code, Mobile_Number, Delivery_Type, Service_charge, Postal_Charges, User_Charges, Total_Amount, Postal_State, Postal_Distrct, Postal_Mandal, Postal_Village, Postal_Pincode, Postal_Location, Postal_DoorNo, Ration_card_No, Aadhar_No, Email);
        }
        
        public string GetROR1BCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetROR1BCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetROR1BCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetROR1BCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string PopulateRORDetails(string Userid, string Password, string ApplicationNumber, string DistrictID, string MandalID, string VillageID, string kathano) {
            return base.Channel.PopulateRORDetails(Userid, Password, ApplicationNumber, DistrictID, MandalID, VillageID, kathano);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRORDetailsAsync(string Userid, string Password, string ApplicationNumber, string DistrictID, string MandalID, string VillageID, string kathano) {
            return base.Channel.PopulateRORDetailsAsync(Userid, Password, ApplicationNumber, DistrictID, MandalID, VillageID, kathano);
        }
        
        public string PopulateECDistrict(string UserID, string Password) {
            return base.Channel.PopulateECDistrict(UserID, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateECDistrictAsync(string UserID, string Password) {
            return base.Channel.PopulateECDistrictAsync(UserID, Password);
        }
        
        public string PopulateECVillage(string UserID, string Password, string districtid) {
            return base.Channel.PopulateECVillage(UserID, Password, districtid);
        }
        
        public System.Threading.Tasks.Task<string> PopulateECVillageAsync(string UserID, string Password, string districtid) {
            return base.Channel.PopulateECVillageAsync(UserID, Password, districtid);
        }
        
        public string PopulateSRO(string UserID, string Password, string DistrictId) {
            return base.Channel.PopulateSRO(UserID, Password, DistrictId);
        }
        
        public System.Threading.Tasks.Task<string> PopulateSROAsync(string UserID, string Password, string DistrictId) {
            return base.Channel.PopulateSROAsync(UserID, Password, DistrictId);
        }
        
        public string GetECDocuments(string UserID, string Password, string District, string SRO1, string RegYear, string DocNo) {
            return base.Channel.GetECDocuments(UserID, Password, District, SRO1, RegYear, DocNo);
        }
        
        public System.Threading.Tasks.Task<string> GetECDocumentsAsync(string UserID, string Password, string District, string SRO1, string RegYear, string DocNo) {
            return base.Channel.GetECDocumentsAsync(UserID, Password, District, SRO1, RegYear, DocNo);
        }
        
        public string GetECtransactionID(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string ServiceID, 
                    string ApplicationNo, 
                    string DocDistrict, 
                    string SROId, 
                    string DocNo, 
                    string DocYear, 
                    string FromDate, 
                    string ToDate, 
                    string BLDG_Flat_No, 
                    string BLDG_OldHouseNo, 
                    string BLDG_Aprtment, 
                    string BLDG_Ward, 
                    string BLDG_Block, 
                    string BLDG_Village_ID, 
                    string BLDG_Alias_Village, 
                    string AGRL_PlotNo, 
                    string AGRL_SurveyNo, 
                    string AGRL_Village_ID, 
                    string AGRL_Alias_Village, 
                    string BNDR_EAST, 
                    string BNDR_WEST, 
                    string BNDR_NORTH, 
                    string BNDR_SOUTH, 
                    string BNDR_Extent, 
                    string BNDR_BUILTUP, 
                    string EC_Slno, 
                    string SroJdn, 
                    string AadharNo, 
                    string ApplicantName, 
                    string OwnerName, 
                    string PerDoorNo, 
                    string PerDistrict, 
                    string PerMandal, 
                    string PerVillage, 
                    string PerPincode, 
                    string AddressFlag, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string Postal_State, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string MobileNo, 
                    string Email, 
                    string DeliveryType, 
                    string Chalan_Amount, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount) {
            return base.Channel.GetECtransactionID(UserId, Password, LoginID, ServiceID, ApplicationNo, DocDistrict, SROId, DocNo, DocYear, FromDate, ToDate, BLDG_Flat_No, BLDG_OldHouseNo, BLDG_Aprtment, BLDG_Ward, BLDG_Block, BLDG_Village_ID, BLDG_Alias_Village, AGRL_PlotNo, AGRL_SurveyNo, AGRL_Village_ID, AGRL_Alias_Village, BNDR_EAST, BNDR_WEST, BNDR_NORTH, BNDR_SOUTH, BNDR_Extent, BNDR_BUILTUP, EC_Slno, SroJdn, AadharNo, ApplicantName, OwnerName, PerDoorNo, PerDistrict, PerMandal, PerVillage, PerPincode, AddressFlag, Postal_Door_No, Postal_Locality, Postal_State, Postal_District, Postal_Mandal, Postal_Village, Postal_Pincode, MobileNo, Email, DeliveryType, Chalan_Amount, Postal_Charge, User_Charge, Total_Amount);
        }
        
        public System.Threading.Tasks.Task<string> GetECtransactionIDAsync(
                    string UserId, 
                    string Password, 
                    string LoginID, 
                    string ServiceID, 
                    string ApplicationNo, 
                    string DocDistrict, 
                    string SROId, 
                    string DocNo, 
                    string DocYear, 
                    string FromDate, 
                    string ToDate, 
                    string BLDG_Flat_No, 
                    string BLDG_OldHouseNo, 
                    string BLDG_Aprtment, 
                    string BLDG_Ward, 
                    string BLDG_Block, 
                    string BLDG_Village_ID, 
                    string BLDG_Alias_Village, 
                    string AGRL_PlotNo, 
                    string AGRL_SurveyNo, 
                    string AGRL_Village_ID, 
                    string AGRL_Alias_Village, 
                    string BNDR_EAST, 
                    string BNDR_WEST, 
                    string BNDR_NORTH, 
                    string BNDR_SOUTH, 
                    string BNDR_Extent, 
                    string BNDR_BUILTUP, 
                    string EC_Slno, 
                    string SroJdn, 
                    string AadharNo, 
                    string ApplicantName, 
                    string OwnerName, 
                    string PerDoorNo, 
                    string PerDistrict, 
                    string PerMandal, 
                    string PerVillage, 
                    string PerPincode, 
                    string AddressFlag, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string Postal_State, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Pincode, 
                    string MobileNo, 
                    string Email, 
                    string DeliveryType, 
                    string Chalan_Amount, 
                    string Postal_Charge, 
                    string User_Charge, 
                    string Total_Amount) {
            return base.Channel.GetECtransactionIDAsync(UserId, Password, LoginID, ServiceID, ApplicationNo, DocDistrict, SROId, DocNo, DocYear, FromDate, ToDate, BLDG_Flat_No, BLDG_OldHouseNo, BLDG_Aprtment, BLDG_Ward, BLDG_Block, BLDG_Village_ID, BLDG_Alias_Village, AGRL_PlotNo, AGRL_SurveyNo, AGRL_Village_ID, AGRL_Alias_Village, BNDR_EAST, BNDR_WEST, BNDR_NORTH, BNDR_SOUTH, BNDR_Extent, BNDR_BUILTUP, EC_Slno, SroJdn, AadharNo, ApplicantName, OwnerName, PerDoorNo, PerDistrict, PerMandal, PerVillage, PerPincode, AddressFlag, Postal_Door_No, Postal_Locality, Postal_State, Postal_District, Postal_Mandal, Postal_Village, Postal_Pincode, MobileNo, Email, DeliveryType, Chalan_Amount, Postal_Charge, User_Charge, Total_Amount);
        }
        
        public string GetECCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetECCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetECCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetECCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string PopulateDistrict_Postal(string StateID, string UserId, string Password) {
            return base.Channel.PopulateDistrict_Postal(StateID, UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateDistrict_PostalAsync(string StateID, string UserId, string Password) {
            return base.Channel.PopulateDistrict_PostalAsync(StateID, UserId, Password);
        }
        
        public string PopulateMandal_Postal(string StateID, string DistrictID, string UserId, string Password) {
            return base.Channel.PopulateMandal_Postal(StateID, DistrictID, UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateMandal_PostalAsync(string StateID, string DistrictID, string UserId, string Password) {
            return base.Channel.PopulateMandal_PostalAsync(StateID, DistrictID, UserId, Password);
        }
        
        public string PopulateVillage_Postal(string StateID, string DistrictID, string MandalID, string UserId, string Password) {
            return base.Channel.PopulateVillage_Postal(StateID, DistrictID, MandalID, UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateVillage_PostalAsync(string StateID, string DistrictID, string MandalID, string UserId, string Password) {
            return base.Channel.PopulateVillage_PostalAsync(StateID, DistrictID, MandalID, UserId, Password);
        }
        
        public string GetServiceWiseReconciliation(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            return base.Channel.GetServiceWiseReconciliation(ServiceID, FromDate, ToDate, userid, password);
        }
        
        public System.Threading.Tasks.Task<string> GetServiceWiseReconciliationAsync(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            return base.Channel.GetServiceWiseReconciliationAsync(ServiceID, FromDate, ToDate, userid, password);
        }
        
        public string MutationWebMethod() {
            return base.Channel.MutationWebMethod();
        }
        
        public System.Threading.Tasks.Task<string> MutationWebMethodAsync() {
            return base.Channel.MutationWebMethodAsync();
        }
        
        public string ValidateMobileUser(string UserId) {
            return base.Channel.ValidateMobileUser(UserId);
        }
        
        public System.Threading.Tasks.Task<string> ValidateMobileUserAsync(string UserId) {
            return base.Channel.ValidateMobileUserAsync(UserId);
        }
        
        public System.Data.DataSet TappTransactionCount(string FromDate, string ToDate) {
            return base.Channel.TappTransactionCount(FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TappTransactionCountAsync(string FromDate, string ToDate) {
            return base.Channel.TappTransactionCountAsync(FromDate, ToDate);
        }
        
        public System.Data.DataSet TappTransactionList(string FromDate, string ToDate) {
            return base.Channel.TappTransactionList(FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TappTransactionListAsync(string FromDate, string ToDate) {
            return base.Channel.TappTransactionListAsync(FromDate, ToDate);
        }
        
        public System.Data.DataSet TappApplicationStatusCheck(string applicationNo) {
            return base.Channel.TappApplicationStatusCheck(applicationNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TappApplicationStatusCheckAsync(string applicationNo) {
            return base.Channel.TappApplicationStatusCheckAsync(applicationNo);
        }
        
        public string PopulateReportingtime(string UserId, string Password, string TempleID, string RoomID) {
            return base.Channel.PopulateReportingtime(UserId, Password, TempleID, RoomID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateReportingtimeAsync(string UserId, string Password, string TempleID, string RoomID) {
            return base.Channel.PopulateReportingtimeAsync(UserId, Password, TempleID, RoomID);
        }
        
        public string GetIncomeTransactionNoUpload(string ApplicationNo, string Doc_Applicationform, string Doc_Aadhaar, string Doc_IDProof, string Doc_IncomeProof) {
            return base.Channel.GetIncomeTransactionNoUpload(ApplicationNo, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_IncomeProof);
        }
        
        public System.Threading.Tasks.Task<string> GetIncomeTransactionNoUploadAsync(string ApplicationNo, string Doc_Applicationform, string Doc_Aadhaar, string Doc_IDProof, string Doc_IncomeProof) {
            return base.Channel.GetIncomeTransactionNoUploadAsync(ApplicationNo, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_IncomeProof);
        }
        
        public string getuploaddocs(string applno) {
            return base.Channel.getuploaddocs(applno);
        }
        
        public System.Threading.Tasks.Task<string> getuploaddocsAsync(string applno) {
            return base.Channel.getuploaddocsAsync(applno);
        }
        
        public string GetCommunityDateofBirthTransactionUpload(string ApplicationNo, string Doc_Applicationform, string Doc_Aadhaar, string Doc_IDProof, string Doc_DOB_Study_Cert_and_SSC_Marks_Memo, string Doc_Community_Cert) {
            return base.Channel.GetCommunityDateofBirthTransactionUpload(ApplicationNo, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_DOB_Study_Cert_and_SSC_Marks_Memo, Doc_Community_Cert);
        }
        
        public System.Threading.Tasks.Task<string> GetCommunityDateofBirthTransactionUploadAsync(string ApplicationNo, string Doc_Applicationform, string Doc_Aadhaar, string Doc_IDProof, string Doc_DOB_Study_Cert_and_SSC_Marks_Memo, string Doc_Community_Cert) {
            return base.Channel.GetCommunityDateofBirthTransactionUploadAsync(ApplicationNo, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_DOB_Study_Cert_and_SSC_Marks_Memo, Doc_Community_Cert);
        }
        
        public string NewUserRegistration(
                    string userid, 
                    string password, 
                    string CustomerFirstname, 
                    string CustomerLatsname, 
                    string Gender, 
                    string DOB, 
                    int State, 
                    string City, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string Pincode, 
                    string Emailid, 
                    string LoginId, 
                    string Loginpassword, 
                    string SystemIP, 
                    string Adharno) {
            return base.Channel.NewUserRegistration(userid, password, CustomerFirstname, CustomerLatsname, Gender, DOB, State, City, AddressLine1, AddressLine2, Pincode, Emailid, LoginId, Loginpassword, SystemIP, Adharno);
        }
        
        public System.Threading.Tasks.Task<string> NewUserRegistrationAsync(
                    string userid, 
                    string password, 
                    string CustomerFirstname, 
                    string CustomerLatsname, 
                    string Gender, 
                    string DOB, 
                    int State, 
                    string City, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string Pincode, 
                    string Emailid, 
                    string LoginId, 
                    string Loginpassword, 
                    string SystemIP, 
                    string Adharno) {
            return base.Channel.NewUserRegistrationAsync(userid, password, CustomerFirstname, CustomerLatsname, Gender, DOB, State, City, AddressLine1, AddressLine2, Pincode, Emailid, LoginId, Loginpassword, SystemIP, Adharno);
        }
        
        public System.Data.DataSet GetUserProfile(string UserId, string Password, string LoginId) {
            return base.Channel.GetUserProfile(UserId, Password, LoginId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserProfileAsync(string UserId, string Password, string LoginId) {
            return base.Channel.GetUserProfileAsync(UserId, Password, LoginId);
        }
        
        public bool RESETMPIN(string UserId, string Password, string LoginId, string NewMpin) {
            return base.Channel.RESETMPIN(UserId, Password, LoginId, NewMpin);
        }
        
        public System.Threading.Tasks.Task<bool> RESETMPINAsync(string UserId, string Password, string LoginId, string NewMpin) {
            return base.Channel.RESETMPINAsync(UserId, Password, LoginId, NewMpin);
        }
        
        public System.Data.DataSet GetAadharDocumentRefDetails(string UserId, string Password, string LogindID, string ServiceID) {
            return base.Channel.GetAadharDocumentRefDetails(UserId, Password, LogindID, ServiceID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAadharDocumentRefDetailsAsync(string UserId, string Password, string LogindID, string ServiceID) {
            return base.Channel.GetAadharDocumentRefDetailsAsync(UserId, Password, LogindID, ServiceID);
        }
        
        public System.Data.DataSet GetDetailsByAadharNoDocumentpath(string UserId, string Password, string LogindID, string ServiceID, string AadhaarNo, string DocumentReferenceNo) {
            return base.Channel.GetDetailsByAadharNoDocumentpath(UserId, Password, LogindID, ServiceID, AadhaarNo, DocumentReferenceNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDetailsByAadharNoDocumentpathAsync(string UserId, string Password, string LogindID, string ServiceID, string AadhaarNo, string DocumentReferenceNo) {
            return base.Channel.GetDetailsByAadharNoDocumentpathAsync(UserId, Password, LogindID, ServiceID, AadhaarNo, DocumentReferenceNo);
        }
        
        public string GenerateApplicationNo(string UserId, string Password, string LogindID, string ServiceID) {
            return base.Channel.GenerateApplicationNo(UserId, Password, LogindID, ServiceID);
        }
        
        public System.Threading.Tasks.Task<string> GenerateApplicationNoAsync(string UserId, string Password, string LogindID, string ServiceID) {
            return base.Channel.GenerateApplicationNoAsync(UserId, Password, LogindID, ServiceID);
        }
        
        public System.Data.DataSet GetShowpaymentCharges(string UserId, string Password, string LogindID, string ServiceID, string ApplicationNo, string DeliveryType) {
            return base.Channel.GetShowpaymentCharges(UserId, Password, LogindID, ServiceID, ApplicationNo, DeliveryType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetShowpaymentChargesAsync(string UserId, string Password, string LogindID, string ServiceID, string ApplicationNo, string DeliveryType) {
            return base.Channel.GetShowpaymentChargesAsync(UserId, Password, LogindID, ServiceID, ApplicationNo, DeliveryType);
        }
        
        public string UpdateUserProfile(string UserId, string Password, string LoginId, string LoginPassword, string UpdatedPassword, string emailid, string mobileno, string address1, string address2, string city, string state, string RoleID) {
            return base.Channel.UpdateUserProfile(UserId, Password, LoginId, LoginPassword, UpdatedPassword, emailid, mobileno, address1, address2, city, state, RoleID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserProfileAsync(string UserId, string Password, string LoginId, string LoginPassword, string UpdatedPassword, string emailid, string mobileno, string address1, string address2, string city, string state, string RoleID) {
            return base.Channel.UpdateUserProfileAsync(UserId, Password, LoginId, LoginPassword, UpdatedPassword, emailid, mobileno, address1, address2, city, state, RoleID);
        }
        
        public string GetIntegratedTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string DeliveryType, 
                    string Relation, 
                    string RelationName, 
                    string Remarks, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string EducationCertificateContainsCaste, 
                    string PurposeofCasteCertificate, 
                    string Religion, 
                    string StateId, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount) {
            return base.Channel.GetIntegratedTransactionNo(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, DeliveryType, Relation, RelationName, Remarks, IssuedCasteCertificateInPast, CasteClaimed, CasteCategory, EducationCertificateContainsCaste, PurposeofCasteCertificate, Religion, StateId, Service_Charge, User_charges, Postal_Charge, Total_Amount);
        }
        
        public System.Threading.Tasks.Task<string> GetIntegratedTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string DeliveryType, 
                    string Relation, 
                    string RelationName, 
                    string Remarks, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string EducationCertificateContainsCaste, 
                    string PurposeofCasteCertificate, 
                    string Religion, 
                    string StateId, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount) {
            return base.Channel.GetIntegratedTransactionNoAsync(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, DeliveryType, Relation, RelationName, Remarks, IssuedCasteCertificateInPast, CasteClaimed, CasteCategory, EducationCertificateContainsCaste, PurposeofCasteCertificate, Religion, StateId, Service_Charge, User_charges, Postal_Charge, Total_Amount);
        }
        
        public System.Data.DataSet PopulateCasteCategory(string UserId, string Password, string ServiceID, string CasteClaimed) {
            return base.Channel.PopulateCasteCategory(UserId, Password, ServiceID, CasteClaimed);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PopulateCasteCategoryAsync(string UserId, string Password, string ServiceID, string CasteClaimed) {
            return base.Channel.PopulateCasteCategoryAsync(UserId, Password, ServiceID, CasteClaimed);
        }
        
        public string CCVerifySign(string docId, string year, string sroCode) {
            return base.Channel.CCVerifySign(docId, year, sroCode);
        }
        
        public System.Threading.Tasks.Task<string> CCVerifySignAsync(string docId, string year, string sroCode) {
            return base.Channel.CCVerifySignAsync(docId, year, sroCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TAppTransactionsList.meseva.CCGetDocFileResponse TAppTransactionsList.meseva.MeesevaMobileWebserviceSoap.CCGetDocFile(TAppTransactionsList.meseva.CCGetDocFileRequest request) {
            return base.Channel.CCGetDocFile(request);
        }
        
        public byte[] CCGetDocFile(string docId, string year, string sro) {
            TAppTransactionsList.meseva.CCGetDocFileRequest inValue = new TAppTransactionsList.meseva.CCGetDocFileRequest();
            inValue.docId = docId;
            inValue.year = year;
            inValue.sro = sro;
            TAppTransactionsList.meseva.CCGetDocFileResponse retVal = ((TAppTransactionsList.meseva.MeesevaMobileWebserviceSoap)(this)).CCGetDocFile(inValue);
            return retVal.CCGetDocFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TAppTransactionsList.meseva.CCGetDocFileResponse> TAppTransactionsList.meseva.MeesevaMobileWebserviceSoap.CCGetDocFileAsync(TAppTransactionsList.meseva.CCGetDocFileRequest request) {
            return base.Channel.CCGetDocFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<TAppTransactionsList.meseva.CCGetDocFileResponse> CCGetDocFileAsync(string docId, string year, string sro) {
            TAppTransactionsList.meseva.CCGetDocFileRequest inValue = new TAppTransactionsList.meseva.CCGetDocFileRequest();
            inValue.docId = docId;
            inValue.year = year;
            inValue.sro = sro;
            return ((TAppTransactionsList.meseva.MeesevaMobileWebserviceSoap)(this)).CCGetDocFileAsync(inValue);
        }
        
        public string GetUserLoginResponse(string UserId, string Password, string LoginId, string LoginPassword, string RoleID) {
            return base.Channel.GetUserLoginResponse(UserId, Password, LoginId, LoginPassword, RoleID);
        }
        
        public System.Threading.Tasks.Task<string> GetUserLoginResponseAsync(string UserId, string Password, string LoginId, string LoginPassword, string RoleID) {
            return base.Channel.GetUserLoginResponseAsync(UserId, Password, LoginId, LoginPassword, RoleID);
        }
        
        public string GetAdangalTransactionNo_old(TAppTransactionsList.meseva.AdangalTrans obj, string userId, string password, string LogindID, string ApplicationNo) {
            return base.Channel.GetAdangalTransactionNo_old(obj, userId, password, LogindID, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<string> GetAdangalTransactionNo_oldAsync(TAppTransactionsList.meseva.AdangalTrans obj, string userId, string password, string LogindID, string ApplicationNo) {
            return base.Channel.GetAdangalTransactionNo_oldAsync(obj, userId, password, LogindID, ApplicationNo);
        }
        
        public string GetAdangalTransactionNo_TEST(string userId, string password, string LogindID, string ApplicationNo) {
            return base.Channel.GetAdangalTransactionNo_TEST(userId, password, LogindID, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<string> GetAdangalTransactionNo_TESTAsync(string userId, string password, string LogindID, string ApplicationNo) {
            return base.Channel.GetAdangalTransactionNo_TESTAsync(userId, password, LogindID, ApplicationNo);
        }
        
        public bool AadharUpdationforApplicationNo(string appno, string aadharNo, string userid, string password) {
            return base.Channel.AadharUpdationforApplicationNo(appno, aadharNo, userid, password);
        }
        
        public System.Threading.Tasks.Task<bool> AadharUpdationforApplicationNoAsync(string appno, string aadharNo, string userid, string password) {
            return base.Channel.AadharUpdationforApplicationNoAsync(appno, aadharNo, userid, password);
        }
        
        public System.Data.DataTable GetApplicationDetails(string applicationNo, string userid, string password) {
            return base.Channel.GetApplicationDetails(applicationNo, userid, password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetApplicationDetailsAsync(string applicationNo, string userid, string password) {
            return base.Channel.GetApplicationDetailsAsync(applicationNo, userid, password);
        }
        
        public string PopulateDistrict(string UserId, string Password) {
            return base.Channel.PopulateDistrict(UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateDistrictAsync(string UserId, string Password) {
            return base.Channel.PopulateDistrictAsync(UserId, Password);
        }
        
        public string PopulateMandal(string DistrictID, string UserId, string Password) {
            return base.Channel.PopulateMandal(DistrictID, UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateMandalAsync(string DistrictID, string UserId, string Password) {
            return base.Channel.PopulateMandalAsync(DistrictID, UserId, Password);
        }
        
        public string PopulateVillage(string DistrictID, string MandalID, string UserId, string Password) {
            return base.Channel.PopulateVillage(DistrictID, MandalID, UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateVillageAsync(string DistrictID, string MandalID, string UserId, string Password) {
            return base.Channel.PopulateVillageAsync(DistrictID, MandalID, UserId, Password);
        }
        
        public string GetServiceCharges(string UserId, string Password, string ServiceId, string DeliveryType) {
            return base.Channel.GetServiceCharges(UserId, Password, ServiceId, DeliveryType);
        }
        
        public System.Threading.Tasks.Task<string> GetServiceChargesAsync(string UserId, string Password, string ServiceId, string DeliveryType) {
            return base.Channel.GetServiceChargesAsync(UserId, Password, ServiceId, DeliveryType);
        }
        
        public string GetAppStatus(string AppNo, string UserId, string Password) {
            return base.Channel.GetAppStatus(AppNo, UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> GetAppStatusAsync(string AppNo, string UserId, string Password) {
            return base.Channel.GetAppStatusAsync(AppNo, UserId, Password);
        }
        
        public string GetServiceWiseApplicationStatus(string UserId, string Password, string FromDate, string ToDate, string ServiceID) {
            return base.Channel.GetServiceWiseApplicationStatus(UserId, Password, FromDate, ToDate, ServiceID);
        }
        
        public System.Threading.Tasks.Task<string> GetServiceWiseApplicationStatusAsync(string UserId, string Password, string FromDate, string ToDate, string ServiceID) {
            return base.Channel.GetServiceWiseApplicationStatusAsync(UserId, Password, FromDate, ToDate, ServiceID);
        }
        
        public string GetReceiptBasedOnTransNo(string UserId, string Password, string ServiceId, string TransactionNo) {
            return base.Channel.GetReceiptBasedOnTransNo(UserId, Password, ServiceId, TransactionNo);
        }
        
        public System.Threading.Tasks.Task<string> GetReceiptBasedOnTransNoAsync(string UserId, string Password, string ServiceId, string TransactionNo) {
            return base.Channel.GetReceiptBasedOnTransNoAsync(UserId, Password, ServiceId, TransactionNo);
        }
        
        public string GetPrintCertificateStatusDetails(string UserId, string Password, string FromDate, string ToDate) {
            return base.Channel.GetPrintCertificateStatusDetails(UserId, Password, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<string> GetPrintCertificateStatusDetailsAsync(string UserId, string Password, string FromDate, string ToDate) {
            return base.Channel.GetPrintCertificateStatusDetailsAsync(UserId, Password, FromDate, ToDate);
        }
        
        public string PopulateCaste(string UserId, string Password, string ServiceID) {
            return base.Channel.PopulateCaste(UserId, Password, ServiceID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCasteAsync(string UserId, string Password, string ServiceID) {
            return base.Channel.PopulateCasteAsync(UserId, Password, ServiceID);
        }
        
        public string PopulateReligion(string UserId, string Password) {
            return base.Channel.PopulateReligion(UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateReligionAsync(string UserId, string Password) {
            return base.Channel.PopulateReligionAsync(UserId, Password);
        }
        
        public string PopulateRelation(string UserId, string Password) {
            return base.Channel.PopulateRelation(UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRelationAsync(string UserId, string Password) {
            return base.Channel.PopulateRelationAsync(UserId, Password);
        }
        
        public string PopulateRelationShip(string UserId, string Password) {
            return base.Channel.PopulateRelationShip(UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRelationShipAsync(string UserId, string Password) {
            return base.Channel.PopulateRelationShipAsync(UserId, Password);
        }
        
        public string PopulateMemberOccupation(string UserId, string Password) {
            return base.Channel.PopulateMemberOccupation(UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateMemberOccupationAsync(string UserId, string Password) {
            return base.Channel.PopulateMemberOccupationAsync(UserId, Password);
        }
        
        public string GetAadhaarNoDocumentRefNo(string ServiceID, string LogindID, string DocumentRefNumbers, string Application_Number) {
            return base.Channel.GetAadhaarNoDocumentRefNo(ServiceID, LogindID, DocumentRefNumbers, Application_Number);
        }
        
        public System.Threading.Tasks.Task<string> GetAadhaarNoDocumentRefNoAsync(string ServiceID, string LogindID, string DocumentRefNumbers, string Application_Number) {
            return base.Channel.GetAadhaarNoDocumentRefNoAsync(ServiceID, LogindID, DocumentRefNumbers, Application_Number);
        }
        
        public string GetIncomeTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantName, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string LandIncome, 
                    string BusinessIncome, 
                    string BuildingIncome, 
                    string LabourIncome, 
                    string EmpSal, 
                    string OtherIncome, 
                    string TotalIncome, 
                    string Purpose, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_IncomeProof) {
            return base.Channel.GetIncomeTransactionNo(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, ApplicantName, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, AadhaarNo, DeliveryType, LandIncome, BusinessIncome, BuildingIncome, LabourIncome, EmpSal, OtherIncome, TotalIncome, Purpose, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_IncomeProof);
        }
        
        public System.Threading.Tasks.Task<string> GetIncomeTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantName, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string LandIncome, 
                    string BusinessIncome, 
                    string BuildingIncome, 
                    string LabourIncome, 
                    string EmpSal, 
                    string OtherIncome, 
                    string TotalIncome, 
                    string Purpose, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_IncomeProof) {
            return base.Channel.GetIncomeTransactionNoAsync(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, ApplicantName, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, AadhaarNo, DeliveryType, LandIncome, BusinessIncome, BuildingIncome, LabourIncome, EmpSal, OtherIncome, TotalIncome, Purpose, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_IncomeProof);
        }
        
        public string GetIncomeCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetIncomeCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetIncomeCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetIncomeCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetResidanceTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string ResidingSinceinYears, 
                    string Purpose, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_HouseProof, 
                    string Doc_Photo) {
            return base.Channel.GetResidanceTransactionNo(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, AadhaarNo, ApplicantName, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, DeliveryType, ResidingSinceinYears, Purpose, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_HouseProof, Doc_Photo);
        }
        
        public System.Threading.Tasks.Task<string> GetResidanceTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string ResidingSinceinYears, 
                    string Purpose, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_HouseProof, 
                    string Doc_Photo) {
            return base.Channel.GetResidanceTransactionNoAsync(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, AadhaarNo, ApplicantName, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, DeliveryType, ResidingSinceinYears, Purpose, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_HouseProof, Doc_Photo);
        }
        
        public string GetResidenceCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetResidenceCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetResidenceCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetResidenceCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetEBCTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string Religion, 
                    string PurposeofCasteCertificate, 
                    string FamilyIncome, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_Aadhaar) {
            return base.Channel.GetEBCTransactionNo(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, AadhaarNo, ApplicantName, Relation, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, DeliveryType, IssuedCasteCertificateInPast, CasteClaimed, CasteCategory, Religion, PurposeofCasteCertificate, FamilyIncome, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_IDProof, Doc_Aadhaar);
        }
        
        public System.Threading.Tasks.Task<string> GetEBCTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string Religion, 
                    string PurposeofCasteCertificate, 
                    string FamilyIncome, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_Aadhaar) {
            return base.Channel.GetEBCTransactionNoAsync(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, AadhaarNo, ApplicantName, Relation, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, DeliveryType, IssuedCasteCertificateInPast, CasteClaimed, CasteCategory, Religion, PurposeofCasteCertificate, FamilyIncome, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_IDProof, Doc_Aadhaar);
        }
        
        public string GetEBCCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetEBCCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetEBCCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetEBCCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetOBCTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string EducationCertificateContainsCaste, 
                    string PurposeofCasteCertificate, 
                    string Religion, 
                    string FamilyIncome, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_Property, 
                    string Doc_ITReturns) {
            return base.Channel.GetOBCTransactionNo(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, AadhaarNo, ApplicantName, Relation, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, DeliveryType, IssuedCasteCertificateInPast, CasteClaimed, CasteCategory, EducationCertificateContainsCaste, PurposeofCasteCertificate, Religion, FamilyIncome, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_Property, Doc_ITReturns);
        }
        
        public System.Threading.Tasks.Task<string> GetOBCTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string IssuedCasteCertificateInPast, 
                    string CasteClaimed, 
                    string CasteCategory, 
                    string EducationCertificateContainsCaste, 
                    string PurposeofCasteCertificate, 
                    string Religion, 
                    string FamilyIncome, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_Property, 
                    string Doc_ITReturns) {
            return base.Channel.GetOBCTransactionNoAsync(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, AadhaarNo, ApplicantName, Relation, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, DeliveryType, IssuedCasteCertificateInPast, CasteClaimed, CasteCategory, EducationCertificateContainsCaste, PurposeofCasteCertificate, Religion, FamilyIncome, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_Property, Doc_ITReturns);
        }
        
        public string GetOBCCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetOBCCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetOBCCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetOBCCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetAgricultureIncomeTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string Purpose, 
                    string GridDetailsLand, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof) {
            return base.Channel.GetAgricultureIncomeTransactionNo(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, AadhaarNo, ApplicantName, Relation, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, DeliveryType, Purpose, GridDetailsLand, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_IDProof);
        }
        
        public System.Threading.Tasks.Task<string> GetAgricultureIncomeTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string AadhaarNo, 
                    string ApplicantName, 
                    string Relation, 
                    string FatherName, 
                    string Gender, 
                    string DateOfBirth, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string DeliveryType, 
                    string Purpose, 
                    string GridDetailsLand, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof) {
            return base.Channel.GetAgricultureIncomeTransactionNoAsync(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, AadhaarNo, ApplicantName, Relation, FatherName, Gender, DateOfBirth, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, DeliveryType, Purpose, GridDetailsLand, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_IDProof);
        }
        
        public string GetAgricultureCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetAgricultureCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetAgricultureCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetAgricultureCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string PopulateTemples(string UserID, string Password, string ServiceID) {
            return base.Channel.PopulateTemples(UserID, Password, ServiceID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateTemplesAsync(string UserID, string Password, string ServiceID) {
            return base.Channel.PopulateTemplesAsync(UserID, Password, ServiceID);
        }
        
        public string GetSevaMaxTicketCount(string UserID, string Password, string ServiceID, string TempleID, string Sevaid, string SevabookingDate, string BatchID) {
            return base.Channel.GetSevaMaxTicketCount(UserID, Password, ServiceID, TempleID, Sevaid, SevabookingDate, BatchID);
        }
        
        public System.Threading.Tasks.Task<string> GetSevaMaxTicketCountAsync(string UserID, string Password, string ServiceID, string TempleID, string Sevaid, string SevabookingDate, string BatchID) {
            return base.Channel.GetSevaMaxTicketCountAsync(UserID, Password, ServiceID, TempleID, Sevaid, SevabookingDate, BatchID);
        }
        
        public string PopulateSevas(string UserID, string Password, string ServiceID, string TempleID) {
            return base.Channel.PopulateSevas(UserID, Password, ServiceID, TempleID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateSevasAsync(string UserID, string Password, string ServiceID, string TempleID) {
            return base.Channel.PopulateSevasAsync(UserID, Password, ServiceID, TempleID);
        }
        
        public string PopulateProofDocuments(string UserID, string Password) {
            return base.Channel.PopulateProofDocuments(UserID, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateProofDocumentsAsync(string UserID, string Password) {
            return base.Channel.PopulateProofDocumentsAsync(UserID, Password);
        }
        
        public string PopulateBatches(string UserID, string Password, string ServiceID, string TempleID, string SevaID) {
            return base.Channel.PopulateBatches(UserID, Password, ServiceID, TempleID, SevaID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateBatchesAsync(string UserID, string Password, string ServiceID, string TempleID, string SevaID) {
            return base.Channel.PopulateBatchesAsync(UserID, Password, ServiceID, TempleID, SevaID);
        }
        
        public string GetSevaDetails(string UserID, string Password, string ServiceID, string TempleID, string SevaID, string BatchID) {
            return base.Channel.GetSevaDetails(UserID, Password, ServiceID, TempleID, SevaID, BatchID);
        }
        
        public System.Threading.Tasks.Task<string> GetSevaDetailsAsync(string UserID, string Password, string ServiceID, string TempleID, string SevaID, string BatchID) {
            return base.Channel.GetSevaDetailsAsync(UserID, Password, ServiceID, TempleID, SevaID, BatchID);
        }
        
        public System.DateTime[] GetBlockedDates(string UserID, string Password, string ServiceID, string TempleID, string SevaID) {
            return base.Channel.GetBlockedDates(UserID, Password, ServiceID, TempleID, SevaID);
        }
        
        public System.Threading.Tasks.Task<System.DateTime[]> GetBlockedDatesAsync(string UserID, string Password, string ServiceID, string TempleID, string SevaID) {
            return base.Channel.GetBlockedDatesAsync(UserID, Password, ServiceID, TempleID, SevaID);
        }
        
        public string BatchAvailableDays(string UserID, string Password, string TempleID, string SevaID, string BatchID) {
            return base.Channel.BatchAvailableDays(UserID, Password, TempleID, SevaID, BatchID);
        }
        
        public System.Threading.Tasks.Task<string> BatchAvailableDaysAsync(string UserID, string Password, string TempleID, string SevaID, string BatchID) {
            return base.Channel.BatchAvailableDaysAsync(UserID, Password, TempleID, SevaID, BatchID);
        }
        
        public string GetSevaBookingTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string Sevaid, 
                    string BatchID, 
                    string SevabookingDate, 
                    string ApplicationNo, 
                    string AadharCardNo, 
                    string DevoteeName, 
                    string Nakshatram, 
                    string Gothram, 
                    string Gender, 
                    string Age, 
                    string HouseNo, 
                    string Location, 
                    string MobileNumber, 
                    string EmailId, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string DeliveryType, 
                    string SevaAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string ApplicantName, 
                    string RelationId, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_Photo, 
                    string TotalLadduQuantity, 
                    string TotalLadduAmount, 
                    string TotalPulihoraQuantity, 
                    string TotalPulihoraAmount, 
                    string TotalBellamLadduQuantity, 
                    string TotalBellamLadduAmount) {
            return base.Channel.GetSevaBookingTransactionNo(UserId, Password, LogindID, ServiceID, TempleID, Sevaid, BatchID, SevabookingDate, ApplicationNo, AadharCardNo, DevoteeName, Nakshatram, Gothram, Gender, Age, HouseNo, Location, MobileNumber, EmailId, CountryId, StateId, District, Mandal, Village, Pincode, StateName, DistrictName, MandalName, VillageName, ProofDocumentID, ProofDocumentNumber, ProofDocumentName, DeliveryType, SevaAmount, Usercharges, TotalAmount, ApplicantName, RelationId, Doc_Applicationform, Doc_IDProof, Doc_Photo, TotalLadduQuantity, TotalLadduAmount, TotalPulihoraQuantity, TotalPulihoraAmount, TotalBellamLadduQuantity, TotalBellamLadduAmount);
        }
        
        public System.Threading.Tasks.Task<string> GetSevaBookingTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string Sevaid, 
                    string BatchID, 
                    string SevabookingDate, 
                    string ApplicationNo, 
                    string AadharCardNo, 
                    string DevoteeName, 
                    string Nakshatram, 
                    string Gothram, 
                    string Gender, 
                    string Age, 
                    string HouseNo, 
                    string Location, 
                    string MobileNumber, 
                    string EmailId, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string DeliveryType, 
                    string SevaAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string ApplicantName, 
                    string RelationId, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_Photo, 
                    string TotalLadduQuantity, 
                    string TotalLadduAmount, 
                    string TotalPulihoraQuantity, 
                    string TotalPulihoraAmount, 
                    string TotalBellamLadduQuantity, 
                    string TotalBellamLadduAmount) {
            return base.Channel.GetSevaBookingTransactionNoAsync(UserId, Password, LogindID, ServiceID, TempleID, Sevaid, BatchID, SevabookingDate, ApplicationNo, AadharCardNo, DevoteeName, Nakshatram, Gothram, Gender, Age, HouseNo, Location, MobileNumber, EmailId, CountryId, StateId, District, Mandal, Village, Pincode, StateName, DistrictName, MandalName, VillageName, ProofDocumentID, ProofDocumentNumber, ProofDocumentName, DeliveryType, SevaAmount, Usercharges, TotalAmount, ApplicantName, RelationId, Doc_Applicationform, Doc_IDProof, Doc_Photo, TotalLadduQuantity, TotalLadduAmount, TotalPulihoraQuantity, TotalPulihoraAmount, TotalBellamLadduQuantity, TotalBellamLadduAmount);
        }
        
        public string GetSriLaxmiNarasimhaSwamiwariDevastanamSevaBookingTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string Sevaid, 
                    string BatchID, 
                    string SevabookingDate, 
                    string ApplicationNo, 
                    string AadharCardNo, 
                    string DevoteeName, 
                    string Nakshatram, 
                    string Gothram, 
                    string Gender, 
                    string Age, 
                    string HouseNo, 
                    string Location, 
                    string MobileNumber, 
                    string EmailId, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string DeliveryType, 
                    string SevaAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string ApplicantName, 
                    string RelationId, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string TotalLadduQuantity, 
                    string TotalLadduAmount) {
            return base.Channel.GetSriLaxmiNarasimhaSwamiwariDevastanamSevaBookingTransactionNo(UserId, Password, LogindID, ServiceID, TempleID, Sevaid, BatchID, SevabookingDate, ApplicationNo, AadharCardNo, DevoteeName, Nakshatram, Gothram, Gender, Age, HouseNo, Location, MobileNumber, EmailId, CountryId, StateId, District, Mandal, Village, Pincode, StateName, DistrictName, MandalName, VillageName, ProofDocumentID, ProofDocumentNumber, ProofDocumentName, DeliveryType, SevaAmount, Usercharges, TotalAmount, ApplicantName, RelationId, Doc_Applicationform, Doc_IDProof, TotalLadduQuantity, TotalLadduAmount);
        }
        
        public System.Threading.Tasks.Task<string> GetSriLaxmiNarasimhaSwamiwariDevastanamSevaBookingTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string Sevaid, 
                    string BatchID, 
                    string SevabookingDate, 
                    string ApplicationNo, 
                    string AadharCardNo, 
                    string DevoteeName, 
                    string Nakshatram, 
                    string Gothram, 
                    string Gender, 
                    string Age, 
                    string HouseNo, 
                    string Location, 
                    string MobileNumber, 
                    string EmailId, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string DeliveryType, 
                    string SevaAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string ApplicantName, 
                    string RelationId, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string TotalLadduQuantity, 
                    string TotalLadduAmount) {
            return base.Channel.GetSriLaxmiNarasimhaSwamiwariDevastanamSevaBookingTransactionNoAsync(UserId, Password, LogindID, ServiceID, TempleID, Sevaid, BatchID, SevabookingDate, ApplicationNo, AadharCardNo, DevoteeName, Nakshatram, Gothram, Gender, Age, HouseNo, Location, MobileNumber, EmailId, CountryId, StateId, District, Mandal, Village, Pincode, StateName, DistrictName, MandalName, VillageName, ProofDocumentID, ProofDocumentNumber, ProofDocumentName, DeliveryType, SevaAmount, Usercharges, TotalAmount, ApplicantName, RelationId, Doc_Applicationform, Doc_IDProof, TotalLadduQuantity, TotalLadduAmount);
        }
        
        public string GetNoEarningMemberTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantStatus, 
                    string ApplicantName, 
                    string RelationId, 
                    string RelationStatus, 
                    string RelationName, 
                    string Gender, 
                    string DateOfBirth, 
                    string RelationshipWithDeceased, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string DeceasedStatus, 
                    string DeceasedName, 
                    string DeceasedFatherName, 
                    string DeceasedDoorNo, 
                    string DateOfDeath, 
                    string Occupation, 
                    string ReasonForCertificate, 
                    string DeathHappenedDistrict, 
                    string DeathHappenedMandal, 
                    string DeathHappenedVillage, 
                    string NativeVillage, 
                    string ReasonForDeath, 
                    string DeathHappenedPlace, 
                    string GridNoEarningMemberDetails, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_DeathCert, 
                    string Doc_CopyofFMC) {
            return base.Channel.GetNoEarningMemberTransactionNo(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, ApplicantStatus, ApplicantName, RelationId, RelationStatus, RelationName, Gender, DateOfBirth, RelationshipWithDeceased, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, AadhaarNo, DeliveryType, DeceasedStatus, DeceasedName, DeceasedFatherName, DeceasedDoorNo, DateOfDeath, Occupation, ReasonForCertificate, DeathHappenedDistrict, DeathHappenedMandal, DeathHappenedVillage, NativeVillage, ReasonForDeath, DeathHappenedPlace, GridNoEarningMemberDetails, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_IDProof, Doc_DeathCert, Doc_CopyofFMC);
        }
        
        public System.Threading.Tasks.Task<string> GetNoEarningMemberTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantStatus, 
                    string ApplicantName, 
                    string RelationId, 
                    string RelationStatus, 
                    string RelationName, 
                    string Gender, 
                    string DateOfBirth, 
                    string RelationshipWithDeceased, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string PostalDoorNo, 
                    string PostalLocality, 
                    string StateId, 
                    string PostalDistrict, 
                    string PostalMandal, 
                    string PostalVillage, 
                    string PostalPincode, 
                    string MobileNo, 
                    string PhoneNo, 
                    string EmailID, 
                    string Remarks, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string DeceasedStatus, 
                    string DeceasedName, 
                    string DeceasedFatherName, 
                    string DeceasedDoorNo, 
                    string DateOfDeath, 
                    string Occupation, 
                    string ReasonForCertificate, 
                    string DeathHappenedDistrict, 
                    string DeathHappenedMandal, 
                    string DeathHappenedVillage, 
                    string NativeVillage, 
                    string ReasonForDeath, 
                    string DeathHappenedPlace, 
                    string GridNoEarningMemberDetails, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_DeathCert, 
                    string Doc_CopyofFMC) {
            return base.Channel.GetNoEarningMemberTransactionNoAsync(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, ApplicantStatus, ApplicantName, RelationId, RelationStatus, RelationName, Gender, DateOfBirth, RelationshipWithDeceased, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, PostalDoorNo, PostalLocality, StateId, PostalDistrict, PostalMandal, PostalVillage, PostalPincode, MobileNo, PhoneNo, EmailID, Remarks, RationCardNo, AadhaarNo, DeliveryType, DeceasedStatus, DeceasedName, DeceasedFatherName, DeceasedDoorNo, DateOfDeath, Occupation, ReasonForCertificate, DeathHappenedDistrict, DeathHappenedMandal, DeathHappenedVillage, NativeVillage, ReasonForDeath, DeathHappenedPlace, GridNoEarningMemberDetails, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_IDProof, Doc_DeathCert, Doc_CopyofFMC);
        }
        
        public string GetNoEarningMemberCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetNoEarningMemberCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetNoEarningMemberCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetNoEarningMemberCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetNoPropertyTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantName, 
                    string RelationName, 
                    string RelationshipWithDeathPerson, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string MobileNo, 
                    string EmailID, 
                    string DeathPersonName, 
                    string DeceasedFatherName, 
                    string DeceasedDoorNo, 
                    string DeceasedLocation, 
                    string DeceasedDistrict, 
                    string DeceasedMandal, 
                    string DeceasedVillage, 
                    string DeceasedPinCode, 
                    string DateOfDeath, 
                    string PlaceOfDeath, 
                    string Occupation, 
                    string OtherOccupation, 
                    string CauseOfDeath, 
                    string Purpose, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string StateId, 
                    string DeathHappenedDistrict, 
                    string DeathHappenedMandal, 
                    string DeathHappenedVillage, 
                    string GridNoEarningMemberDetails, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_DeathCert, 
                    string Doc_CopyofFMC) {
            return base.Channel.GetNoPropertyTransactionNo(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, ApplicantName, RelationName, RelationshipWithDeathPerson, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, MobileNo, EmailID, DeathPersonName, DeceasedFatherName, DeceasedDoorNo, DeceasedLocation, DeceasedDistrict, DeceasedMandal, DeceasedVillage, DeceasedPinCode, DateOfDeath, PlaceOfDeath, Occupation, OtherOccupation, CauseOfDeath, Purpose, RationCardNo, AadhaarNo, DeliveryType, StateId, DeathHappenedDistrict, DeathHappenedMandal, DeathHappenedVillage, GridNoEarningMemberDetails, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_IDProof, Doc_DeathCert, Doc_CopyofFMC);
        }
        
        public System.Threading.Tasks.Task<string> GetNoPropertyTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string DocumentRefNumbers, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string ApplicantName, 
                    string RelationName, 
                    string RelationshipWithDeathPerson, 
                    string PermanentDoorNo, 
                    string PermanentLocality, 
                    string PermanentDistrict, 
                    string PermanentMandal, 
                    string PermanentVillage, 
                    string PermanentPincode, 
                    string MobileNo, 
                    string EmailID, 
                    string DeathPersonName, 
                    string DeceasedFatherName, 
                    string DeceasedDoorNo, 
                    string DeceasedLocation, 
                    string DeceasedDistrict, 
                    string DeceasedMandal, 
                    string DeceasedVillage, 
                    string DeceasedPinCode, 
                    string DateOfDeath, 
                    string PlaceOfDeath, 
                    string Occupation, 
                    string OtherOccupation, 
                    string CauseOfDeath, 
                    string Purpose, 
                    string RationCardNo, 
                    string AadhaarNo, 
                    string DeliveryType, 
                    string StateId, 
                    string DeathHappenedDistrict, 
                    string DeathHappenedMandal, 
                    string DeathHappenedVillage, 
                    string GridNoEarningMemberDetails, 
                    string ServiceCharge, 
                    string UserCharge, 
                    string PostalCharge, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof, 
                    string Doc_DeathCert, 
                    string Doc_CopyofFMC) {
            return base.Channel.GetNoPropertyTransactionNoAsync(UserId, Password, LogindID, ServiceID, DocumentRefNumbers, AddressFlag, ApplicationNo, ApplicantName, RelationName, RelationshipWithDeathPerson, PermanentDoorNo, PermanentLocality, PermanentDistrict, PermanentMandal, PermanentVillage, PermanentPincode, MobileNo, EmailID, DeathPersonName, DeceasedFatherName, DeceasedDoorNo, DeceasedLocation, DeceasedDistrict, DeceasedMandal, DeceasedVillage, DeceasedPinCode, DateOfDeath, PlaceOfDeath, Occupation, OtherOccupation, CauseOfDeath, Purpose, RationCardNo, AadhaarNo, DeliveryType, StateId, DeathHappenedDistrict, DeathHappenedMandal, DeathHappenedVillage, GridNoEarningMemberDetails, ServiceCharge, UserCharge, PostalCharge, TotalAmount, Doc_Applicationform, Doc_IDProof, Doc_DeathCert, Doc_CopyofFMC);
        }
        
        public string GetNoPropertyCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetNoPropertyCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetNoPropertyCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetNoPropertyCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string PopulateRooms(string UserId, string Password, string RoomTypeId, string TempleId) {
            return base.Channel.PopulateRooms(UserId, Password, RoomTypeId, TempleId);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRoomsAsync(string UserId, string Password, string RoomTypeId, string TempleId) {
            return base.Channel.PopulateRoomsAsync(UserId, Password, RoomTypeId, TempleId);
        }
        
        public string PopulateRoomType(string UserId, string Password) {
            return base.Channel.PopulateRoomType(UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRoomTypeAsync(string UserId, string Password) {
            return base.Channel.PopulateRoomTypeAsync(UserId, Password);
        }
        
        public string GetEndowmentRoomAmount(string UserId, string Password, string TempleID, string RoomID) {
            return base.Channel.GetEndowmentRoomAmount(UserId, Password, TempleID, RoomID);
        }
        
        public System.Threading.Tasks.Task<string> GetEndowmentRoomAmountAsync(string UserId, string Password, string TempleID, string RoomID) {
            return base.Channel.GetEndowmentRoomAmountAsync(UserId, Password, TempleID, RoomID);
        }
        
        public System.Data.DataTable GetLastSevaDetailsBlock(string templeid, string sevaId, string userid, string password) {
            return base.Channel.GetLastSevaDetailsBlock(templeid, sevaId, userid, password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetLastSevaDetailsBlockAsync(string templeid, string sevaId, string userid, string password) {
            return base.Channel.GetLastSevaDetailsBlockAsync(templeid, sevaId, userid, password);
        }
        
        public string GetAvailableRoomsDate(string UserId, string Password, string TempleID, string RoomID, string CheckinDate) {
            return base.Channel.GetAvailableRoomsDate(UserId, Password, TempleID, RoomID, CheckinDate);
        }
        
        public System.Threading.Tasks.Task<string> GetAvailableRoomsDateAsync(string UserId, string Password, string TempleID, string RoomID, string CheckinDate) {
            return base.Channel.GetAvailableRoomsDateAsync(UserId, Password, TempleID, RoomID, CheckinDate);
        }
        
        public string GetRoomBookingTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string RoomType, 
                    string RoomID, 
                    string RoombookingDate, 
                    string ApplicationNo, 
                    string AadhaarCardNo, 
                    string DevoteeName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string Gothram, 
                    string Nakshatram, 
                    string Gender, 
                    string Age, 
                    string MobileNumber, 
                    string EmailId, 
                    string HouseNo, 
                    string Location, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ApplicantName, 
                    string ApplicantRelation, 
                    string RoomAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof) {
            return base.Channel.GetRoomBookingTransactionNo(UserId, Password, LogindID, ServiceID, TempleID, RoomType, RoomID, RoombookingDate, ApplicationNo, AadhaarCardNo, DevoteeName, ProofDocumentID, ProofDocumentNumber, ProofDocumentName, Gothram, Nakshatram, Gender, Age, MobileNumber, EmailId, HouseNo, Location, CountryId, StateId, District, Mandal, Village, Pincode, StateName, DistrictName, MandalName, VillageName, ApplicantName, ApplicantRelation, RoomAmount, Usercharges, TotalAmount, Doc_Applicationform, Doc_IDProof);
        }
        
        public System.Threading.Tasks.Task<string> GetRoomBookingTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ServiceID, 
                    string TempleID, 
                    string RoomType, 
                    string RoomID, 
                    string RoombookingDate, 
                    string ApplicationNo, 
                    string AadhaarCardNo, 
                    string DevoteeName, 
                    string ProofDocumentID, 
                    string ProofDocumentNumber, 
                    string ProofDocumentName, 
                    string Gothram, 
                    string Nakshatram, 
                    string Gender, 
                    string Age, 
                    string MobileNumber, 
                    string EmailId, 
                    string HouseNo, 
                    string Location, 
                    string CountryId, 
                    string StateId, 
                    string District, 
                    string Mandal, 
                    string Village, 
                    string Pincode, 
                    string StateName, 
                    string DistrictName, 
                    string MandalName, 
                    string VillageName, 
                    string ApplicantName, 
                    string ApplicantRelation, 
                    string RoomAmount, 
                    string Usercharges, 
                    string TotalAmount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof) {
            return base.Channel.GetRoomBookingTransactionNoAsync(UserId, Password, LogindID, ServiceID, TempleID, RoomType, RoomID, RoombookingDate, ApplicationNo, AadhaarCardNo, DevoteeName, ProofDocumentID, ProofDocumentNumber, ProofDocumentName, Gothram, Nakshatram, Gender, Age, MobileNumber, EmailId, HouseNo, Location, CountryId, StateId, District, Mandal, Village, Pincode, StateName, DistrictName, MandalName, VillageName, ApplicantName, ApplicantRelation, RoomAmount, Usercharges, TotalAmount, Doc_Applicationform, Doc_IDProof);
        }
        
        public string PopulateRevenueDistrict(string userid, string password) {
            return base.Channel.PopulateRevenueDistrict(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRevenueDistrictAsync(string userid, string password) {
            return base.Channel.PopulateRevenueDistrictAsync(userid, password);
        }
        
        public string PopulateRevenueMandal(string userid, string password, string DistrictID) {
            return base.Channel.PopulateRevenueMandal(userid, password, DistrictID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRevenueMandalAsync(string userid, string password, string DistrictID) {
            return base.Channel.PopulateRevenueMandalAsync(userid, password, DistrictID);
        }
        
        public string PopulateRevenueVillage(string UserId, string Password, string DistrictID, string MandalID) {
            return base.Channel.PopulateRevenueVillage(UserId, Password, DistrictID, MandalID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRevenueVillageAsync(string UserId, string Password, string DistrictID, string MandalID) {
            return base.Channel.PopulateRevenueVillageAsync(UserId, Password, DistrictID, MandalID);
        }
        
        public string PopulateRevenueDocYear(string userid, string password) {
            return base.Channel.PopulateRevenueDocYear(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateRevenueDocYearAsync(string userid, string password) {
            return base.Channel.PopulateRevenueDocYearAsync(userid, password);
        }
        
        public string GetServiceChargesBasedOnServiceTpye(string ServiceId, string ServiceType, string DeliveryType, string UserId, string Password) {
            return base.Channel.GetServiceChargesBasedOnServiceTpye(ServiceId, ServiceType, DeliveryType, UserId, Password);
        }
        
        public System.Threading.Tasks.Task<string> GetServiceChargesBasedOnServiceTpyeAsync(string ServiceId, string ServiceType, string DeliveryType, string UserId, string Password) {
            return base.Channel.GetServiceChargesBasedOnServiceTpyeAsync(ServiceId, ServiceType, DeliveryType, UserId, Password);
        }
        
        public string PopulateFamilyMembershipServiceTypes(string userid, string password) {
            return base.Channel.PopulateFamilyMembershipServiceTypes(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateFamilyMembershipServiceTypesAsync(string userid, string password) {
            return base.Channel.PopulateFamilyMembershipServiceTypesAsync(userid, password);
        }
        
        public string PopulateOccupation(string UserId, string Password, string ServiceType) {
            return base.Channel.PopulateOccupation(UserId, Password, ServiceType);
        }
        
        public System.Threading.Tasks.Task<string> PopulateOccupationAsync(string UserId, string Password, string ServiceType) {
            return base.Channel.PopulateOccupationAsync(UserId, Password, ServiceType);
        }
        
        public string PopulateDeathReason(string UserId, string Password, string ServiceType) {
            return base.Channel.PopulateDeathReason(UserId, Password, ServiceType);
        }
        
        public System.Threading.Tasks.Task<string> PopulateDeathReasonAsync(string UserId, string Password, string ServiceType) {
            return base.Channel.PopulateDeathReasonAsync(UserId, Password, ServiceType);
        }
        
        public string PopulateReasonforCertificate(string UserId, string Password, string ServiceType) {
            return base.Channel.PopulateReasonforCertificate(UserId, Password, ServiceType);
        }
        
        public System.Threading.Tasks.Task<string> PopulateReasonforCertificateAsync(string UserId, string Password, string ServiceType) {
            return base.Channel.PopulateReasonforCertificateAsync(UserId, Password, ServiceType);
        }
        
        public string GetFamilyMembershipTransactionNo(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string ServiceType, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string Applicant_Name, 
                    string Gender, 
                    string Relation, 
                    string RelationName, 
                    string DOB, 
                    string Per_District, 
                    string Per_Mandal, 
                    string Per_Village, 
                    string Per_Door_No, 
                    string Per_Locality, 
                    string Per_Pincode, 
                    string StateId, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Mobile1, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string Postal_Pincode, 
                    string DeliveryType, 
                    string RationCardNo, 
                    string DeceasedName, 
                    string DeceasedFName, 
                    string DateofDeath, 
                    string ReasonforDeath, 
                    string Occupation, 
                    string ReasonforCertificate, 
                    string DeathPlace, 
                    string GridFamilyMemberDetails, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_DeathProof, 
                    string Work_Status) {
            return base.Channel.GetFamilyMembershipTransactionNo(UserId, Password, ServiceID, LogindID, ServiceType, AddressFlag, ApplicationNo, Applicant_Name, Gender, Relation, RelationName, DOB, Per_District, Per_Mandal, Per_Village, Per_Door_No, Per_Locality, Per_Pincode, StateId, Postal_District, Postal_Mandal, Postal_Village, Mobile1, Postal_Door_No, Postal_Locality, Postal_Pincode, DeliveryType, RationCardNo, DeceasedName, DeceasedFName, DateofDeath, ReasonforDeath, Occupation, ReasonforCertificate, DeathPlace, GridFamilyMemberDetails, Service_Charge, User_charges, Postal_Charge, Total_Amount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_DeathProof, Work_Status);
        }
        
        public System.Threading.Tasks.Task<string> GetFamilyMembershipTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string ServiceType, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string Applicant_Name, 
                    string Gender, 
                    string Relation, 
                    string RelationName, 
                    string DOB, 
                    string Per_District, 
                    string Per_Mandal, 
                    string Per_Village, 
                    string Per_Door_No, 
                    string Per_Locality, 
                    string Per_Pincode, 
                    string StateId, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Mobile1, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string Postal_Pincode, 
                    string DeliveryType, 
                    string RationCardNo, 
                    string DeceasedName, 
                    string DeceasedFName, 
                    string DateofDeath, 
                    string ReasonforDeath, 
                    string Occupation, 
                    string ReasonforCertificate, 
                    string DeathPlace, 
                    string GridFamilyMemberDetails, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string Doc_Aadhaar, 
                    string Doc_IDProof, 
                    string Doc_DeathProof, 
                    string Work_Status) {
            return base.Channel.GetFamilyMembershipTransactionNoAsync(UserId, Password, ServiceID, LogindID, ServiceType, AddressFlag, ApplicationNo, Applicant_Name, Gender, Relation, RelationName, DOB, Per_District, Per_Mandal, Per_Village, Per_Door_No, Per_Locality, Per_Pincode, StateId, Postal_District, Postal_Mandal, Postal_Village, Mobile1, Postal_Door_No, Postal_Locality, Postal_Pincode, DeliveryType, RationCardNo, DeceasedName, DeceasedFName, DateofDeath, ReasonforDeath, Occupation, ReasonforCertificate, DeathPlace, GridFamilyMemberDetails, Service_Charge, User_charges, Postal_Charge, Total_Amount, Doc_Applicationform, Doc_Aadhaar, Doc_IDProof, Doc_DeathProof, Work_Status);
        }
        
        public string GetFamilyMembershipCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetFamilyMembershipCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetFamilyMembershipCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetFamilyMembershipCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetPossessionTransactionNo(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string HouseOwnerName, 
                    string FatherHusbandName, 
                    string Perdist, 
                    string PerMandal, 
                    string PerVillage, 
                    string PerDoorNo, 
                    string PerLocality, 
                    string Income, 
                    string Age, 
                    string SurveyNo, 
                    string Extent, 
                    string ExtentinAcres, 
                    string Purpose, 
                    string DeliveryType, 
                    string InformantName, 
                    string RelationName, 
                    string RelationID, 
                    string PerPinCode, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string StateId, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Pincode, 
                    string Mobile1, 
                    string PhoneNo, 
                    string Email, 
                    string AAdharNo, 
                    string HouseBoundaries_East, 
                    string HouseBoundaries_West, 
                    string HouseBoundaries_North, 
                    string HouseBoundaries_South, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof) {
            return base.Channel.GetPossessionTransactionNo(UserId, Password, ServiceID, LogindID, AddressFlag, ApplicationNo, HouseOwnerName, FatherHusbandName, Perdist, PerMandal, PerVillage, PerDoorNo, PerLocality, Income, Age, SurveyNo, Extent, ExtentinAcres, Purpose, DeliveryType, InformantName, RelationName, RelationID, PerPinCode, Postal_Door_No, Postal_Locality, StateId, Postal_District, Postal_Mandal, Postal_Village, Pincode, Mobile1, PhoneNo, Email, AAdharNo, HouseBoundaries_East, HouseBoundaries_West, HouseBoundaries_North, HouseBoundaries_South, Service_Charge, User_charges, Postal_Charge, Total_Amount, Doc_Applicationform, Doc_IDProof);
        }
        
        public System.Threading.Tasks.Task<string> GetPossessionTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string AddressFlag, 
                    string ApplicationNo, 
                    string HouseOwnerName, 
                    string FatherHusbandName, 
                    string Perdist, 
                    string PerMandal, 
                    string PerVillage, 
                    string PerDoorNo, 
                    string PerLocality, 
                    string Income, 
                    string Age, 
                    string SurveyNo, 
                    string Extent, 
                    string ExtentinAcres, 
                    string Purpose, 
                    string DeliveryType, 
                    string InformantName, 
                    string RelationName, 
                    string RelationID, 
                    string PerPinCode, 
                    string Postal_Door_No, 
                    string Postal_Locality, 
                    string StateId, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Pincode, 
                    string Mobile1, 
                    string PhoneNo, 
                    string Email, 
                    string AAdharNo, 
                    string HouseBoundaries_East, 
                    string HouseBoundaries_West, 
                    string HouseBoundaries_North, 
                    string HouseBoundaries_South, 
                    string Service_Charge, 
                    string User_charges, 
                    string Postal_Charge, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string Doc_IDProof) {
            return base.Channel.GetPossessionTransactionNoAsync(UserId, Password, ServiceID, LogindID, AddressFlag, ApplicationNo, HouseOwnerName, FatherHusbandName, Perdist, PerMandal, PerVillage, PerDoorNo, PerLocality, Income, Age, SurveyNo, Extent, ExtentinAcres, Purpose, DeliveryType, InformantName, RelationName, RelationID, PerPinCode, Postal_Door_No, Postal_Locality, StateId, Postal_District, Postal_Mandal, Postal_Village, Pincode, Mobile1, PhoneNo, Email, AAdharNo, HouseBoundaries_East, HouseBoundaries_West, HouseBoundaries_North, HouseBoundaries_South, Service_Charge, User_charges, Postal_Charge, Total_Amount, Doc_Applicationform, Doc_IDProof);
        }
        
        public string GetPossessionCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetPossessionCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetPossessionCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetPossessionCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string PopulateSurveyNumber(string UserId, string Password, string DistrictID, string MandalID, string VillageID, string DocYear) {
            return base.Channel.PopulateSurveyNumber(UserId, Password, DistrictID, MandalID, VillageID, DocYear);
        }
        
        public System.Threading.Tasks.Task<string> PopulateSurveyNumberAsync(string UserId, string Password, string DistrictID, string MandalID, string VillageID, string DocYear) {
            return base.Channel.PopulateSurveyNumberAsync(UserId, Password, DistrictID, MandalID, VillageID, DocYear);
        }
        
        public string PopulateAdangaldetails(string UserId, string Password, string ApplicationNo, string DistrictID, string MandalID, string VillageID, string DocYear, string SurveyNo, string IsCropDetails) {
            return base.Channel.PopulateAdangaldetails(UserId, Password, ApplicationNo, DistrictID, MandalID, VillageID, DocYear, SurveyNo, IsCropDetails);
        }
        
        public System.Threading.Tasks.Task<string> PopulateAdangaldetailsAsync(string UserId, string Password, string ApplicationNo, string DistrictID, string MandalID, string VillageID, string DocYear, string SurveyNo, string IsCropDetails) {
            return base.Channel.PopulateAdangaldetailsAsync(UserId, Password, ApplicationNo, DistrictID, MandalID, VillageID, DocYear, SurveyNo, IsCropDetails);
        }
        
        public string GetAdangalTransactionNo(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ApplicationNo, 
                    string AddressFlag, 
                    string Doc_District_Id, 
                    string Doc_Mandal_Id, 
                    string Doc_Village_Id, 
                    string DocYear, 
                    string Doc_SurveyNo, 
                    string CropFlag, 
                    string Applicant_Name, 
                    string Gender, 
                    string FatherName, 
                    string Perstate, 
                    string Applicant_District, 
                    string Applicant_Mandal, 
                    string Applicant_Village, 
                    string Mobile_Number, 
                    string AADHARNo, 
                    string Delivery_Type, 
                    string Email, 
                    string Permanent_Door_No, 
                    string Permanent_Locality, 
                    string Permanent_Pincode, 
                    string PhoneNo, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Locality, 
                    string Postal_Door_No, 
                    string Postal_Pincode, 
                    string PostalState, 
                    string RationCardNo, 
                    string DateOfBirth, 
                    string Challan_Amount, 
                    string User_Charges, 
                    string Courier_Charges, 
                    string Total_Amount, 
                    string Doc_Applicationform) {
            return base.Channel.GetAdangalTransactionNo(UserId, Password, LogindID, ApplicationNo, AddressFlag, Doc_District_Id, Doc_Mandal_Id, Doc_Village_Id, DocYear, Doc_SurveyNo, CropFlag, Applicant_Name, Gender, FatherName, Perstate, Applicant_District, Applicant_Mandal, Applicant_Village, Mobile_Number, AADHARNo, Delivery_Type, Email, Permanent_Door_No, Permanent_Locality, Permanent_Pincode, PhoneNo, Postal_District, Postal_Mandal, Postal_Village, Postal_Locality, Postal_Door_No, Postal_Pincode, PostalState, RationCardNo, DateOfBirth, Challan_Amount, User_Charges, Courier_Charges, Total_Amount, Doc_Applicationform);
        }
        
        public System.Threading.Tasks.Task<string> GetAdangalTransactionNoAsync(
                    string UserId, 
                    string Password, 
                    string LogindID, 
                    string ApplicationNo, 
                    string AddressFlag, 
                    string Doc_District_Id, 
                    string Doc_Mandal_Id, 
                    string Doc_Village_Id, 
                    string DocYear, 
                    string Doc_SurveyNo, 
                    string CropFlag, 
                    string Applicant_Name, 
                    string Gender, 
                    string FatherName, 
                    string Perstate, 
                    string Applicant_District, 
                    string Applicant_Mandal, 
                    string Applicant_Village, 
                    string Mobile_Number, 
                    string AADHARNo, 
                    string Delivery_Type, 
                    string Email, 
                    string Permanent_Door_No, 
                    string Permanent_Locality, 
                    string Permanent_Pincode, 
                    string PhoneNo, 
                    string Postal_District, 
                    string Postal_Mandal, 
                    string Postal_Village, 
                    string Postal_Locality, 
                    string Postal_Door_No, 
                    string Postal_Pincode, 
                    string PostalState, 
                    string RationCardNo, 
                    string DateOfBirth, 
                    string Challan_Amount, 
                    string User_Charges, 
                    string Courier_Charges, 
                    string Total_Amount, 
                    string Doc_Applicationform) {
            return base.Channel.GetAdangalTransactionNoAsync(UserId, Password, LogindID, ApplicationNo, AddressFlag, Doc_District_Id, Doc_Mandal_Id, Doc_Village_Id, DocYear, Doc_SurveyNo, CropFlag, Applicant_Name, Gender, FatherName, Perstate, Applicant_District, Applicant_Mandal, Applicant_Village, Mobile_Number, AADHARNo, Delivery_Type, Email, Permanent_Door_No, Permanent_Locality, Permanent_Pincode, PhoneNo, Postal_District, Postal_Mandal, Postal_Village, Postal_Locality, Postal_Door_No, Postal_Pincode, PostalState, RationCardNo, DateOfBirth, Challan_Amount, User_Charges, Courier_Charges, Total_Amount, Doc_Applicationform);
        }
        
        public string GetAdangalCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetAdangalCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetAdangalCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetAdangalCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string GetFMBCopySurveyNumbers(string UserId, string Password, string DistrictID, string MandalID, string VillageID) {
            return base.Channel.GetFMBCopySurveyNumbers(UserId, Password, DistrictID, MandalID, VillageID);
        }
        
        public System.Threading.Tasks.Task<string> GetFMBCopySurveyNumbersAsync(string UserId, string Password, string DistrictID, string MandalID, string VillageID) {
            return base.Channel.GetFMBCopySurveyNumbersAsync(UserId, Password, DistrictID, MandalID, VillageID);
        }
        
        public string GetFMBCopyDetails(string UserID, string Password, string District, string Mandal, string Village, string Surveyno, string ApplicationNo) {
            return base.Channel.GetFMBCopyDetails(UserID, Password, District, Mandal, Village, Surveyno, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<string> GetFMBCopyDetailsAsync(string UserID, string Password, string District, string Mandal, string Village, string Surveyno, string ApplicationNo) {
            return base.Channel.GetFMBCopyDetailsAsync(UserID, Password, District, Mandal, Village, Surveyno, ApplicationNo);
        }
        
        public string FMBCopyGetTransactionID(
                    string UserID, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string FMB_District, 
                    string FMB_Mandal, 
                    string FMB_Village, 
                    string FMB_SurveyNo, 
                    string ApplicationNumber, 
                    string Applicant_Name, 
                    string FatherName, 
                    string AAdharNo, 
                    string Delivery_Type, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string Permanent_Door_No, 
                    string Permanent_Pincode, 
                    string MobileNo, 
                    string Email, 
                    string Service_charge, 
                    string User_Charge, 
                    string Postal_Charge, 
                    string challan_amount, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string FMBSign, 
                    string FMBHash) {
            return base.Channel.FMBCopyGetTransactionID(UserID, Password, ServiceID, LogindID, FMB_District, FMB_Mandal, FMB_Village, FMB_SurveyNo, ApplicationNumber, Applicant_Name, FatherName, AAdharNo, Delivery_Type, Permanent_District, Permanent_Mandal, Permanent_Village, Permanent_Door_No, Permanent_Pincode, MobileNo, Email, Service_charge, User_Charge, Postal_Charge, challan_amount, Total_Amount, Doc_Applicationform, FMBSign, FMBHash);
        }
        
        public System.Threading.Tasks.Task<string> FMBCopyGetTransactionIDAsync(
                    string UserID, 
                    string Password, 
                    string ServiceID, 
                    string LogindID, 
                    string FMB_District, 
                    string FMB_Mandal, 
                    string FMB_Village, 
                    string FMB_SurveyNo, 
                    string ApplicationNumber, 
                    string Applicant_Name, 
                    string FatherName, 
                    string AAdharNo, 
                    string Delivery_Type, 
                    string Permanent_District, 
                    string Permanent_Mandal, 
                    string Permanent_Village, 
                    string Permanent_Door_No, 
                    string Permanent_Pincode, 
                    string MobileNo, 
                    string Email, 
                    string Service_charge, 
                    string User_Charge, 
                    string Postal_Charge, 
                    string challan_amount, 
                    string Total_Amount, 
                    string Doc_Applicationform, 
                    string FMBSign, 
                    string FMBHash) {
            return base.Channel.FMBCopyGetTransactionIDAsync(UserID, Password, ServiceID, LogindID, FMB_District, FMB_Mandal, FMB_Village, FMB_SurveyNo, ApplicationNumber, Applicant_Name, FatherName, AAdharNo, Delivery_Type, Permanent_District, Permanent_Mandal, Permanent_Village, Permanent_Door_No, Permanent_Pincode, MobileNo, Email, Service_charge, User_Charge, Postal_Charge, challan_amount, Total_Amount, Doc_Applicationform, FMBSign, FMBHash);
        }
        
        public string GetFMBCopyCertificatePDF(string UserId, string Password, string Appno) {
            return base.Channel.GetFMBCopyCertificatePDF(UserId, Password, Appno);
        }
        
        public System.Threading.Tasks.Task<string> GetFMBCopyCertificatePDFAsync(string UserId, string Password, string Appno) {
            return base.Channel.GetFMBCopyCertificatePDFAsync(UserId, Password, Appno);
        }
        
        public string PopulateCommunityDOBServiceTypeList(string userid, string password) {
            return base.Channel.PopulateCommunityDOBServiceTypeList(userid, password);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCommunityDOBServiceTypeListAsync(string userid, string password) {
            return base.Channel.PopulateCommunityDOBServiceTypeListAsync(userid, password);
        }
        
        public string PopulateCommunityOftheApplicantCaste(string UserId, string Password, string ServiceType, string DistrictID) {
            return base.Channel.PopulateCommunityOftheApplicantCaste(UserId, Password, ServiceType, DistrictID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCommunityOftheApplicantCasteAsync(string UserId, string Password, string ServiceType, string DistrictID) {
            return base.Channel.PopulateCommunityOftheApplicantCasteAsync(UserId, Password, ServiceType, DistrictID);
        }
        
        public string PopulateCommunityOftheFatherCaste(string UserId, string Password, string ServiceType, string DistrictID) {
            return base.Channel.PopulateCommunityOftheFatherCaste(UserId, Password, ServiceType, DistrictID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCommunityOftheFatherCasteAsync(string UserId, string Password, string ServiceType, string DistrictID) {
            return base.Channel.PopulateCommunityOftheFatherCasteAsync(UserId, Password, ServiceType, DistrictID);
        }
        
        public string PopulateCommunityOftheMotherCaste(string UserId, string Password, string DistrictID) {
            return base.Channel.PopulateCommunityOftheMotherCaste(UserId, Password, DistrictID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateCommunityOftheMotherCasteAsync(string UserId, string Password, string DistrictID) {
            return base.Channel.PopulateCommunityOftheMotherCasteAsync(UserId, Password, DistrictID);
        }
        
        public string PopulateSubtribeApplicant(string UserId, string Password, string DistrictID, string Caste, string ServiceType) {
            return base.Channel.PopulateSubtribeApplicant(UserId, Password, DistrictID, Caste, ServiceType);
        }
        
        public System.Threading.Tasks.Task<string> PopulateSubtribeApplicantAsync(string UserId, string Password, string DistrictID, string Caste, string ServiceType) {
            return base.Channel.PopulateSubtribeApplicantAsync(UserId, Password, DistrictID, Caste, ServiceType);
        }
    }
}
